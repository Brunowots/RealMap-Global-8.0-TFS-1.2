-- phpMyAdmin SQL Dump
-- version 3.5.2.2
-- http://www.phpmyadmin.net
--
-- Servidor: 127.0.0.1:3306

-- Tempo de Geração: 
-- Versão do Servidor: 5.5.27
-- Versão do PHP: 5.4.6

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Banco de Dados: `global`
--

-- --------------------------------------------------------

--
-- Estrutura da tabela `accounts`
--

CREATE TABLE `accounts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(32) NOT NULL,
  `password` char(40) NOT NULL,
  `type` int(11) NOT NULL DEFAULT '1',
  `premdays` int(11) NOT NULL DEFAULT '0',
  `lastday` int(10) unsigned NOT NULL DEFAULT '0',
  `email` varchar(255) NOT NULL DEFAULT '',
  `creation` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Extraindo dados da tabela `accounts`
--

INSERT INTO `accounts` (`id`, `name`, `password`, `type`, `premdays`, `lastday`, `email`, `creation`) VALUES
(1, '111111', '3d4f2bf07dc1be38b20cd6e46949a1071f9d0e3d', 5, 999, 1576016168, 'huehueh@hotmail.com', 1556718208),
(2, '222222', '3d4f2bf07dc1be38b20cd6e46949a1071f9d0e3d', 1, 99, 1575834153, '', 0);

-- --------------------------------------------------------

--
-- Estrutura da tabela `account_bans`
--

CREATE TABLE `account_bans` (
  `account_id` int(11) NOT NULL,
  `reason` varchar(255) NOT NULL,
  `banned_at` bigint(20) NOT NULL,
  `expires_at` bigint(20) NOT NULL,
  `banned_by` int(11) NOT NULL,
  PRIMARY KEY (`account_id`),
  KEY `banned_by` (`banned_by`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `account_ban_history`
--

CREATE TABLE `account_ban_history` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `account_id` int(11) NOT NULL,
  `reason` varchar(255) NOT NULL,
  `banned_at` bigint(20) NOT NULL,
  `expired_at` bigint(20) NOT NULL,
  `banned_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `account_id` (`account_id`),
  KEY `banned_by` (`banned_by`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `account_viplist`
--

CREATE TABLE `account_viplist` (
  `account_id` int(11) NOT NULL COMMENT 'id of account whose viplist entry it is',
  `player_id` int(11) NOT NULL COMMENT 'id of target player of viplist entry',
  `description` varchar(128) NOT NULL DEFAULT '',
  `icon` tinyint(2) unsigned NOT NULL DEFAULT '0',
  `notify` tinyint(1) NOT NULL DEFAULT '0',
  UNIQUE KEY `account_player_index` (`account_id`,`player_id`),
  KEY `player_id` (`player_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `guilds`
--

CREATE TABLE `guilds` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `ownerid` int(11) NOT NULL,
  `creationdata` int(11) NOT NULL,
  `motd` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`),
  UNIQUE KEY `ownerid` (`ownerid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--
-- Gatilhos `guilds`
--
DROP TRIGGER IF EXISTS `oncreate_guilds`;
DELIMITER //
CREATE TRIGGER `oncreate_guilds` AFTER INSERT ON `guilds`
 FOR EACH ROW BEGIN
    INSERT INTO `guild_ranks` (`name`, `level`, `guild_id`) VALUES ('the Leader', 3, NEW.`id`);
    INSERT INTO `guild_ranks` (`name`, `level`, `guild_id`) VALUES ('a Vice-Leader', 2, NEW.`id`);
    INSERT INTO `guild_ranks` (`name`, `level`, `guild_id`) VALUES ('a Member', 1, NEW.`id`);
END
//
DELIMITER ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `guildwar_kills`
--

CREATE TABLE `guildwar_kills` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `killer` varchar(50) NOT NULL,
  `target` varchar(50) NOT NULL,
  `killerguild` int(11) NOT NULL DEFAULT '0',
  `targetguild` int(11) NOT NULL DEFAULT '0',
  `warid` int(11) NOT NULL DEFAULT '0',
  `time` bigint(15) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `warid` (`warid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `guild_invites`
--

CREATE TABLE `guild_invites` (
  `player_id` int(11) NOT NULL DEFAULT '0',
  `guild_id` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`player_id`,`guild_id`),
  KEY `guild_id` (`guild_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `guild_membership`
--

CREATE TABLE `guild_membership` (
  `player_id` int(11) NOT NULL,
  `guild_id` int(11) NOT NULL,
  `rank_id` int(11) NOT NULL,
  `nick` varchar(15) NOT NULL DEFAULT '',
  PRIMARY KEY (`player_id`),
  KEY `guild_id` (`guild_id`),
  KEY `rank_id` (`rank_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `guild_ranks`
--

CREATE TABLE `guild_ranks` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `guild_id` int(11) NOT NULL COMMENT 'guild',
  `name` varchar(255) NOT NULL COMMENT 'rank name',
  `level` int(11) NOT NULL COMMENT 'rank level - leader, vice, member, maybe something else',
  PRIMARY KEY (`id`),
  KEY `guild_id` (`guild_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `guild_wars`
--

CREATE TABLE `guild_wars` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `guild1` int(11) NOT NULL DEFAULT '0',
  `guild2` int(11) NOT NULL DEFAULT '0',
  `name1` varchar(255) NOT NULL,
  `name2` varchar(255) NOT NULL,
  `status` tinyint(2) NOT NULL DEFAULT '0',
  `started` bigint(15) NOT NULL DEFAULT '0',
  `ended` bigint(15) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `guild1` (`guild1`),
  KEY `guild2` (`guild2`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `houses`
--

CREATE TABLE `houses` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `owner` int(11) NOT NULL,
  `paid` int(10) unsigned NOT NULL DEFAULT '0',
  `warnings` int(11) NOT NULL DEFAULT '0',
  `name` varchar(255) NOT NULL,
  `rent` int(11) NOT NULL DEFAULT '0',
  `town_id` int(11) NOT NULL DEFAULT '0',
  `bid` int(11) NOT NULL DEFAULT '0',
  `bid_end` int(11) NOT NULL DEFAULT '0',
  `last_bid` int(11) NOT NULL DEFAULT '0',
  `highest_bidder` int(11) NOT NULL DEFAULT '0',
  `size` int(11) NOT NULL DEFAULT '0',
  `beds` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `owner` (`owner`),
  KEY `town_id` (`town_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=204 ;

--
-- Extraindo dados da tabela `houses`
--

INSERT INTO `houses` (`id`, `owner`, `paid`, `warnings`, `name`, `rent`, `town_id`, `bid`, `bid_end`, `last_bid`, `highest_bidder`, `size`, `beds`) VALUES
(1, 0, 0, 0, 'Blessed Shield Guildhall', 8090, 1, 0, 0, 0, 0, 241, 9),
(2, 0, 0, 0, 'Dagger Alley 1', 2665, 1, 0, 0, 0, 0, 91, 2),
(3, 0, 0, 0, 'Dream Street 1 (Shop)', 4330, 1, 0, 0, 0, 0, 147, 2),
(4, 0, 0, 0, 'Dream Street 2', 3340, 1, 0, 0, 0, 0, 121, 2),
(5, 0, 0, 0, 'Dream Street 3', 2710, 1, 0, 0, 0, 0, 98, 2),
(6, 0, 0, 0, 'Dream Street 4', 3765, 1, 0, 0, 0, 0, 132, 4),
(7, 0, 0, 0, 'Elm Street 1', 2710, 1, 0, 0, 0, 0, 91, 2),
(8, 0, 0, 0, 'Elm Street 2', 2665, 1, 0, 0, 0, 0, 95, 2),
(9, 0, 0, 0, 'Elm Street 3', 2855, 1, 0, 0, 0, 0, 91, 3),
(10, 0, 0, 0, 'Elm Street 4', 3765, 1, 0, 0, 0, 0, 90, 2),
(11, 0, 0, 0, 'Golden Axe Guildhall', 10485, 1, 0, 0, 0, 0, 345, 10),
(12, 0, 0, 0, 'Iron Alley 1', 3450, 1, 0, 0, 0, 0, 113, 4),
(13, 0, 0, 0, 'Iron Alley 2', 3450, 1, 0, 0, 0, 0, 112, 4),
(14, 0, 0, 0, 'Loot Lane 1 (Shop)', 4565, 1, 0, 0, 0, 0, 166, 3),
(15, 0, 0, 0, 'Lucky Lane 1 (Shop)', 6960, 1, 0, 0, 0, 0, 233, 4),
(16, 0, 0, 0, 'Market Street 1', 6680, 1, 0, 0, 0, 0, 211, 3),
(17, 0, 0, 0, 'Market Street 2', 4925, 1, 0, 0, 0, 0, 167, 3),
(18, 0, 0, 0, 'Market Street 3', 3475, 1, 0, 0, 0, 0, 123, 2),
(19, 0, 0, 0, 'Market Street 4 (Shop)', 5105, 1, 0, 0, 0, 0, 178, 3),
(20, 0, 0, 0, 'Market Street 5 (Shop)', 6375, 1, 0, 0, 0, 0, 202, 4),
(21, 0, 0, 0, 'Market Street 6', 5485, 1, 0, 0, 0, 0, 172, 5),
(22, 0, 0, 0, 'Market Street 7', 2305, 1, 0, 0, 0, 0, 81, 2),
(23, 0, 0, 0, 'Mystic Lane 1', 2945, 1, 0, 0, 0, 0, 105, 3),
(24, 0, 0, 0, 'Mystic Lane 2', 2980, 1, 0, 0, 0, 0, 104, 2),
(25, 0, 0, 0, 'Old Lighthouse', 3610, 1, 0, 0, 0, 0, 125, 2),
(26, 0, 0, 0, 'Paupers Palace, Flat 01', 405, 1, 0, 0, 0, 0, 17, 1),
(27, 0, 0, 0, 'Paupers Palace, Flat 02', 450, 1, 0, 0, 0, 0, 17, 1),
(28, 0, 0, 0, 'Paupers Palace, Flat 03', 405, 1, 0, 0, 0, 0, 15, 1),
(29, 0, 0, 0, 'Paupers Palace, Flat 04', 450, 1, 0, 0, 0, 0, 19, 1),
(30, 0, 0, 0, 'Paupers Palace, Flat 05', 315, 1, 0, 0, 0, 0, 14, 1),
(31, 0, 0, 0, 'Paupers Palace, Flat 06', 450, 1, 0, 0, 0, 0, 21, 1),
(32, 0, 0, 0, 'Paupers Palace, Flat 07', 685, 1, 0, 0, 0, 0, 23, 2),
(33, 0, 0, 0, 'Paupers Palace, Flat 11', 315, 1, 0, 0, 0, 0, 12, 1),
(34, 0, 0, 0, 'Paupers Palace, Flat 12', 685, 1, 0, 0, 0, 0, 22, 2),
(35, 0, 0, 0, 'Paupers Palace, Flat 13', 450, 1, 0, 0, 0, 0, 16, 1),
(36, 0, 0, 0, 'Paupers Palace, Flat 14', 585, 1, 0, 0, 0, 0, 22, 1),
(37, 0, 0, 0, 'Paupers Palace, Flat 15', 450, 1, 0, 0, 0, 0, 16, 1),
(38, 0, 0, 0, 'Paupers Palace, Flat 16', 585, 1, 0, 0, 0, 0, 22, 1),
(39, 0, 0, 0, 'Paupers Palace, Flat 17', 450, 1, 0, 0, 0, 0, 16, 1),
(40, 0, 0, 0, 'Paupers Palace, Flat 18', 315, 1, 0, 0, 0, 0, 12, 1),
(41, 0, 0, 0, 'Paupers Palace, Flat 21', 315, 1, 0, 0, 0, 0, 12, 1),
(42, 0, 0, 0, 'Paupers Palace, Flat 22', 450, 1, 0, 0, 0, 0, 16, 1),
(43, 0, 0, 0, 'Paupers Palace, Flat 23', 585, 1, 0, 0, 0, 0, 22, 1),
(44, 0, 0, 0, 'Paupers Palace, Flat 24', 450, 1, 0, 0, 0, 0, 16, 1),
(45, 0, 0, 0, 'Paupers Palace, Flat 25', 585, 1, 0, 0, 0, 0, 22, 1),
(46, 0, 0, 0, 'Paupers Palace, Flat 26', 450, 1, 0, 0, 0, 0, 16, 1),
(47, 0, 0, 0, 'Paupers Palace, Flat 27', 685, 1, 0, 0, 0, 0, 22, 2),
(48, 0, 0, 0, 'Paupers Palace, Flat 28', 315, 1, 0, 0, 0, 0, 12, 1),
(49, 0, 0, 0, 'Paupers Palace, Flat 31', 855, 1, 0, 0, 0, 0, 28, 1),
(50, 0, 0, 0, 'Paupers Palace, Flat 32', 1135, 1, 0, 0, 0, 0, 38, 2),
(51, 0, 0, 0, 'Paupers Palace, Flat 33', 765, 1, 0, 0, 0, 0, 28, 1),
(52, 0, 0, 0, 'Paupers Palace, Flat 34', 1675, 1, 0, 0, 0, 0, 46, 2),
(53, 0, 0, 0, 'Salvation Street 1 (Shop)', 6240, 1, 0, 0, 0, 0, 212, 4),
(54, 0, 0, 0, 'Salvation Street 2', 3790, 1, 0, 0, 0, 0, 126, 2),
(55, 0, 0, 0, 'Salvation Street 3', 3790, 1, 0, 0, 0, 0, 124, 2),
(56, 0, 0, 0, 'Seagull Walk 1', 5095, 1, 0, 0, 0, 0, 170, 2),
(57, 0, 0, 0, 'Seagull Walk 2', 2765, 1, 0, 0, 0, 0, 106, 3),
(58, 0, 0, 0, 'Silver Street 1', 2565, 1, 0, 0, 0, 0, 98, 1),
(59, 0, 0, 0, 'Silver Street 2', 1980, 1, 0, 0, 0, 0, 78, 1),
(60, 0, 0, 0, 'Silver Street 3', 1980, 1, 0, 0, 0, 0, 80, 1),
(61, 0, 0, 0, 'Silver Street 4', 3295, 1, 0, 0, 0, 0, 123, 2),
(62, 0, 0, 0, 'Steel Home', 13845, 1, 0, 0, 0, 0, 424, 13),
(63, 0, 0, 0, 'Swamp Watch', 11090, 1, 0, 0, 0, 0, 246, 6),
(64, 0, 0, 0, 'Alai Flats, Flat 01', 765, 2, 0, 0, 0, 0, 26, 1),
(65, 0, 0, 0, 'Alai Flats, Flat 02', 765, 2, 0, 0, 0, 0, 27, 1),
(66, 0, 0, 0, 'Alai Flats, Flat 03', 765, 2, 0, 0, 0, 0, 27, 1),
(67, 0, 0, 0, 'Alai Flats, Flat 04', 765, 2, 0, 0, 0, 0, 23, 1),
(68, 0, 0, 0, 'Alai Flats, Flat 05', 1225, 2, 0, 0, 0, 0, 41, 2),
(69, 0, 0, 0, 'Alai Flats, Flat 06', 1225, 2, 0, 0, 0, 0, 36, 2),
(70, 0, 0, 0, 'Alai Flats, Flat 07', 765, 2, 0, 0, 0, 0, 29, 1),
(71, 0, 0, 0, 'Alai Flats, Flat 08', 765, 2, 0, 0, 0, 0, 29, 1),
(72, 0, 0, 0, 'Alai Flats, Flat 11', 765, 2, 0, 0, 0, 0, 26, 1),
(73, 0, 0, 0, 'Alai Flats, Flat 12', 765, 2, 0, 0, 0, 0, 26, 1),
(74, 0, 0, 0, 'Alai Flats, Flat 13', 765, 2, 0, 0, 0, 0, 25, 1),
(75, 0, 0, 0, 'Alai Flats, Flat 14', 900, 2, 0, 0, 0, 0, 29, 1),
(76, 0, 0, 0, 'Alai Flats, Flat 15', 1450, 2, 0, 0, 0, 0, 45, 2),
(77, 0, 0, 0, 'Alai Flats, Flat 16', 1450, 2, 0, 0, 0, 0, 40, 2),
(78, 0, 0, 0, 'Alai Flats, Flat 17', 900, 2, 0, 0, 0, 0, 26, 1),
(79, 0, 0, 0, 'Alai Flats, Flat 18', 900, 2, 0, 0, 0, 0, 26, 1),
(80, 0, 0, 0, 'Alai Flats, Flat 21', 765, 2, 0, 0, 0, 0, 27, 1),
(81, 0, 0, 0, 'Alai Flats, Flat 22', 765, 2, 0, 0, 0, 0, 27, 1),
(82, 0, 0, 0, 'Alai Flats, Flat 23', 765, 2, 0, 0, 0, 0, 25, 1),
(83, 0, 0, 0, 'Alai Flats, Flat 24', 900, 2, 0, 0, 0, 0, 29, 1),
(84, 0, 0, 0, 'Alai Flats, Flat 25', 1450, 2, 0, 0, 0, 0, 45, 2),
(85, 0, 0, 0, 'Alai Flats, Flat 26', 1450, 2, 0, 0, 0, 0, 41, 2),
(86, 0, 0, 0, 'Alai Flats, Flat 27', 900, 2, 0, 0, 0, 0, 30, 1),
(87, 0, 0, 0, 'Alai Flats, Flat 28', 900, 2, 0, 0, 0, 0, 30, 1),
(88, 0, 0, 0, 'Beach Home Apartments, Flat 01', 2200, 2, 0, 0, 0, 0, 25, 1),
(89, 0, 0, 0, 'Beach Home Apartments, Flat 02', 2200, 2, 0, 0, 0, 0, 27, 1),
(90, 0, 0, 0, 'Beach Home Apartments, Flat 03', 2300, 2, 0, 0, 0, 0, 22, 1),
(91, 0, 0, 0, 'Beach Home Apartments, Flat 04', 3300, 2, 0, 0, 0, 0, 22, 1),
(92, 0, 0, 0, 'Beach Home Apartments, Flat 05', 715, 2, 0, 0, 0, 0, 25, 1),
(93, 0, 0, 0, 'Beach Home Apartments, Flat 06', 1145, 2, 0, 0, 0, 0, 33, 2),
(94, 0, 0, 0, 'Beach Home Apartments, Flat 11', 715, 2, 0, 0, 0, 0, 24, 1),
(95, 0, 0, 0, 'Beach Home Apartments, Flat 12', 880, 2, 0, 0, 0, 0, 26, 1),
(96, 0, 0, 0, 'Beach Home Apartments, Flat 13', 880, 2, 0, 0, 0, 0, 24, 1),
(97, 0, 0, 0, 'Beach Home Apartments, Flat 14', 385, 2, 0, 0, 0, 0, 12, 1),
(98, 0, 0, 0, 'Beach Home Apartments, Flat 15', 385, 2, 0, 0, 0, 0, 12, 1),
(99, 0, 0, 0, 'Beach Home Apartments, Flat 16', 1145, 2, 0, 0, 0, 0, 30, 2),
(100, 0, 0, 0, 'Bloodhall', 15270, 2, 0, 0, 0, 0, 582, 23),
(101, 0, 0, 0, 'Castle of Greenshore', 18860, 2, 0, 0, 0, 0, 446, 12),
(102, 0, 0, 0, 'Dark Mansion', 17845, 2, 0, 0, 0, 0, 506, 17),
(103, 0, 0, 0, 'Demon Tower', 3340, 2, 0, 0, 0, 0, 96, 2),
(104, 0, 0, 0, 'Farm Lane, 1st floor', 4000, 2, 0, 0, 0, 0, 30, 0),
(105, 0, 0, 0, 'Farm Lane, 2nd Floor (Shop)', 945, 2, 0, 0, 0, 0, 30, 0),
(106, 0, 0, 0, 'Farm Lane, Basement (Shop)', 945, 2, 0, 0, 0, 0, 30, 0),
(107, 0, 0, 0, 'Fibula Clanhall', 11430, 2, 0, 0, 0, 0, 248, 10),
(108, 0, 0, 0, 'Fibula Village 1', 845, 2, 0, 0, 0, 0, 20, 1),
(109, 0, 0, 0, 'Fibula Village 2', 845, 2, 0, 0, 0, 0, 20, 1),
(110, 0, 0, 0, 'Fibula Village 3', 3810, 2, 0, 0, 0, 0, 82, 4),
(111, 0, 0, 0, 'Fibula Village 4', 1790, 2, 0, 0, 0, 0, 40, 2),
(112, 0, 0, 0, 'Fibula Village 5', 1790, 2, 0, 0, 0, 0, 40, 2),
(113, 0, 0, 0, 'Fibula Village, Bar', 5235, 2, 0, 0, 0, 0, 115, 2),
(114, 0, 0, 0, 'Fibula Village, Tower Flat', 5105, 2, 0, 0, 0, 0, 122, 2),
(115, 0, 0, 0, 'Fibula Village, Villa', 11490, 2, 0, 0, 0, 0, 333, 7),
(116, 0, 0, 0, 'Greenshore Clanhall', 10800, 2, 0, 0, 0, 0, 254, 10),
(117, 0, 0, 0, 'Greenshore Village 1', 2420, 2, 0, 0, 0, 0, 49, 3),
(118, 0, 0, 0, 'Greenshore Village 2', 780, 2, 0, 0, 0, 0, 21, 1),
(119, 0, 0, 0, 'Greenshore Village 3', 780, 2, 0, 0, 0, 0, 22, 1),
(120, 0, 0, 0, 'Greenshore Village 4', 780, 2, 0, 0, 0, 0, 23, 1),
(121, 0, 0, 0, 'Greenshore Village 5', 780, 2, 0, 0, 0, 0, 22, 1),
(122, 0, 0, 0, 'Greenshore Village 6', 4360, 2, 0, 0, 0, 0, 106, 2),
(123, 0, 0, 0, 'Greenshore Village 7', 1260, 2, 0, 0, 0, 0, 35, 1),
(124, 0, 0, 0, 'Greenshore Village, Shop', 1800, 2, 0, 0, 0, 0, 51, 1),
(125, 0, 0, 0, 'Greenshore Village, Villa', 8700, 2, 0, 0, 0, 0, 232, 4),
(126, 0, 0, 0, 'Guildhall of the Red Rose', 27725, 2, 0, 0, 0, 0, 517, 15),
(127, 0, 0, 0, 'Halls of the Adventurers', 15380, 2, 0, 0, 0, 0, 432, 18),
(128, 0, 0, 0, 'Harbour Place 1', 3000, 2, 0, 0, 0, 0, 35, 0),
(129, 0, 0, 0, 'Harbour Place 2', 3500, 2, 0, 0, 0, 0, 42, 1),
(130, 0, 0, 0, 'Harbour Street 4', 935, 2, 0, 0, 0, 0, 25, 1),
(131, 0, 0, 0, 'Lower Swamp Lane 1', 4740, 2, 0, 0, 0, 0, 121, 4),
(132, 0, 0, 0, 'Lower Swamp Lane 3', 4740, 2, 0, 0, 0, 0, 121, 4),
(133, 0, 0, 0, 'Main Street 9, 1st floor', 4500, 2, 0, 0, 0, 0, 49, 0),
(134, 0, 0, 0, 'Main Street 9a, 2nd floor (Shop)', 765, 2, 0, 0, 0, 0, 27, 0),
(135, 0, 0, 0, 'Main Street 9b, 2nd floor (Shop)', 1260, 2, 0, 0, 0, 0, 43, 0),
(136, 0, 0, 0, 'Mercenary Tower', 41955, 2, 0, 0, 0, 0, 862, 26),
(137, 0, 0, 0, 'Mill Avenue 1 (Shop)', 1300, 2, 0, 0, 0, 0, 40, 1),
(138, 0, 0, 0, 'Mill Avenue 2 (Shop)', 2350, 2, 0, 0, 0, 0, 72, 2),
(139, 0, 0, 0, 'Mill Avenue 3', 1400, 2, 0, 0, 0, 0, 37, 2),
(140, 0, 0, 0, 'Mill Avenue 4', 1400, 2, 0, 0, 0, 0, 36, 2),
(141, 0, 0, 0, 'Mill Avenue 5', 3250, 2, 0, 0, 0, 0, 96, 4),
(142, 0, 0, 0, 'Snake Tower', 29720, 2, 0, 0, 0, 0, 790, 21),
(143, 0, 0, 0, 'Sorcerer''s Avenue 1a', 1255, 2, 0, 0, 0, 0, 30, 2),
(144, 0, 0, 0, 'Sorcerer''s Avenue 1b', 1035, 2, 0, 0, 0, 0, 25, 2),
(145, 0, 0, 0, 'Sorcerer''s Avenue 1c', 1255, 2, 0, 0, 0, 0, 30, 2),
(146, 0, 0, 0, 'Sorcerer''s Avenue 5', 2965, 2, 0, 0, 0, 0, 70, 1),
(147, 0, 0, 0, 'Sorcerer''s Avenue Labs 2a', 715, 2, 0, 0, 0, 0, 20, 1),
(148, 0, 0, 0, 'Sorcerer''s Avenue Labs 2b', 715, 2, 0, 0, 0, 0, 20, 1),
(149, 0, 0, 0, 'Sorcerer''s Avenue Labs 2c', 715, 2, 0, 0, 0, 0, 24, 1),
(150, 0, 0, 0, 'Sorcerer''s Avenue Labs 2d', 715, 2, 0, 0, 0, 0, 21, 1),
(151, 0, 0, 0, 'Sorcerer''s Avenue Labs 2e', 715, 2, 0, 0, 0, 0, 21, 1),
(152, 0, 0, 0, 'Sorcerer''s Avenue Labs 2f', 715, 2, 0, 0, 0, 0, 21, 1),
(153, 0, 0, 0, 'Southern Thais Guildhall', 22440, 2, 0, 0, 0, 0, 536, 16),
(154, 0, 0, 0, 'Spiritkeep', 19210, 2, 0, 0, 0, 0, 645, 23),
(155, 0, 0, 0, 'Sunset Homes, Flat 01', 2000, 2, 0, 0, 0, 0, 20, 1),
(156, 0, 0, 0, 'Sunset Homes, Flat 02', 2000, 2, 0, 0, 0, 0, 20, 1),
(157, 0, 0, 0, 'Sunset Homes, Flat 03', 2000, 2, 0, 0, 0, 0, 20, 1),
(158, 0, 0, 0, 'Sunset Homes, Flat 11', 520, 2, 0, 0, 0, 0, 20, 1),
(159, 0, 0, 0, 'Sunset Homes, Flat 12', 520, 2, 0, 0, 0, 0, 20, 1),
(160, 0, 0, 0, 'Sunset Homes, Flat 13', 860, 2, 0, 0, 0, 0, 28, 2),
(161, 0, 0, 0, 'Sunset Homes, Flat 14', 520, 2, 0, 0, 0, 0, 20, 1),
(162, 0, 0, 0, 'Sunset Homes, Flat 21', 520, 2, 0, 0, 0, 0, 20, 1),
(163, 0, 0, 0, 'Sunset Homes, Flat 22', 520, 2, 0, 0, 0, 0, 20, 1),
(164, 0, 0, 0, 'Sunset Homes, Flat 23', 860, 2, 0, 0, 0, 0, 28, 2),
(165, 0, 0, 0, 'Sunset Homes, Flat 24', 520, 2, 0, 0, 0, 0, 20, 1),
(167, 0, 0, 0, 'Thais Clanhall', 8420, 2, 0, 0, 0, 0, 298, 10),
(168, 0, 0, 0, 'Thais Hostel', 6980, 2, 0, 0, 0, 0, 144, 24),
(169, 0, 0, 0, 'The City Wall 1a', 1270, 2, 0, 0, 0, 0, 36, 2),
(170, 0, 0, 0, 'The City Wall 1b', 1270, 2, 0, 0, 0, 0, 36, 2),
(171, 0, 0, 0, 'The City Wall 3a', 1045, 2, 0, 0, 0, 0, 30, 2),
(172, 0, 0, 0, 'The City Wall 3b', 1045, 2, 0, 0, 0, 0, 30, 2),
(173, 0, 0, 0, 'The City Wall 3c', 1045, 2, 0, 0, 0, 0, 30, 2),
(174, 0, 0, 0, 'The City Wall 3d', 1045, 2, 0, 0, 0, 0, 30, 2),
(175, 0, 0, 0, 'The City Wall 3e', 1045, 2, 0, 0, 0, 0, 30, 2),
(176, 0, 0, 0, 'The City Wall 3f', 1045, 2, 0, 0, 0, 0, 30, 2),
(177, 0, 0, 0, 'The City Wall 5b', 585, 2, 0, 0, 0, 0, 20, 1),
(178, 0, 0, 0, 'The City Wall 5d', 585, 2, 0, 0, 0, 0, 20, 1),
(179, 0, 0, 0, 'The City Wall 5f', 585, 2, 0, 0, 0, 0, 20, 1),
(180, 0, 0, 0, 'The City Wall 7b', 585, 2, 0, 0, 0, 0, 20, 1),
(181, 0, 0, 0, 'The City Wall 7d', 865, 2, 0, 0, 0, 0, 25, 2),
(182, 0, 0, 0, 'The City Wall 7f', 865, 2, 0, 0, 0, 0, 27, 2),
(183, 0, 0, 0, 'The City Wall 7h', 585, 2, 0, 0, 0, 0, 22, 1),
(184, 0, 0, 0, 'The City Wall 9', 955, 2, 0, 0, 0, 0, 34, 2),
(185, 0, 0, 0, 'The Tibianic', 34500, 2, 0, 0, 0, 0, 766, 22),
(186, 0, 0, 0, 'Upper Swamp Lane 10', 2060, 2, 0, 0, 0, 0, 50, 3),
(188, 0, 0, 0, 'Upper Swamp Lane 12', 3800, 2, 0, 0, 0, 0, 94, 3),
(189, 0, 0, 0, 'Upper Swamp Lane 2', 4740, 2, 0, 0, 0, 0, 122, 4),
(190, 0, 0, 0, 'Upper Swamp Lane 4', 4740, 2, 0, 0, 0, 0, 122, 4),
(191, 0, 0, 0, 'Upper Swamp Lane 8', 8120, 2, 0, 0, 0, 0, 175, 3),
(192, 2, 0, 0, 'Warriors Guildhall', 14725, 2, 0, 0, 0, 0, 455, 11),
(194, 0, 0, 0, 'The City Wall 5a', 585, 2, 0, 0, 0, 0, 20, 1),
(195, 0, 0, 0, 'The City Wall 5c', 585, 2, 0, 0, 0, 0, 20, 1),
(196, 0, 0, 0, 'The City Wall 5e', 585, 2, 0, 0, 0, 0, 20, 1),
(197, 0, 0, 0, 'The City Wall 7a', 585, 2, 0, 0, 0, 0, 20, 1),
(198, 0, 0, 0, 'The City Wall 7c', 865, 2, 0, 0, 0, 0, 25, 2),
(199, 0, 0, 0, 'The City Wall 7e', 865, 2, 0, 0, 0, 0, 28, 2),
(200, 0, 0, 0, 'The City Wall 7g', 585, 2, 0, 0, 0, 0, 22, 1),
(201, 0, 0, 0, 'Valorous Venore', 0, 1, 0, 0, 0, 0, 365, 9),
(202, 0, 0, 0, 'Carlin 1', 10000, 4, 0, 0, 0, 0, 30, 2),
(203, 0, 0, 0, 'Carlin 2', 10000, 4, 0, 0, 0, 0, 32, 2);

-- --------------------------------------------------------

--
-- Estrutura da tabela `house_lists`
--

CREATE TABLE `house_lists` (
  `house_id` int(11) NOT NULL,
  `listid` int(11) NOT NULL,
  `list` text NOT NULL,
  KEY `house_id` (`house_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `house_lists`
--

INSERT INTO `house_lists` (`house_id`, `listid`, `list`) VALUES
(192, 256, 'arkos'),
(192, 6, 'arkos');

-- --------------------------------------------------------

--
-- Estrutura da tabela `ip_bans`
--

CREATE TABLE `ip_bans` (
  `ip` int(10) unsigned NOT NULL,
  `reason` varchar(255) NOT NULL,
  `banned_at` bigint(20) NOT NULL,
  `expires_at` bigint(20) NOT NULL,
  `banned_by` int(11) NOT NULL,
  PRIMARY KEY (`ip`),
  KEY `banned_by` (`banned_by`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `market_history`
--

CREATE TABLE `market_history` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `player_id` int(11) NOT NULL,
  `sale` tinyint(1) NOT NULL DEFAULT '0',
  `itemtype` int(10) unsigned NOT NULL,
  `amount` smallint(5) unsigned NOT NULL,
  `price` int(10) unsigned NOT NULL DEFAULT '0',
  `expires_at` bigint(20) unsigned NOT NULL,
  `inserted` bigint(20) unsigned NOT NULL,
  `state` tinyint(1) unsigned NOT NULL,
  PRIMARY KEY (`id`),
  KEY `player_id` (`player_id`,`sale`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `market_offers`
--

CREATE TABLE `market_offers` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `player_id` int(11) NOT NULL,
  `sale` tinyint(1) NOT NULL DEFAULT '0',
  `itemtype` int(10) unsigned NOT NULL,
  `amount` smallint(5) unsigned NOT NULL,
  `created` bigint(20) unsigned NOT NULL,
  `anonymous` tinyint(1) NOT NULL DEFAULT '0',
  `price` int(10) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `sale` (`sale`,`itemtype`),
  KEY `created` (`created`),
  KEY `player_id` (`player_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `players`
--

CREATE TABLE `players` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `group_id` int(11) NOT NULL DEFAULT '1',
  `account_id` int(11) NOT NULL DEFAULT '0',
  `level` int(11) NOT NULL DEFAULT '1',
  `vocation` int(11) NOT NULL DEFAULT '0',
  `health` int(11) NOT NULL DEFAULT '150',
  `healthmax` int(11) NOT NULL DEFAULT '150',
  `experience` bigint(20) NOT NULL DEFAULT '0',
  `lookbody` int(11) NOT NULL DEFAULT '0',
  `lookfeet` int(11) NOT NULL DEFAULT '0',
  `lookhead` int(11) NOT NULL DEFAULT '0',
  `looklegs` int(11) NOT NULL DEFAULT '0',
  `looktype` int(11) NOT NULL DEFAULT '136',
  `lookaddons` int(11) NOT NULL DEFAULT '0',
  `maglevel` int(11) NOT NULL DEFAULT '0',
  `mana` int(11) NOT NULL DEFAULT '0',
  `manamax` int(11) NOT NULL DEFAULT '0',
  `manaspent` int(11) unsigned NOT NULL DEFAULT '0',
  `soul` int(10) unsigned NOT NULL DEFAULT '0',
  `town_id` int(11) NOT NULL DEFAULT '0',
  `posx` int(11) NOT NULL DEFAULT '0',
  `posy` int(11) NOT NULL DEFAULT '0',
  `posz` int(11) NOT NULL DEFAULT '0',
  `conditions` blob NOT NULL,
  `cap` int(11) NOT NULL DEFAULT '0',
  `sex` int(11) NOT NULL DEFAULT '0',
  `lastlogin` bigint(20) unsigned NOT NULL DEFAULT '0',
  `lastip` int(10) unsigned NOT NULL DEFAULT '0',
  `save` tinyint(1) NOT NULL DEFAULT '1',
  `skull` tinyint(1) NOT NULL DEFAULT '0',
  `skulltime` int(11) NOT NULL DEFAULT '0',
  `lastlogout` bigint(20) unsigned NOT NULL DEFAULT '0',
  `blessings` tinyint(2) NOT NULL DEFAULT '0',
  `onlinetime` int(11) NOT NULL DEFAULT '0',
  `deletion` bigint(15) NOT NULL DEFAULT '0',
  `balance` bigint(20) unsigned NOT NULL DEFAULT '0',
  `offlinetraining_time` smallint(5) unsigned NOT NULL DEFAULT '43200',
  `offlinetraining_skill` int(11) NOT NULL DEFAULT '-1',
  `stamina` smallint(5) unsigned NOT NULL DEFAULT '3360',
  `skill_fist` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_fist_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `skill_club` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_club_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `skill_sword` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_sword_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `skill_axe` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_axe_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `skill_dist` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_dist_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `skill_shielding` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_shielding_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `skill_fishing` int(10) unsigned NOT NULL DEFAULT '10',
  `skill_fishing_tries` bigint(20) unsigned NOT NULL DEFAULT '0',
  `direction` int(1) unsigned NOT NULL DEFAULT '2',
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`),
  KEY `account_id` (`account_id`),
  KEY `vocation` (`vocation`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=4 ;

--
-- Extraindo dados da tabela `players`
--

INSERT INTO `players` (`id`, `name`, `group_id`, `account_id`, `level`, `vocation`, `health`, `healthmax`, `experience`, `lookbody`, `lookfeet`, `lookhead`, `looklegs`, `looktype`, `lookaddons`, `maglevel`, `mana`, `manamax`, `manaspent`, `soul`, `town_id`, `posx`, `posy`, `posz`, `conditions`, `cap`, `sex`, `lastlogin`, `lastip`, `save`, `skull`, `skulltime`, `lastlogout`, `blessings`, `onlinetime`, `deletion`, `balance`, `offlinetraining_time`, `offlinetraining_skill`, `stamina`, `skill_fist`, `skill_fist_tries`, `skill_club`, `skill_club_tries`, `skill_sword`, `skill_sword_tries`, `skill_axe`, `skill_axe_tries`, `skill_dist`, `skill_dist_tries`, `skill_shielding`, `skill_shielding_tries`, `skill_fishing`, `skill_fishing_tries`, `direction`) VALUES
(1, 'GOD', 3, 1, 86, 1, 575, 575, 9885500, 68, 76, 78, 58, 130, 3, 0, 2380, 2380, 0, 100, 4, 32348, 32213, 7, 0x010020000002ffffffff03485305001a001b000000000470170000050500000006b80b00000705000000fe, 1250, 1, 1576034875, 16777343, 1, 0, 0, 1576035080, 0, 244270, 0, 0, 43200, -1, 3360, 10, 0, 10, 0, 10, 0, 10, 0, 38, 0, 10, 0, 10, 0, 2),
(2, 'Lobus', 1, 1, 309, 5, 10000544, 10000544, 482559800, 114, 132, 114, 79, 130, 2, 100, 10003269, 10003269, 5616608, 200, 7, 32815, 32335, 11, 0x0100020000020000000003906500001a001b00000000fe010020000002ffffffff03989905001a001b0000000004a00f0000050a00000006d0070000070a000000fe, 101089, 1, 1575962630, 16777343, 1, 4, 1576198923, 1575962642, 0, 65935, 0, 7777777, 43200, -1, 3360, 14, 225, 10, 0, 13, 130, 10, 0, 15, 510, 21, 484, 10, 0, 2),
(3, 'Arkos', 1, 2, 180, 4, 3136, 3850, 94882055, 0, 0, 0, 0, 141, 0, 12, 1896, 1900, 510315664, 100, 2, 32347, 32214, 7, 0x010004000002ffffffff0360ea00001a001b00000000fe010020000002ffffffff03704c0c001a001b0000000004b80b0000050500000006701700000705000000fe010100000002000000000398ab02001a001b00000000080019000000000aa00f0000fdffffff881300000a88130000fdffffff881300000a88130000fdffffff881300000a88130000fdffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000feffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff881300000a88130000ffffffff88130000fe0102000000020000000003983a00001a001b00000000080019000000000ab80b0000f6ffffff102700000a10270000f6ffffff10270000fe, 999499, 0, 1575852697, 16777343, 1, 0, 0, 1575853355, 0, 10038, 0, 999999999, 43200, -1, 3360, 106, 346489, 106, 346489, 106, 363136, 106, 346489, 49, 997200, 106, 693459, 106, 138605, 1);

--
-- Gatilhos `players`
--
DROP TRIGGER IF EXISTS `ondelete_players`;
DELIMITER //
CREATE TRIGGER `ondelete_players` BEFORE DELETE ON `players`
 FOR EACH ROW BEGIN
    UPDATE `houses` SET `owner` = 0 WHERE `owner` = OLD.`id`;
END
//
DELIMITER ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `players_online`
--

CREATE TABLE `players_online` (
  `player_id` int(11) NOT NULL,
  PRIMARY KEY (`player_id`)
) ENGINE=MEMORY DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `players_online`
--

INSERT INTO `players_online` (`player_id`) VALUES
(1);

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_bans`
--

CREATE TABLE `player_bans` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `player_id` int(11) NOT NULL,
  `reason` varchar(255) NOT NULL,
  `banned_at` bigint(20) NOT NULL,
  `expires_at` bigint(20) NOT NULL,
  `banned_by` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `player_id` (`player_id`),
  KEY `banned_by` (`banned_by`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_deaths`
--

CREATE TABLE `player_deaths` (
  `player_id` int(11) NOT NULL,
  `time` bigint(20) unsigned NOT NULL DEFAULT '0',
  `level` int(11) NOT NULL DEFAULT '1',
  `killed_by` varchar(255) NOT NULL,
  `is_player` tinyint(1) NOT NULL DEFAULT '1',
  `mostdamage_by` varchar(100) NOT NULL,
  `mostdamage_is_player` tinyint(1) NOT NULL DEFAULT '0',
  `unjustified` tinyint(1) NOT NULL DEFAULT '0',
  `mostdamage_unjustified` tinyint(1) NOT NULL DEFAULT '0',
  KEY `player_id` (`player_id`),
  KEY `killed_by` (`killed_by`),
  KEY `mostdamage_by` (`mostdamage_by`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `player_deaths`
--

INSERT INTO `player_deaths` (`player_id`, `time`, `level`, `killed_by`, `is_player`, `mostdamage_by`, `mostdamage_is_player`, `unjustified`, `mostdamage_unjustified`) VALUES
(3, 1575852612, 192, 'Lobus', 1, 'Lobus', 1, 0, 0),
(3, 1575852631, 190, 'Lobus', 1, 'Lobus', 1, 0, 0),
(3, 1575852652, 187, 'Lobus', 1, 'Lobus', 1, 1, 0),
(3, 1575852671, 185, 'Lobus', 1, 'Lobus', 1, 1, 0),
(3, 1575852689, 182, 'Lobus', 1, 'Lobus', 1, 1, 0);

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_depotitems`
--

CREATE TABLE `player_depotitems` (
  `player_id` int(11) NOT NULL,
  `sid` int(11) NOT NULL COMMENT 'any given range eg 0-100 will be reserved for depot lockers and all > 100 will be then normal items inside depots',
  `pid` int(11) NOT NULL DEFAULT '0',
  `itemtype` smallint(6) NOT NULL,
  `count` smallint(5) NOT NULL DEFAULT '0',
  `attributes` blob NOT NULL,
  UNIQUE KEY `player_id_2` (`player_id`,`sid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_inboxitems`
--

CREATE TABLE `player_inboxitems` (
  `player_id` int(11) NOT NULL,
  `sid` int(11) NOT NULL,
  `pid` int(11) NOT NULL DEFAULT '0',
  `itemtype` smallint(6) NOT NULL,
  `count` smallint(5) NOT NULL DEFAULT '0',
  `attributes` blob NOT NULL,
  UNIQUE KEY `player_id_2` (`player_id`,`sid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `player_inboxitems`
--

INSERT INTO `player_inboxitems` (`player_id`, `sid`, `pid`, `itemtype`, `count`, `attributes`) VALUES
(1, 101, 2, 2596, 1, ''),
(1, 102, 2, 2596, 1, ''),
(1, 103, 101, 2599, 1, 0x060f00474f4420546573740a7468616973201274feee5d130800474f442054657374),
(1, 104, 102, 2599, 1, 0x060e00474f4420546573740a7468616973125bfeee5d130800474f442054657374);

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_items`
--

CREATE TABLE `player_items` (
  `player_id` int(11) NOT NULL DEFAULT '0',
  `pid` int(11) NOT NULL DEFAULT '0',
  `sid` int(11) NOT NULL DEFAULT '0',
  `itemtype` smallint(6) NOT NULL DEFAULT '0',
  `count` smallint(5) NOT NULL DEFAULT '0',
  `attributes` blob NOT NULL,
  KEY `player_id` (`player_id`),
  KEY `sid` (`sid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `player_items`
--

INSERT INTO `player_items` (`player_id`, `pid`, `sid`, `itemtype`, `count`, `attributes`) VALUES
(3, 1, 101, 2471, 1, ''),
(3, 2, 102, 2197, 89, 0x165900),
(3, 3, 103, 2365, 1, ''),
(3, 4, 104, 2472, 1, ''),
(3, 5, 105, 2523, 1, ''),
(3, 6, 106, 2400, 1, ''),
(3, 7, 107, 2469, 1, ''),
(3, 8, 108, 2640, 1, 0x106041ae001101),
(3, 9, 109, 2164, 20, 0x161400),
(3, 10, 110, 2365, 1, ''),
(3, 103, 111, 2173, 1, 0x160100),
(3, 103, 112, 2001, 1, ''),
(3, 103, 113, 2002, 1, ''),
(3, 103, 114, 2789, 80, 0x0f50),
(3, 103, 115, 1988, 1, ''),
(3, 103, 116, 2789, 100, 0x0f64),
(3, 103, 117, 5903, 1, ''),
(3, 103, 118, 2195, 1, ''),
(3, 103, 119, 2160, 56, 0x0f38),
(3, 103, 120, 2004, 1, ''),
(3, 103, 121, 1988, 1, ''),
(3, 103, 122, 2120, 1, ''),
(3, 103, 123, 2554, 1, ''),
(3, 110, 124, 2286, 99, 0x0f63),
(3, 110, 125, 2286, 98, 0x0f62),
(3, 110, 126, 2286, 100, 0x0f64),
(3, 110, 127, 2286, 100, 0x0f64),
(3, 110, 128, 2262, 99, 0x0f63),
(3, 110, 129, 2262, 100, 0x0f64),
(3, 110, 130, 2262, 98, 0x0f62),
(3, 110, 131, 2262, 100, 0x0f64),
(3, 110, 132, 2305, 99, 0x0f63),
(3, 110, 133, 2305, 98, 0x0f62),
(3, 110, 134, 2305, 100, 0x0f64),
(3, 110, 135, 2305, 100, 0x0f64),
(3, 110, 136, 2293, 100, 0x0f64),
(3, 110, 137, 2293, 100, 0x0f64),
(3, 110, 138, 2293, 99, 0x0f63),
(3, 110, 139, 2293, 100, 0x0f64),
(3, 110, 140, 2261, 100, 0x0f64),
(3, 110, 141, 2261, 100, 0x0f64),
(3, 110, 142, 2261, 100, 0x0f64),
(3, 110, 143, 2261, 100, 0x0f64),
(3, 112, 144, 2001, 1, ''),
(3, 112, 145, 2001, 1, ''),
(3, 112, 146, 2001, 1, ''),
(3, 112, 147, 2001, 1, ''),
(3, 112, 148, 2001, 1, ''),
(3, 112, 149, 2001, 1, ''),
(3, 112, 150, 2001, 1, ''),
(3, 112, 151, 2001, 1, ''),
(3, 112, 152, 2001, 1, ''),
(3, 112, 153, 2001, 1, ''),
(3, 112, 154, 2001, 1, ''),
(3, 112, 155, 2001, 1, ''),
(3, 112, 156, 2001, 1, ''),
(3, 112, 157, 2001, 1, ''),
(3, 112, 158, 2001, 1, ''),
(3, 112, 159, 2001, 1, ''),
(3, 112, 160, 2001, 1, ''),
(3, 112, 161, 2001, 1, ''),
(3, 112, 162, 2001, 1, ''),
(3, 112, 163, 2001, 1, ''),
(3, 113, 164, 2273, 87, 0x0f57),
(3, 113, 165, 2273, 100, 0x0f64),
(3, 113, 166, 2273, 100, 0x0f64),
(3, 113, 167, 2273, 55, 0x0f37),
(3, 113, 168, 2273, 100, 0x0f64),
(3, 113, 169, 2273, 100, 0x0f64),
(3, 113, 170, 2273, 100, 0x0f64),
(3, 113, 171, 2273, 100, 0x0f64),
(3, 113, 172, 2273, 100, 0x0f64),
(3, 113, 173, 2273, 100, 0x0f64),
(3, 113, 174, 2273, 100, 0x0f64),
(3, 113, 175, 2273, 100, 0x0f64),
(3, 113, 176, 2273, 100, 0x0f64),
(3, 113, 177, 2273, 100, 0x0f64),
(3, 113, 178, 2273, 100, 0x0f64),
(3, 113, 179, 2273, 100, 0x0f64),
(3, 113, 180, 2273, 100, 0x0f64),
(3, 113, 181, 2273, 100, 0x0f64),
(3, 113, 182, 2273, 100, 0x0f64),
(3, 113, 183, 2273, 100, 0x0f64),
(3, 113, 184, 2273, 100, 0x0f64),
(3, 113, 185, 2273, 100, 0x0f64),
(3, 113, 186, 2273, 55, 0x0f37),
(3, 113, 187, 2273, 100, 0x0f64),
(3, 113, 188, 2273, 100, 0x0f64),
(3, 113, 189, 2273, 100, 0x0f64),
(3, 113, 190, 2273, 100, 0x0f64),
(3, 113, 191, 2273, 100, 0x0f64),
(3, 120, 192, 2164, 100, 0x166400),
(3, 120, 193, 2164, 100, 0x166400),
(3, 120, 194, 2164, 100, 0x166400),
(3, 120, 195, 2164, 100, 0x166400),
(3, 120, 196, 2164, 100, 0x166400),
(3, 120, 197, 2164, 100, 0x166400),
(3, 120, 198, 2164, 100, 0x166400),
(3, 120, 199, 2164, 100, 0x166400),
(3, 120, 200, 2164, 100, 0x166400),
(3, 120, 201, 2164, 100, 0x166400),
(3, 120, 202, 2164, 100, 0x166400),
(3, 120, 203, 2164, 100, 0x166400),
(3, 120, 204, 2164, 100, 0x166400),
(3, 120, 205, 2164, 100, 0x166400),
(3, 120, 206, 2164, 100, 0x166400),
(3, 120, 207, 2164, 100, 0x166400),
(3, 120, 208, 2164, 100, 0x166400),
(3, 120, 209, 2164, 100, 0x166400),
(3, 121, 210, 2197, 90, 0x165a00),
(3, 121, 211, 2197, 100, 0x166400),
(3, 121, 212, 2197, 100, 0x166400),
(3, 121, 213, 2197, 100, 0x166400),
(3, 121, 214, 2197, 100, 0x166400),
(3, 121, 215, 2197, 100, 0x166400),
(3, 121, 216, 2197, 100, 0x166400),
(3, 121, 217, 2197, 100, 0x166400),
(3, 121, 218, 2197, 100, 0x166400),
(3, 121, 219, 2197, 100, 0x166400),
(3, 121, 220, 2197, 100, 0x166400),
(3, 121, 221, 2197, 100, 0x166400),
(3, 121, 222, 2197, 100, 0x166400),
(3, 121, 223, 2197, 100, 0x166400),
(3, 121, 224, 2197, 100, 0x166400),
(3, 121, 225, 2197, 100, 0x166400),
(3, 121, 226, 2197, 100, 0x166400),
(3, 121, 227, 2197, 100, 0x166400),
(3, 121, 228, 2197, 100, 0x166400),
(3, 144, 229, 2001, 1, ''),
(3, 144, 230, 2001, 1, ''),
(3, 144, 231, 2001, 1, ''),
(3, 144, 232, 2001, 1, ''),
(3, 144, 233, 2001, 1, ''),
(3, 144, 234, 2001, 1, ''),
(3, 144, 235, 2001, 1, ''),
(3, 144, 236, 2001, 1, ''),
(3, 144, 237, 2001, 1, ''),
(3, 144, 238, 2001, 1, ''),
(3, 144, 239, 2001, 1, ''),
(3, 144, 240, 2001, 1, ''),
(3, 144, 241, 2001, 1, ''),
(3, 144, 242, 2001, 1, ''),
(3, 144, 243, 2001, 1, ''),
(3, 144, 244, 2001, 1, ''),
(3, 144, 245, 2001, 1, ''),
(3, 144, 246, 2001, 1, ''),
(3, 144, 247, 2001, 1, ''),
(3, 144, 248, 2001, 1, ''),
(3, 145, 249, 2006, 0, 0x0f00),
(3, 145, 250, 2006, 0, 0x0f00),
(3, 145, 251, 2006, 0, 0x0f00),
(3, 145, 252, 2006, 0, 0x0f00),
(3, 145, 253, 2006, 0, 0x0f00),
(3, 145, 254, 2006, 0, 0x0f00),
(3, 145, 255, 2006, 0, 0x0f00),
(3, 145, 256, 2006, 0, 0x0f00),
(3, 145, 257, 2006, 0, 0x0f00),
(3, 145, 258, 2006, 0, 0x0f00),
(3, 145, 259, 2006, 0, 0x0f00),
(3, 145, 260, 2006, 0, 0x0f00),
(3, 145, 261, 2006, 0, 0x0f00),
(3, 145, 262, 2006, 0, 0x0f00),
(3, 145, 263, 2006, 0, 0x0f00),
(3, 145, 264, 2006, 0, 0x0f00),
(3, 145, 265, 2006, 0, 0x0f00),
(3, 145, 266, 2006, 0, 0x0f00),
(3, 145, 267, 2006, 0, 0x0f00),
(3, 145, 268, 2006, 0, 0x0f00),
(3, 146, 269, 2006, 0, 0x0f00),
(3, 146, 270, 2006, 0, 0x0f00),
(3, 146, 271, 2006, 0, 0x0f00),
(3, 146, 272, 2006, 0, 0x0f00),
(3, 146, 273, 2006, 0, 0x0f00),
(3, 146, 274, 2006, 0, 0x0f00),
(3, 146, 275, 2006, 0, 0x0f00),
(3, 146, 276, 2006, 0, 0x0f00),
(3, 146, 277, 2006, 0, 0x0f00),
(3, 146, 278, 2006, 0, 0x0f00),
(3, 146, 279, 2006, 0, 0x0f00),
(3, 146, 280, 2006, 0, 0x0f00),
(3, 146, 281, 2006, 0, 0x0f00),
(3, 146, 282, 2006, 0, 0x0f00),
(3, 146, 283, 2006, 0, 0x0f00),
(3, 146, 284, 2006, 0, 0x0f00),
(3, 146, 285, 2006, 0, 0x0f00),
(3, 146, 286, 2006, 0, 0x0f00),
(3, 146, 287, 2006, 0, 0x0f00),
(3, 146, 288, 2006, 0, 0x0f00),
(3, 147, 289, 2006, 0, 0x0f00),
(3, 147, 290, 2006, 0, 0x0f00),
(3, 147, 291, 2006, 0, 0x0f00),
(3, 147, 292, 2006, 0, 0x0f00),
(3, 147, 293, 2006, 0, 0x0f00),
(3, 147, 294, 2006, 0, 0x0f00),
(3, 147, 295, 2006, 0, 0x0f00),
(3, 147, 296, 2006, 0, 0x0f00),
(3, 147, 297, 2006, 0, 0x0f00),
(3, 147, 298, 2006, 0, 0x0f00),
(3, 147, 299, 2006, 0, 0x0f00),
(3, 147, 300, 2006, 0, 0x0f00),
(3, 147, 301, 2006, 0, 0x0f00),
(3, 147, 302, 2006, 0, 0x0f00),
(3, 147, 303, 2006, 0, 0x0f00),
(3, 147, 304, 2006, 0, 0x0f00),
(3, 147, 305, 2006, 0, 0x0f00),
(3, 147, 306, 2006, 0, 0x0f00),
(3, 147, 307, 2006, 0, 0x0f00),
(3, 147, 308, 2006, 0, 0x0f00),
(3, 148, 309, 2006, 0, 0x0f00),
(3, 148, 310, 2006, 0, 0x0f00),
(3, 148, 311, 2006, 0, 0x0f00),
(3, 148, 312, 2006, 0, 0x0f00),
(3, 148, 313, 2006, 0, 0x0f00),
(3, 148, 314, 2006, 0, 0x0f00),
(3, 148, 315, 2006, 0, 0x0f00),
(3, 148, 316, 2006, 0, 0x0f00),
(3, 148, 317, 2006, 0, 0x0f00),
(3, 148, 318, 2006, 0, 0x0f00),
(3, 148, 319, 2006, 0, 0x0f00),
(3, 148, 320, 2006, 0, 0x0f00),
(3, 148, 321, 2006, 0, 0x0f00),
(3, 148, 322, 2006, 0, 0x0f00),
(3, 148, 323, 2006, 0, 0x0f00),
(3, 148, 324, 2006, 0, 0x0f00),
(3, 148, 325, 2006, 0, 0x0f00),
(3, 148, 326, 2006, 0, 0x0f00),
(3, 148, 327, 2006, 0, 0x0f00),
(3, 148, 328, 2006, 0, 0x0f00),
(3, 149, 329, 2006, 0, 0x0f00),
(3, 149, 330, 2006, 0, 0x0f00),
(3, 149, 331, 2006, 0, 0x0f00),
(3, 149, 332, 2006, 0, 0x0f00),
(3, 149, 333, 2006, 0, 0x0f00),
(3, 149, 334, 2006, 0, 0x0f00),
(3, 149, 335, 2006, 0, 0x0f00),
(3, 149, 336, 2006, 0, 0x0f00),
(3, 149, 337, 2006, 0, 0x0f00),
(3, 149, 338, 2006, 0, 0x0f00),
(3, 149, 339, 2006, 0, 0x0f00),
(3, 149, 340, 2006, 0, 0x0f00),
(3, 149, 341, 2006, 0, 0x0f00),
(3, 149, 342, 2006, 0, 0x0f00),
(3, 149, 343, 2006, 0, 0x0f00),
(3, 149, 344, 2006, 0, 0x0f00),
(3, 149, 345, 2006, 0, 0x0f00),
(3, 149, 346, 2006, 0, 0x0f00),
(3, 149, 347, 2006, 0, 0x0f00),
(3, 149, 348, 2006, 0, 0x0f00),
(3, 150, 349, 2006, 0, 0x0f00),
(3, 150, 350, 2006, 0, 0x0f00),
(3, 150, 351, 2006, 0, 0x0f00),
(3, 150, 352, 2006, 0, 0x0f00),
(3, 150, 353, 2006, 0, 0x0f00),
(3, 150, 354, 2006, 0, 0x0f00),
(3, 150, 355, 2006, 0, 0x0f00),
(3, 150, 356, 2006, 0, 0x0f00),
(3, 150, 357, 2006, 0, 0x0f00),
(3, 150, 358, 2006, 0, 0x0f00),
(3, 150, 359, 2006, 0, 0x0f00),
(3, 150, 360, 2006, 0, 0x0f00),
(3, 150, 361, 2006, 0, 0x0f00),
(3, 150, 362, 2006, 0, 0x0f00),
(3, 150, 363, 2006, 0, 0x0f00),
(3, 150, 364, 2006, 0, 0x0f00),
(3, 150, 365, 2006, 0, 0x0f00),
(3, 150, 366, 2006, 0, 0x0f00),
(3, 150, 367, 2006, 0, 0x0f00),
(3, 150, 368, 2006, 0, 0x0f00),
(3, 151, 369, 2006, 0, 0x0f00),
(3, 151, 370, 2006, 0, 0x0f00),
(3, 151, 371, 2006, 0, 0x0f00),
(3, 151, 372, 2006, 0, 0x0f00),
(3, 151, 373, 2006, 0, 0x0f00),
(3, 151, 374, 2006, 0, 0x0f00),
(3, 151, 375, 2006, 0, 0x0f00),
(3, 151, 376, 2006, 0, 0x0f00),
(3, 151, 377, 2006, 0, 0x0f00),
(3, 151, 378, 2006, 0, 0x0f00),
(3, 151, 379, 2006, 0, 0x0f00),
(3, 151, 380, 2006, 0, 0x0f00),
(3, 151, 381, 2006, 0, 0x0f00),
(3, 151, 382, 2006, 0, 0x0f00),
(3, 151, 383, 2006, 0, 0x0f00),
(3, 151, 384, 2006, 0, 0x0f00),
(3, 151, 385, 2006, 0, 0x0f00),
(3, 151, 386, 2006, 0, 0x0f00),
(3, 151, 387, 2006, 0, 0x0f00),
(3, 151, 388, 2006, 0, 0x0f00),
(3, 152, 389, 2006, 0, 0x0f00),
(3, 152, 390, 2006, 0, 0x0f00),
(3, 152, 391, 2006, 0, 0x0f00),
(3, 152, 392, 2006, 0, 0x0f00),
(3, 152, 393, 2006, 0, 0x0f00),
(3, 152, 394, 2006, 0, 0x0f00),
(3, 152, 395, 2006, 0, 0x0f00),
(3, 152, 396, 2006, 0, 0x0f00),
(3, 152, 397, 2006, 0, 0x0f00),
(3, 152, 398, 2006, 0, 0x0f00),
(3, 152, 399, 2006, 0, 0x0f00),
(3, 152, 400, 2006, 0, 0x0f00),
(3, 152, 401, 2006, 0, 0x0f00),
(3, 152, 402, 2006, 0, 0x0f00),
(3, 152, 403, 2006, 0, 0x0f00),
(3, 152, 404, 2006, 0, 0x0f00),
(3, 152, 405, 2006, 0, 0x0f00),
(3, 152, 406, 2006, 0, 0x0f00),
(3, 152, 407, 2006, 0, 0x0f00),
(3, 152, 408, 2006, 0, 0x0f00),
(3, 153, 409, 2006, 0, 0x0f00),
(3, 153, 410, 2006, 0, 0x0f00),
(3, 153, 411, 2006, 0, 0x0f00),
(3, 153, 412, 2006, 0, 0x0f00),
(3, 153, 413, 2006, 0, 0x0f00),
(3, 153, 414, 2006, 0, 0x0f00),
(3, 153, 415, 2006, 0, 0x0f00),
(3, 153, 416, 2006, 0, 0x0f00),
(3, 153, 417, 2006, 0, 0x0f00),
(3, 153, 418, 2006, 0, 0x0f00),
(3, 153, 419, 2006, 0, 0x0f00),
(3, 153, 420, 2006, 0, 0x0f00),
(3, 153, 421, 2006, 0, 0x0f00),
(3, 153, 422, 2006, 0, 0x0f00),
(3, 153, 423, 2006, 0, 0x0f00),
(3, 153, 424, 2006, 0, 0x0f00),
(3, 153, 425, 2006, 0, 0x0f00),
(3, 153, 426, 2006, 0, 0x0f00),
(3, 153, 427, 2006, 0, 0x0f00),
(3, 153, 428, 2006, 0, 0x0f00),
(3, 154, 429, 2006, 0, 0x0f00),
(3, 154, 430, 2006, 0, 0x0f00),
(3, 154, 431, 2006, 0, 0x0f00),
(3, 154, 432, 2006, 0, 0x0f00),
(3, 154, 433, 2006, 0, 0x0f00),
(3, 154, 434, 2006, 0, 0x0f00),
(3, 154, 435, 2006, 0, 0x0f00),
(3, 154, 436, 2006, 0, 0x0f00),
(3, 154, 437, 2006, 0, 0x0f00),
(3, 154, 438, 2006, 0, 0x0f00),
(3, 154, 439, 2006, 0, 0x0f00),
(3, 154, 440, 2006, 0, 0x0f00),
(3, 154, 441, 2006, 0, 0x0f00),
(3, 154, 442, 2006, 0, 0x0f00),
(3, 154, 443, 2006, 0, 0x0f00),
(3, 154, 444, 2006, 0, 0x0f00),
(3, 154, 445, 2006, 0, 0x0f00),
(3, 154, 446, 2006, 0, 0x0f00),
(3, 154, 447, 2006, 0, 0x0f00),
(3, 154, 448, 2006, 0, 0x0f00),
(3, 155, 449, 2006, 0, 0x0f00),
(3, 155, 450, 2006, 0, 0x0f00),
(3, 155, 451, 2006, 0, 0x0f00),
(3, 155, 452, 2006, 0, 0x0f00),
(3, 155, 453, 2006, 0, 0x0f00),
(3, 155, 454, 2006, 0, 0x0f00),
(3, 155, 455, 2006, 0, 0x0f00),
(3, 155, 456, 2006, 0, 0x0f00),
(3, 155, 457, 2006, 0, 0x0f00),
(3, 155, 458, 2006, 0, 0x0f00),
(3, 155, 459, 2006, 0, 0x0f00),
(3, 155, 460, 2006, 0, 0x0f00),
(3, 155, 461, 2006, 0, 0x0f00),
(3, 155, 462, 2006, 0, 0x0f00),
(3, 155, 463, 2006, 0, 0x0f00),
(3, 155, 464, 2006, 0, 0x0f00),
(3, 155, 465, 2006, 0, 0x0f00),
(3, 155, 466, 2006, 0, 0x0f00),
(3, 155, 467, 2006, 0, 0x0f00),
(3, 155, 468, 2006, 0, 0x0f00),
(3, 156, 469, 2006, 0, 0x0f00),
(3, 156, 470, 2006, 0, 0x0f00),
(3, 156, 471, 2006, 0, 0x0f00),
(3, 156, 472, 2006, 0, 0x0f00),
(3, 156, 473, 2006, 0, 0x0f00),
(3, 156, 474, 2006, 0, 0x0f00),
(3, 156, 475, 2006, 0, 0x0f00),
(3, 156, 476, 2006, 0, 0x0f00),
(3, 156, 477, 2006, 0, 0x0f00),
(3, 156, 478, 2006, 0, 0x0f00),
(3, 156, 479, 2006, 0, 0x0f00),
(3, 156, 480, 2006, 0, 0x0f00),
(3, 156, 481, 2006, 0, 0x0f00),
(3, 156, 482, 2006, 0, 0x0f00),
(3, 156, 483, 2006, 0, 0x0f00),
(3, 156, 484, 2006, 0, 0x0f00),
(3, 156, 485, 2006, 0, 0x0f00),
(3, 156, 486, 2006, 0, 0x0f00),
(3, 156, 487, 2006, 0, 0x0f00),
(3, 156, 488, 2006, 0, 0x0f00),
(3, 157, 489, 2006, 0, 0x0f00),
(3, 157, 490, 2006, 0, 0x0f00),
(3, 157, 491, 2006, 0, 0x0f00),
(3, 157, 492, 2006, 0, 0x0f00),
(3, 157, 493, 2006, 0, 0x0f00),
(3, 157, 494, 2006, 0, 0x0f00),
(3, 157, 495, 2006, 0, 0x0f00),
(3, 157, 496, 2006, 0, 0x0f00),
(3, 157, 497, 2006, 0, 0x0f00),
(3, 157, 498, 2006, 0, 0x0f00),
(3, 157, 499, 2006, 0, 0x0f00),
(3, 157, 500, 2006, 0, 0x0f00),
(3, 157, 501, 2006, 7, 0x0f07),
(3, 157, 502, 2006, 7, 0x0f07),
(3, 157, 503, 2006, 7, 0x0f07),
(3, 157, 504, 2006, 7, 0x0f07),
(3, 157, 505, 2006, 7, 0x0f07),
(3, 157, 506, 2006, 7, 0x0f07),
(3, 157, 507, 2006, 7, 0x0f07),
(3, 157, 508, 2006, 7, 0x0f07),
(3, 158, 509, 2006, 7, 0x0f07),
(3, 158, 510, 2006, 7, 0x0f07),
(3, 158, 511, 2006, 7, 0x0f07),
(3, 158, 512, 2006, 7, 0x0f07),
(3, 158, 513, 2006, 7, 0x0f07),
(3, 158, 514, 2006, 7, 0x0f07),
(3, 158, 515, 2006, 7, 0x0f07),
(3, 158, 516, 2006, 7, 0x0f07),
(3, 158, 517, 2006, 7, 0x0f07),
(3, 158, 518, 2006, 7, 0x0f07),
(3, 158, 519, 2006, 7, 0x0f07),
(3, 158, 520, 2006, 7, 0x0f07),
(3, 158, 521, 2006, 7, 0x0f07),
(3, 158, 522, 2006, 7, 0x0f07),
(3, 158, 523, 2006, 7, 0x0f07),
(3, 158, 524, 2006, 7, 0x0f07),
(3, 158, 525, 2006, 7, 0x0f07),
(3, 158, 526, 2006, 7, 0x0f07),
(3, 158, 527, 2006, 7, 0x0f07),
(3, 158, 528, 2006, 7, 0x0f07),
(3, 159, 529, 2006, 7, 0x0f07),
(3, 159, 530, 2006, 7, 0x0f07),
(3, 159, 531, 2006, 7, 0x0f07),
(3, 159, 532, 2006, 7, 0x0f07),
(3, 159, 533, 2006, 7, 0x0f07),
(3, 159, 534, 2006, 7, 0x0f07),
(3, 159, 535, 2006, 7, 0x0f07),
(3, 159, 536, 2006, 7, 0x0f07),
(3, 159, 537, 2006, 7, 0x0f07),
(3, 159, 538, 2006, 7, 0x0f07),
(3, 159, 539, 2006, 7, 0x0f07),
(3, 159, 540, 2006, 7, 0x0f07),
(3, 159, 541, 2006, 7, 0x0f07),
(3, 159, 542, 2006, 7, 0x0f07),
(3, 159, 543, 2006, 7, 0x0f07),
(3, 159, 544, 2006, 7, 0x0f07),
(3, 159, 545, 2006, 7, 0x0f07),
(3, 159, 546, 2006, 7, 0x0f07),
(3, 159, 547, 2006, 7, 0x0f07),
(3, 159, 548, 2006, 7, 0x0f07),
(3, 160, 549, 2006, 7, 0x0f07),
(3, 160, 550, 2006, 7, 0x0f07),
(3, 160, 551, 2006, 7, 0x0f07),
(3, 160, 552, 2006, 7, 0x0f07),
(3, 160, 553, 2006, 7, 0x0f07),
(3, 160, 554, 2006, 7, 0x0f07),
(3, 160, 555, 2006, 7, 0x0f07),
(3, 160, 556, 2006, 7, 0x0f07),
(3, 160, 557, 2006, 7, 0x0f07),
(3, 160, 558, 2006, 7, 0x0f07),
(3, 160, 559, 2006, 7, 0x0f07),
(3, 160, 560, 2006, 7, 0x0f07),
(3, 160, 561, 2006, 7, 0x0f07),
(3, 160, 562, 2006, 7, 0x0f07),
(3, 160, 563, 2006, 7, 0x0f07),
(3, 160, 564, 2006, 7, 0x0f07),
(3, 160, 565, 2006, 7, 0x0f07),
(3, 160, 566, 2006, 7, 0x0f07),
(3, 160, 567, 2006, 7, 0x0f07),
(3, 160, 568, 2006, 7, 0x0f07),
(3, 161, 569, 2006, 7, 0x0f07),
(3, 161, 570, 2006, 7, 0x0f07),
(3, 161, 571, 2006, 7, 0x0f07),
(3, 161, 572, 2006, 7, 0x0f07),
(3, 161, 573, 2006, 7, 0x0f07),
(3, 161, 574, 2006, 7, 0x0f07),
(3, 161, 575, 2006, 7, 0x0f07),
(3, 161, 576, 2006, 7, 0x0f07),
(3, 161, 577, 2006, 7, 0x0f07),
(3, 161, 578, 2006, 7, 0x0f07),
(3, 161, 579, 2006, 7, 0x0f07),
(3, 161, 580, 2006, 7, 0x0f07),
(3, 161, 581, 2006, 7, 0x0f07),
(3, 161, 582, 2006, 7, 0x0f07),
(3, 161, 583, 2006, 7, 0x0f07),
(3, 161, 584, 2006, 7, 0x0f07),
(3, 161, 585, 2006, 7, 0x0f07),
(3, 161, 586, 2006, 7, 0x0f07),
(3, 161, 587, 2006, 7, 0x0f07),
(3, 161, 588, 2006, 7, 0x0f07),
(3, 162, 589, 2006, 7, 0x0f07),
(3, 162, 590, 2006, 7, 0x0f07),
(3, 162, 591, 2006, 7, 0x0f07),
(3, 162, 592, 2006, 7, 0x0f07),
(3, 162, 593, 2006, 7, 0x0f07),
(3, 162, 594, 2006, 7, 0x0f07),
(3, 162, 595, 2006, 7, 0x0f07),
(3, 162, 596, 2006, 7, 0x0f07),
(3, 162, 597, 2006, 7, 0x0f07),
(3, 162, 598, 2006, 7, 0x0f07),
(3, 162, 599, 2006, 7, 0x0f07),
(3, 162, 600, 2006, 7, 0x0f07),
(3, 162, 601, 2006, 7, 0x0f07),
(3, 162, 602, 2006, 7, 0x0f07),
(3, 162, 603, 2006, 7, 0x0f07),
(3, 162, 604, 2006, 7, 0x0f07),
(3, 162, 605, 2006, 7, 0x0f07),
(3, 162, 606, 2006, 7, 0x0f07),
(3, 162, 607, 2006, 7, 0x0f07),
(3, 162, 608, 2006, 7, 0x0f07),
(3, 163, 609, 2001, 1, ''),
(3, 163, 610, 2006, 7, 0x0f07),
(3, 163, 611, 2006, 7, 0x0f07),
(3, 163, 612, 2006, 7, 0x0f07),
(3, 163, 613, 2006, 7, 0x0f07),
(3, 163, 614, 2006, 7, 0x0f07),
(3, 163, 615, 2006, 7, 0x0f07),
(3, 163, 616, 2006, 7, 0x0f07),
(3, 163, 617, 2006, 7, 0x0f07),
(3, 163, 618, 2006, 7, 0x0f07),
(3, 163, 619, 2006, 7, 0x0f07),
(3, 163, 620, 2006, 7, 0x0f07),
(3, 163, 621, 2006, 7, 0x0f07),
(3, 163, 622, 2006, 7, 0x0f07),
(3, 163, 623, 2006, 7, 0x0f07),
(3, 163, 624, 2006, 7, 0x0f07),
(3, 163, 625, 2006, 7, 0x0f07),
(3, 163, 626, 2006, 7, 0x0f07),
(3, 163, 627, 2006, 7, 0x0f07),
(3, 163, 628, 2006, 7, 0x0f07),
(3, 229, 629, 2006, 7, 0x0f07),
(3, 229, 630, 2006, 7, 0x0f07),
(3, 229, 631, 2006, 7, 0x0f07),
(3, 229, 632, 2006, 7, 0x0f07),
(3, 229, 633, 2006, 7, 0x0f07),
(3, 229, 634, 2006, 7, 0x0f07),
(3, 229, 635, 2006, 7, 0x0f07),
(3, 229, 636, 2006, 7, 0x0f07),
(3, 229, 637, 2006, 7, 0x0f07),
(3, 229, 638, 2006, 7, 0x0f07),
(3, 229, 639, 2006, 7, 0x0f07),
(3, 229, 640, 2006, 7, 0x0f07),
(3, 229, 641, 2006, 7, 0x0f07),
(3, 229, 642, 2006, 7, 0x0f07),
(3, 229, 643, 2006, 7, 0x0f07),
(3, 229, 644, 2006, 7, 0x0f07),
(3, 229, 645, 2006, 7, 0x0f07),
(3, 229, 646, 2006, 7, 0x0f07),
(3, 229, 647, 2006, 7, 0x0f07),
(3, 229, 648, 2006, 7, 0x0f07),
(3, 230, 649, 2006, 7, 0x0f07),
(3, 230, 650, 2006, 7, 0x0f07),
(3, 230, 651, 2006, 7, 0x0f07),
(3, 230, 652, 2006, 7, 0x0f07),
(3, 230, 653, 2006, 7, 0x0f07),
(3, 230, 654, 2006, 7, 0x0f07),
(3, 230, 655, 2006, 7, 0x0f07),
(3, 230, 656, 2006, 7, 0x0f07),
(3, 230, 657, 2006, 7, 0x0f07),
(3, 230, 658, 2006, 7, 0x0f07),
(3, 230, 659, 2006, 7, 0x0f07),
(3, 230, 660, 2006, 7, 0x0f07),
(3, 230, 661, 2006, 7, 0x0f07),
(3, 230, 662, 2006, 7, 0x0f07),
(3, 230, 663, 2006, 7, 0x0f07),
(3, 230, 664, 2006, 7, 0x0f07),
(3, 230, 665, 2006, 7, 0x0f07),
(3, 230, 666, 2006, 7, 0x0f07),
(3, 230, 667, 2006, 7, 0x0f07),
(3, 230, 668, 2006, 7, 0x0f07),
(3, 231, 669, 2006, 7, 0x0f07),
(3, 231, 670, 2006, 7, 0x0f07),
(3, 231, 671, 2006, 7, 0x0f07),
(3, 231, 672, 2006, 7, 0x0f07),
(3, 231, 673, 2006, 7, 0x0f07),
(3, 231, 674, 2006, 7, 0x0f07),
(3, 231, 675, 2006, 7, 0x0f07),
(3, 231, 676, 2006, 7, 0x0f07),
(3, 231, 677, 2006, 7, 0x0f07),
(3, 231, 678, 2006, 7, 0x0f07),
(3, 231, 679, 2006, 7, 0x0f07),
(3, 231, 680, 2006, 7, 0x0f07),
(3, 231, 681, 2006, 7, 0x0f07),
(3, 231, 682, 2006, 7, 0x0f07),
(3, 231, 683, 2006, 7, 0x0f07),
(3, 231, 684, 2006, 7, 0x0f07),
(3, 231, 685, 2006, 7, 0x0f07),
(3, 231, 686, 2006, 7, 0x0f07),
(3, 231, 687, 2006, 7, 0x0f07),
(3, 231, 688, 2006, 7, 0x0f07),
(3, 232, 689, 2006, 7, 0x0f07),
(3, 232, 690, 2006, 7, 0x0f07),
(3, 232, 691, 2006, 7, 0x0f07),
(3, 232, 692, 2006, 7, 0x0f07),
(3, 232, 693, 2006, 7, 0x0f07),
(3, 232, 694, 2006, 7, 0x0f07),
(3, 232, 695, 2006, 7, 0x0f07),
(3, 232, 696, 2006, 7, 0x0f07),
(3, 232, 697, 2006, 7, 0x0f07),
(3, 232, 698, 2006, 7, 0x0f07),
(3, 232, 699, 2006, 7, 0x0f07),
(3, 232, 700, 2006, 7, 0x0f07),
(3, 232, 701, 2006, 7, 0x0f07),
(3, 232, 702, 2006, 7, 0x0f07),
(3, 232, 703, 2006, 7, 0x0f07),
(3, 232, 704, 2006, 7, 0x0f07),
(3, 232, 705, 2006, 7, 0x0f07),
(3, 232, 706, 2006, 7, 0x0f07),
(3, 232, 707, 2006, 7, 0x0f07),
(3, 232, 708, 2006, 7, 0x0f07),
(3, 233, 709, 2006, 7, 0x0f07),
(3, 233, 710, 2006, 7, 0x0f07),
(3, 233, 711, 2006, 7, 0x0f07),
(3, 233, 712, 2006, 7, 0x0f07),
(3, 233, 713, 2006, 7, 0x0f07),
(3, 233, 714, 2006, 7, 0x0f07),
(3, 233, 715, 2006, 7, 0x0f07),
(3, 233, 716, 2006, 7, 0x0f07),
(3, 233, 717, 2006, 7, 0x0f07),
(3, 233, 718, 2006, 7, 0x0f07),
(3, 233, 719, 2006, 7, 0x0f07),
(3, 233, 720, 2006, 7, 0x0f07),
(3, 233, 721, 2006, 7, 0x0f07),
(3, 233, 722, 2006, 7, 0x0f07),
(3, 233, 723, 2006, 7, 0x0f07),
(3, 233, 724, 2006, 7, 0x0f07),
(3, 233, 725, 2006, 7, 0x0f07),
(3, 233, 726, 2006, 7, 0x0f07),
(3, 233, 727, 2006, 7, 0x0f07),
(3, 233, 728, 2006, 7, 0x0f07),
(3, 234, 729, 2006, 7, 0x0f07),
(3, 234, 730, 2006, 7, 0x0f07),
(3, 234, 731, 2006, 7, 0x0f07),
(3, 234, 732, 2006, 7, 0x0f07),
(3, 234, 733, 2006, 7, 0x0f07),
(3, 234, 734, 2006, 7, 0x0f07),
(3, 234, 735, 2006, 7, 0x0f07),
(3, 234, 736, 2006, 7, 0x0f07),
(3, 234, 737, 2006, 7, 0x0f07),
(3, 234, 738, 2006, 7, 0x0f07),
(3, 234, 739, 2006, 7, 0x0f07),
(3, 234, 740, 2006, 7, 0x0f07),
(3, 234, 741, 2006, 7, 0x0f07),
(3, 234, 742, 2006, 7, 0x0f07),
(3, 234, 743, 2006, 7, 0x0f07),
(3, 234, 744, 2006, 7, 0x0f07),
(3, 234, 745, 2006, 7, 0x0f07),
(3, 234, 746, 2006, 7, 0x0f07),
(3, 234, 747, 2006, 7, 0x0f07),
(3, 234, 748, 2006, 7, 0x0f07),
(3, 235, 749, 2006, 7, 0x0f07),
(3, 235, 750, 2006, 7, 0x0f07),
(3, 235, 751, 2006, 7, 0x0f07),
(3, 235, 752, 2006, 7, 0x0f07),
(3, 235, 753, 2006, 7, 0x0f07),
(3, 235, 754, 2006, 7, 0x0f07),
(3, 235, 755, 2006, 7, 0x0f07),
(3, 235, 756, 2006, 7, 0x0f07),
(3, 235, 757, 2006, 7, 0x0f07),
(3, 235, 758, 2006, 7, 0x0f07),
(3, 235, 759, 2006, 7, 0x0f07),
(3, 235, 760, 2006, 7, 0x0f07),
(3, 235, 761, 2006, 7, 0x0f07),
(3, 235, 762, 2006, 7, 0x0f07),
(3, 235, 763, 2006, 7, 0x0f07),
(3, 235, 764, 2006, 7, 0x0f07),
(3, 235, 765, 2006, 7, 0x0f07),
(3, 235, 766, 2006, 7, 0x0f07),
(3, 235, 767, 2006, 7, 0x0f07),
(3, 235, 768, 2006, 7, 0x0f07),
(3, 236, 769, 2006, 7, 0x0f07),
(3, 236, 770, 2006, 7, 0x0f07),
(3, 236, 771, 2006, 7, 0x0f07),
(3, 236, 772, 2006, 7, 0x0f07),
(3, 236, 773, 2006, 7, 0x0f07),
(3, 236, 774, 2006, 7, 0x0f07),
(3, 236, 775, 2006, 7, 0x0f07),
(3, 236, 776, 2006, 7, 0x0f07),
(3, 236, 777, 2006, 7, 0x0f07),
(3, 236, 778, 2006, 7, 0x0f07),
(3, 236, 779, 2006, 7, 0x0f07),
(3, 236, 780, 2006, 7, 0x0f07),
(3, 236, 781, 2006, 7, 0x0f07),
(3, 236, 782, 2006, 7, 0x0f07),
(3, 236, 783, 2006, 7, 0x0f07),
(3, 236, 784, 2006, 7, 0x0f07),
(3, 236, 785, 2006, 7, 0x0f07),
(3, 236, 786, 2006, 7, 0x0f07),
(3, 236, 787, 2006, 7, 0x0f07),
(3, 236, 788, 2006, 7, 0x0f07),
(3, 237, 789, 2006, 7, 0x0f07),
(3, 237, 790, 2006, 7, 0x0f07),
(3, 237, 791, 2006, 7, 0x0f07),
(3, 237, 792, 2006, 7, 0x0f07),
(3, 237, 793, 2006, 7, 0x0f07),
(3, 237, 794, 2006, 7, 0x0f07),
(3, 237, 795, 2006, 7, 0x0f07),
(3, 237, 796, 2006, 7, 0x0f07),
(3, 237, 797, 2006, 7, 0x0f07),
(3, 237, 798, 2006, 7, 0x0f07),
(3, 237, 799, 2006, 7, 0x0f07),
(3, 237, 800, 2006, 7, 0x0f07),
(3, 237, 801, 2006, 7, 0x0f07),
(3, 237, 802, 2006, 7, 0x0f07),
(3, 237, 803, 2006, 7, 0x0f07),
(3, 237, 804, 2006, 7, 0x0f07),
(3, 237, 805, 2006, 7, 0x0f07),
(3, 237, 806, 2006, 7, 0x0f07),
(3, 237, 807, 2006, 7, 0x0f07),
(3, 237, 808, 2006, 7, 0x0f07),
(3, 238, 809, 2006, 7, 0x0f07),
(3, 238, 810, 2006, 7, 0x0f07),
(3, 238, 811, 2006, 7, 0x0f07),
(3, 238, 812, 2006, 7, 0x0f07),
(3, 238, 813, 2006, 7, 0x0f07),
(3, 238, 814, 2006, 7, 0x0f07),
(3, 238, 815, 2006, 7, 0x0f07),
(3, 238, 816, 2006, 7, 0x0f07),
(3, 238, 817, 2006, 7, 0x0f07),
(3, 238, 818, 2006, 7, 0x0f07),
(3, 238, 819, 2006, 7, 0x0f07),
(3, 238, 820, 2006, 7, 0x0f07),
(3, 238, 821, 2006, 7, 0x0f07),
(3, 238, 822, 2006, 7, 0x0f07),
(3, 238, 823, 2006, 7, 0x0f07),
(3, 238, 824, 2006, 7, 0x0f07),
(3, 238, 825, 2006, 7, 0x0f07),
(3, 238, 826, 2006, 7, 0x0f07),
(3, 238, 827, 2006, 7, 0x0f07),
(3, 238, 828, 2006, 7, 0x0f07),
(3, 239, 829, 2006, 7, 0x0f07),
(3, 239, 830, 2006, 7, 0x0f07),
(3, 239, 831, 2006, 7, 0x0f07),
(3, 239, 832, 2006, 7, 0x0f07),
(3, 239, 833, 2006, 7, 0x0f07),
(3, 239, 834, 2006, 7, 0x0f07),
(3, 239, 835, 2006, 7, 0x0f07),
(3, 239, 836, 2006, 7, 0x0f07),
(3, 239, 837, 2006, 7, 0x0f07),
(3, 239, 838, 2006, 7, 0x0f07),
(3, 239, 839, 2006, 7, 0x0f07),
(3, 239, 840, 2006, 7, 0x0f07),
(3, 239, 841, 2006, 7, 0x0f07),
(3, 239, 842, 2006, 7, 0x0f07),
(3, 239, 843, 2006, 7, 0x0f07),
(3, 239, 844, 2006, 7, 0x0f07),
(3, 239, 845, 2006, 7, 0x0f07),
(3, 239, 846, 2006, 7, 0x0f07),
(3, 239, 847, 2006, 7, 0x0f07),
(3, 239, 848, 2006, 7, 0x0f07),
(3, 240, 849, 2006, 7, 0x0f07),
(3, 240, 850, 2006, 7, 0x0f07),
(3, 240, 851, 2006, 7, 0x0f07),
(3, 240, 852, 2006, 7, 0x0f07),
(3, 240, 853, 2006, 7, 0x0f07),
(3, 240, 854, 2006, 7, 0x0f07),
(3, 240, 855, 2006, 7, 0x0f07),
(3, 240, 856, 2006, 7, 0x0f07),
(3, 240, 857, 2006, 7, 0x0f07),
(3, 240, 858, 2006, 7, 0x0f07),
(3, 240, 859, 2006, 7, 0x0f07),
(3, 240, 860, 2006, 7, 0x0f07),
(3, 240, 861, 2006, 7, 0x0f07),
(3, 240, 862, 2006, 7, 0x0f07),
(3, 240, 863, 2006, 7, 0x0f07),
(3, 240, 864, 2006, 7, 0x0f07),
(3, 240, 865, 2006, 7, 0x0f07),
(3, 240, 866, 2006, 7, 0x0f07),
(3, 240, 867, 2006, 7, 0x0f07),
(3, 240, 868, 2006, 7, 0x0f07),
(3, 241, 869, 2006, 7, 0x0f07),
(3, 241, 870, 2006, 7, 0x0f07),
(3, 241, 871, 2006, 7, 0x0f07),
(3, 241, 872, 2006, 7, 0x0f07),
(3, 241, 873, 2006, 7, 0x0f07),
(3, 241, 874, 2006, 7, 0x0f07),
(3, 241, 875, 2006, 7, 0x0f07),
(3, 241, 876, 2006, 7, 0x0f07),
(3, 241, 877, 2006, 7, 0x0f07),
(3, 241, 878, 2006, 7, 0x0f07),
(3, 241, 879, 2006, 7, 0x0f07),
(3, 241, 880, 2006, 7, 0x0f07),
(3, 241, 881, 2006, 7, 0x0f07),
(3, 241, 882, 2006, 7, 0x0f07),
(3, 241, 883, 2006, 7, 0x0f07),
(3, 241, 884, 2006, 7, 0x0f07),
(3, 241, 885, 2006, 7, 0x0f07),
(3, 241, 886, 2006, 7, 0x0f07),
(3, 241, 887, 2006, 7, 0x0f07),
(3, 241, 888, 2006, 7, 0x0f07),
(3, 242, 889, 2006, 7, 0x0f07),
(3, 242, 890, 2006, 7, 0x0f07),
(3, 242, 891, 2006, 7, 0x0f07),
(3, 242, 892, 2006, 7, 0x0f07),
(3, 242, 893, 2006, 7, 0x0f07),
(3, 242, 894, 2006, 7, 0x0f07),
(3, 242, 895, 2006, 7, 0x0f07),
(3, 242, 896, 2006, 7, 0x0f07),
(3, 242, 897, 2006, 7, 0x0f07),
(3, 242, 898, 2006, 7, 0x0f07),
(3, 242, 899, 2006, 7, 0x0f07),
(3, 242, 900, 2006, 7, 0x0f07),
(3, 242, 901, 2006, 7, 0x0f07),
(3, 242, 902, 2006, 7, 0x0f07),
(3, 242, 903, 2006, 7, 0x0f07),
(3, 242, 904, 2006, 7, 0x0f07),
(3, 242, 905, 2006, 7, 0x0f07),
(3, 242, 906, 2006, 7, 0x0f07),
(3, 242, 907, 2006, 7, 0x0f07),
(3, 242, 908, 2006, 7, 0x0f07),
(3, 243, 909, 2006, 7, 0x0f07),
(3, 243, 910, 2006, 7, 0x0f07),
(3, 243, 911, 2006, 7, 0x0f07),
(3, 243, 912, 2006, 7, 0x0f07),
(3, 243, 913, 2006, 7, 0x0f07),
(3, 243, 914, 2006, 7, 0x0f07),
(3, 243, 915, 2006, 7, 0x0f07),
(3, 243, 916, 2006, 7, 0x0f07),
(3, 243, 917, 2006, 7, 0x0f07),
(3, 243, 918, 2006, 7, 0x0f07),
(3, 243, 919, 2006, 7, 0x0f07),
(3, 243, 920, 2006, 7, 0x0f07),
(3, 243, 921, 2006, 7, 0x0f07),
(3, 243, 922, 2006, 7, 0x0f07),
(3, 243, 923, 2006, 7, 0x0f07),
(3, 243, 924, 2006, 7, 0x0f07),
(3, 243, 925, 2006, 7, 0x0f07),
(3, 243, 926, 2006, 7, 0x0f07),
(3, 243, 927, 2006, 7, 0x0f07),
(3, 243, 928, 2006, 7, 0x0f07),
(3, 244, 929, 2006, 7, 0x0f07),
(3, 244, 930, 2006, 7, 0x0f07),
(3, 244, 931, 2006, 7, 0x0f07),
(3, 244, 932, 2006, 7, 0x0f07),
(3, 244, 933, 2006, 7, 0x0f07),
(3, 244, 934, 2006, 7, 0x0f07),
(3, 244, 935, 2006, 7, 0x0f07),
(3, 244, 936, 2006, 7, 0x0f07),
(3, 244, 937, 2006, 7, 0x0f07),
(3, 244, 938, 2006, 7, 0x0f07),
(3, 244, 939, 2006, 7, 0x0f07),
(3, 244, 940, 2006, 7, 0x0f07),
(3, 244, 941, 2006, 7, 0x0f07),
(3, 244, 942, 2006, 7, 0x0f07),
(3, 244, 943, 2006, 7, 0x0f07),
(3, 244, 944, 2006, 7, 0x0f07),
(3, 244, 945, 2006, 7, 0x0f07),
(3, 244, 946, 2006, 7, 0x0f07),
(3, 244, 947, 2006, 7, 0x0f07),
(3, 244, 948, 2006, 7, 0x0f07),
(3, 245, 949, 2006, 7, 0x0f07),
(3, 245, 950, 2006, 7, 0x0f07),
(3, 245, 951, 2006, 7, 0x0f07),
(3, 245, 952, 2006, 7, 0x0f07),
(3, 245, 953, 2006, 7, 0x0f07),
(3, 245, 954, 2006, 7, 0x0f07),
(3, 245, 955, 2006, 7, 0x0f07),
(3, 245, 956, 2006, 7, 0x0f07),
(3, 245, 957, 2006, 7, 0x0f07),
(3, 245, 958, 2006, 7, 0x0f07),
(3, 245, 959, 2006, 7, 0x0f07),
(3, 245, 960, 2006, 7, 0x0f07),
(3, 245, 961, 2006, 7, 0x0f07),
(3, 245, 962, 2006, 7, 0x0f07),
(3, 245, 963, 2006, 7, 0x0f07),
(3, 245, 964, 2006, 7, 0x0f07),
(3, 245, 965, 2006, 7, 0x0f07),
(3, 245, 966, 2006, 7, 0x0f07),
(3, 245, 967, 2006, 7, 0x0f07),
(3, 245, 968, 2006, 7, 0x0f07),
(3, 246, 969, 2006, 7, 0x0f07),
(3, 246, 970, 2006, 7, 0x0f07),
(3, 246, 971, 2006, 7, 0x0f07),
(3, 246, 972, 2006, 7, 0x0f07),
(3, 246, 973, 2006, 7, 0x0f07),
(3, 246, 974, 2006, 7, 0x0f07),
(3, 246, 975, 2006, 7, 0x0f07),
(3, 246, 976, 2006, 7, 0x0f07),
(3, 246, 977, 2006, 7, 0x0f07),
(3, 246, 978, 2006, 7, 0x0f07),
(3, 246, 979, 2006, 7, 0x0f07),
(3, 246, 980, 2006, 7, 0x0f07),
(3, 246, 981, 2006, 7, 0x0f07),
(3, 246, 982, 2006, 7, 0x0f07),
(3, 246, 983, 2006, 7, 0x0f07),
(3, 246, 984, 2006, 7, 0x0f07),
(3, 246, 985, 2006, 7, 0x0f07),
(3, 246, 986, 2006, 7, 0x0f07),
(3, 246, 987, 2006, 7, 0x0f07),
(3, 246, 988, 2006, 7, 0x0f07),
(3, 247, 989, 2006, 7, 0x0f07),
(3, 247, 990, 2006, 7, 0x0f07),
(3, 247, 991, 2006, 7, 0x0f07),
(3, 247, 992, 2006, 7, 0x0f07),
(3, 247, 993, 2006, 7, 0x0f07),
(3, 247, 994, 2006, 7, 0x0f07),
(3, 247, 995, 2006, 7, 0x0f07),
(3, 247, 996, 2006, 7, 0x0f07),
(3, 247, 997, 2006, 7, 0x0f07),
(3, 247, 998, 2006, 7, 0x0f07),
(3, 247, 999, 2006, 7, 0x0f07),
(3, 247, 1000, 2006, 7, 0x0f07),
(3, 247, 1001, 2006, 7, 0x0f07),
(3, 247, 1002, 2006, 7, 0x0f07),
(3, 247, 1003, 2006, 7, 0x0f07),
(3, 247, 1004, 2006, 7, 0x0f07),
(3, 247, 1005, 2006, 7, 0x0f07),
(3, 247, 1006, 2006, 7, 0x0f07),
(3, 247, 1007, 2006, 7, 0x0f07),
(3, 247, 1008, 2006, 7, 0x0f07),
(3, 248, 1009, 2006, 7, 0x0f07),
(3, 248, 1010, 2006, 7, 0x0f07),
(3, 248, 1011, 2006, 7, 0x0f07),
(3, 248, 1012, 2006, 7, 0x0f07),
(3, 248, 1013, 2006, 7, 0x0f07),
(3, 248, 1014, 2006, 7, 0x0f07),
(3, 248, 1015, 2006, 7, 0x0f07),
(3, 248, 1016, 2006, 7, 0x0f07),
(3, 248, 1017, 2006, 7, 0x0f07),
(3, 248, 1018, 2006, 7, 0x0f07),
(3, 248, 1019, 2006, 7, 0x0f07),
(3, 248, 1020, 2006, 7, 0x0f07),
(3, 248, 1021, 2006, 7, 0x0f07),
(3, 248, 1022, 2006, 7, 0x0f07),
(3, 248, 1023, 2006, 7, 0x0f07),
(3, 248, 1024, 2006, 7, 0x0f07),
(3, 248, 1025, 2006, 7, 0x0f07),
(3, 248, 1026, 2006, 7, 0x0f07),
(3, 248, 1027, 2006, 7, 0x0f07),
(3, 248, 1028, 2006, 7, 0x0f07),
(3, 609, 1029, 2006, 7, 0x0f07),
(3, 609, 1030, 2006, 7, 0x0f07),
(3, 609, 1031, 2006, 7, 0x0f07),
(3, 609, 1032, 2006, 7, 0x0f07),
(3, 609, 1033, 2006, 7, 0x0f07),
(3, 609, 1034, 2006, 7, 0x0f07),
(3, 609, 1035, 2006, 7, 0x0f07),
(3, 609, 1036, 2006, 7, 0x0f07),
(3, 609, 1037, 2006, 7, 0x0f07),
(3, 609, 1038, 2006, 7, 0x0f07),
(3, 609, 1039, 2006, 7, 0x0f07),
(3, 609, 1040, 2006, 7, 0x0f07),
(3, 609, 1041, 2006, 7, 0x0f07),
(3, 609, 1042, 2006, 7, 0x0f07),
(3, 609, 1043, 2006, 7, 0x0f07),
(3, 609, 1044, 2006, 7, 0x0f07),
(3, 609, 1045, 2006, 7, 0x0f07),
(3, 609, 1046, 2006, 7, 0x0f07),
(3, 609, 1047, 2006, 7, 0x0f07),
(3, 609, 1048, 2006, 7, 0x0f07),
(2, 1, 101, 2471, 1, ''),
(2, 3, 102, 1998, 1, ''),
(2, 4, 103, 2656, 1, ''),
(2, 5, 104, 2523, 1, ''),
(2, 6, 105, 2392, 1, ''),
(2, 7, 106, 2469, 1, ''),
(2, 8, 107, 2195, 1, ''),
(2, 10, 108, 2001, 1, ''),
(2, 102, 109, 2553, 1, ''),
(2, 102, 110, 2261, 5, 0x0f05),
(2, 102, 111, 2361, 1, ''),
(2, 102, 112, 2365, 1, ''),
(2, 102, 113, 2152, 48, 0x0f30),
(2, 102, 114, 2173, 99, 0x166300),
(2, 102, 115, 2789, 66, 0x0f42),
(2, 102, 116, 2092, 1, 0x04c00d),
(2, 102, 117, 2160, 77, 0x0f4d),
(2, 102, 118, 2167, 1, ''),
(2, 102, 119, 1970, 1, 0x069b0042616e6f7220492070726169736520796f7572206e616d652e0a42652077697468206d6520696e2074686520626174746c652e0a4265206d7920736869656c642c206c6574206d6520626520796f75722073776f72642e0a492077696c6c20686f6e6f75722074686520676f646c7920737061726b20696e206d7920736f756c2e0a4d617920697420666c6f757269736820616e642067726f772e),
(2, 102, 120, 2000, 1, ''),
(2, 102, 121, 1999, 1, ''),
(2, 102, 122, 1988, 1, ''),
(2, 102, 123, 2120, 1, ''),
(2, 102, 124, 2554, 1, ''),
(2, 108, 125, 2262, 97, 0x0f61),
(2, 108, 126, 2262, 86, 0x0f56),
(2, 108, 127, 2262, 96, 0x0f60),
(2, 108, 128, 2262, 97, 0x0f61),
(2, 108, 129, 2286, 95, 0x0f5f),
(2, 108, 130, 2286, 95, 0x0f5f),
(2, 108, 131, 2286, 99, 0x0f63),
(2, 108, 132, 2286, 96, 0x0f60),
(2, 108, 133, 2305, 99, 0x0f63),
(2, 108, 134, 2305, 95, 0x0f5f),
(2, 108, 135, 2305, 97, 0x0f61),
(2, 108, 136, 2305, 92, 0x0f5c),
(2, 108, 137, 2261, 99, 0x0f63),
(2, 108, 138, 2261, 99, 0x0f63),
(2, 108, 139, 2261, 94, 0x0f5e),
(2, 108, 140, 2261, 96, 0x0f60),
(2, 108, 141, 2293, 99, 0x0f63),
(2, 108, 142, 2293, 96, 0x0f60),
(2, 108, 143, 2293, 94, 0x0f5e),
(2, 108, 144, 2293, 96, 0x0f60),
(2, 112, 145, 1988, 1, ''),
(2, 120, 146, 2268, 61, 0x0f3d),
(2, 120, 147, 2268, 100, 0x0f64),
(2, 120, 148, 2268, 97, 0x0f61),
(2, 120, 149, 2268, 100, 0x0f64),
(2, 120, 150, 2268, 100, 0x0f64),
(2, 120, 151, 2268, 100, 0x0f64),
(2, 120, 152, 2268, 100, 0x0f64),
(2, 120, 153, 2268, 100, 0x0f64),
(2, 120, 154, 2268, 100, 0x0f64),
(2, 120, 155, 2268, 99, 0x0f63),
(2, 120, 156, 2268, 100, 0x0f64),
(2, 120, 157, 2268, 100, 0x0f64),
(2, 120, 158, 2268, 100, 0x0f64),
(2, 120, 159, 2268, 100, 0x0f64),
(2, 120, 160, 2268, 100, 0x0f64),
(2, 120, 161, 2268, 100, 0x0f64),
(2, 120, 162, 2268, 100, 0x0f64),
(2, 120, 163, 2268, 100, 0x0f64),
(2, 120, 164, 2268, 100, 0x0f64),
(2, 121, 165, 2166, 1, 0x10009a1000),
(2, 121, 166, 2164, 99, 0x166300),
(2, 121, 167, 2164, 99, 0x166300),
(2, 121, 168, 2164, 99, 0x166300),
(2, 121, 169, 2164, 99, 0x166300),
(2, 121, 170, 2164, 99, 0x166300),
(2, 121, 171, 2164, 99, 0x166300),
(2, 121, 172, 2164, 99, 0x166300),
(2, 121, 173, 2164, 99, 0x166300),
(2, 121, 174, 2164, 99, 0x166300),
(2, 121, 175, 2164, 99, 0x166300),
(2, 121, 176, 2164, 99, 0x166300),
(2, 121, 177, 2164, 99, 0x166300),
(2, 121, 178, 2164, 99, 0x166300),
(2, 122, 179, 7419, 1, ''),
(2, 122, 180, 1746, 1, ''),
(2, 122, 181, 1746, 1, ''),
(2, 122, 182, 2197, 99, 0x166300),
(2, 122, 183, 2197, 99, 0x166300),
(2, 122, 184, 2197, 99, 0x166300),
(2, 122, 185, 2197, 99, 0x166300),
(2, 122, 186, 2197, 99, 0x166300),
(2, 122, 187, 2197, 99, 0x166300),
(2, 122, 188, 2197, 99, 0x166300),
(2, 122, 189, 2197, 99, 0x166300),
(2, 122, 190, 2197, 99, 0x166300),
(2, 122, 191, 2197, 99, 0x166300),
(2, 122, 192, 2197, 99, 0x166300),
(2, 122, 193, 2197, 99, 0x166300),
(2, 122, 194, 2197, 99, 0x166300),
(2, 122, 195, 2197, 99, 0x166300),
(2, 122, 196, 2197, 99, 0x166300),
(2, 122, 197, 2197, 99, 0x166300),
(2, 145, 198, 5791, 1, ''),
(2, 145, 199, 6132, 1, 0x1030b2db00),
(2, 145, 200, 6528, 1, ''),
(2, 145, 201, 2789, 100, 0x0f64),
(2, 145, 202, 2789, 100, 0x0f64),
(2, 145, 203, 2187, 1, ''),
(2, 145, 204, 2273, 12, 0x0f0c),
(2, 145, 205, 2273, 100, 0x0f64),
(2, 145, 206, 2273, 55, 0x0f37),
(2, 145, 207, 2273, 100, 0x0f64),
(1, 1, 101, 2471, 1, ''),
(1, 2, 102, 2130, 1, ''),
(1, 3, 103, 2004, 1, ''),
(1, 4, 104, 2466, 1, ''),
(1, 5, 105, 2524, 1, ''),
(1, 6, 106, 7410, 1, ''),
(1, 7, 107, 2470, 1, ''),
(1, 8, 108, 2646, 1, ''),
(1, 9, 109, 2164, 99, 0x166300),
(1, 10, 110, 2091, 1, 0x049a02),
(1, 103, 111, 5903, 1, ''),
(1, 103, 112, 2196, 1, ''),
(1, 103, 113, 2746, 1, ''),
(1, 103, 114, 2128, 1, ''),
(1, 103, 115, 2343, 1, ''),
(1, 103, 116, 2538, 1, ''),
(1, 103, 117, 2500, 1, ''),
(1, 103, 118, 2537, 1, ''),
(1, 103, 119, 2499, 1, ''),
(1, 103, 120, 2527, 1, ''),
(1, 103, 121, 2522, 1, ''),
(1, 103, 122, 2506, 1, ''),
(1, 103, 123, 2502, 1, ''),
(1, 103, 124, 2504, 1, ''),
(1, 103, 125, 2503, 1, ''),
(1, 103, 126, 2358, 1, ''),
(1, 103, 127, 2474, 1, ''),
(1, 103, 128, 2408, 1, ''),
(1, 103, 129, 2390, 1, ''),
(1, 103, 130, 2523, 1, '');

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_namelocks`
--

CREATE TABLE `player_namelocks` (
  `player_id` int(11) NOT NULL,
  `reason` varchar(255) NOT NULL,
  `namelocked_at` bigint(20) NOT NULL,
  `namelocked_by` int(11) NOT NULL,
  PRIMARY KEY (`player_id`),
  KEY `namelocked_by` (`namelocked_by`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_spells`
--

CREATE TABLE `player_spells` (
  `player_id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  KEY `player_id` (`player_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `player_storage`
--

CREATE TABLE `player_storage` (
  `player_id` int(11) NOT NULL DEFAULT '0',
  `key` int(10) unsigned NOT NULL DEFAULT '0',
  `value` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`player_id`,`key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `player_storage`
--

INSERT INTO `player_storage` (`player_id`, `key`, `value`) VALUES
(1, 1008, 2),
(1, 1009, 0),
(1, 1010, 1),
(1, 1011, 1),
(1, 1012, 1),
(1, 1013, 1),
(1, 1016, 2),
(1, 1020, 1),
(1, 1021, 1),
(1, 1022, 1),
(1, 1050, 1),
(1, 1080, 1),
(1, 1081, 2),
(1, 2005, 2),
(1, 2017, 2),
(1, 5999, 1),
(1, 30013, 1),
(1, 30017, 1),
(1, 30034, 1),
(1, 30035, 1),
(1, 30047, 1),
(1, 30048, 1),
(1, 30055, 1),
(1, 30063, 1),
(1, 30064, 1),
(1, 30065, 1),
(1, 30066, 1),
(1, 30084, 1),
(1, 30085, 1),
(1, 31018, 1),
(1, 31025, 1),
(1, 31026, 1),
(1, 31078, 1),
(1, 31081, 1),
(1, 31146, 1),
(1, 31161, 1),
(1, 31162, 1),
(1, 31163, 1),
(1, 31164, 1),
(1, 31165, 1),
(1, 111111, 1576035085),
(2, 1022, 1),
(2, 1033, 1),
(2, 1078, 1),
(2, 1083, 2),
(2, 30013, 1),
(2, 30018, 1),
(2, 30055, 1),
(2, 30084, 1),
(2, 31008, 1),
(2, 31009, 1),
(2, 31023, 1),
(2, 31024, 1),
(2, 31081, 1),
(2, 31141, 1),
(2, 31142, 1),
(2, 31143, 1),
(2, 31144, 1),
(2, 31145, 1),
(2, 31146, 1),
(2, 31147, 1),
(2, 31161, 1),
(2, 31162, 1),
(2, 31163, 1),
(2, 31164, 1),
(2, 31165, 1),
(2, 111111, 1575962647),
(2, 10001001, 9240578),
(2, 10001002, 8519682),
(3, 30055, 1),
(3, 111111, 1575853360);

-- --------------------------------------------------------

--
-- Estrutura da tabela `server_config`
--

CREATE TABLE `server_config` (
  `config` varchar(50) NOT NULL,
  `value` varchar(256) NOT NULL DEFAULT '',
  PRIMARY KEY (`config`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `server_config`
--

INSERT INTO `server_config` (`config`, `value`) VALUES
('db_version', '20'),
('motd_hash', 'ad524f456f95139085881f11a2fc383de274277e'),
('motd_num', '1'),
('players_record', '2');

-- --------------------------------------------------------

--
-- Estrutura da tabela `tile_store`
--

CREATE TABLE `tile_store` (
  `house_id` int(11) NOT NULL,
  `data` longblob NOT NULL,
  KEY `house_id` (`house_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Extraindo dados da tabela `tile_store`
--

INSERT INTO `tile_store` (`house_id`, `data`) VALUES
(1, 0x88807d7d0701000000da0600),
(1, 0x88807e7d0701000000db0600),
(1, 0x8b807d7d0701000000da0600),
(1, 0x8b807e7d0701000000db0600),
(1, 0x8c807f7d0601000000c50400),
(1, 0x8d807d7d0701000000da0600),
(1, 0x8d807e7d0701000000db0600),
(1, 0x90807d7d0701000000da0600),
(1, 0x90807e7d0701000000db0600),
(1, 0x8a80817d0601000000c30400),
(1, 0x8880827d0701000000e00600),
(1, 0x8980827d0701000000e10600),
(1, 0x8b80817d0701000000c50400),
(1, 0x8c80827d0601000000c50400),
(1, 0x8d80817d0601000000c30400),
(1, 0x8d80817d0701000000c50400),
(1, 0x8f80827d0701000000e00600),
(1, 0x8880857d0601000000e00600),
(1, 0x8980857d0601000000e10600),
(1, 0x8a80847d0701000000c30400),
(1, 0x8f80857d0601000000e00600),
(1, 0x8e80847d0701000000c30400),
(1, 0x9080807d0601000000da0600),
(1, 0x9080817d0601000000db0600),
(1, 0x9080827d0701000000e10600),
(1, 0x9080857d0601000000e10600),
(2, 0x9880827d0701000000e00600),
(2, 0x9980827d0701000000e10600),
(2, 0x9e80837d07010000002d1900),
(2, 0x9a80867d0601000000c40400),
(2, 0x9880867d0701000000e00600),
(2, 0x9980867d0701000000e10600),
(2, 0x9a80847d0701000000c40400),
(2, 0x9c80877d07010000002c1900),
(2, 0x9e80867d07010000002d1900),
(3, 0x7e80687d0501000000c30400),
(3, 0x7c80697d0601000000c50400),
(3, 0x7e80697d0601000000c60400),
(3, 0x7c80697d0701000000c50400),
(3, 0x7e80687d0701000000c40400),
(3, 0x7e806a7d0701000000e00600),
(3, 0x7f806a7d0701000000e10600),
(3, 0x7e806c7d0701000000e00600),
(3, 0x7f806c7d0701000000e10600),
(3, 0x80806b7d0601000000c30400),
(4, 0x8180487d0701000000da0600),
(4, 0x8180497d0701000000db0600),
(4, 0x8380497d0701000000c30400),
(4, 0x83804d7d0601000000c30400),
(4, 0x81804d7d0701000000da0600),
(4, 0x81804e7d0701000000db0600),
(4, 0x83804d7d0701000000c30400),
(4, 0x85804d7d0501000000c30400),
(5, 0x7e80467d0501000000e00600),
(5, 0x7f80467d0501000000e10600),
(5, 0x7e80447d0701000000c30400),
(5, 0x8280437d0701000000da0600),
(5, 0x8080457d0601000000c30400),
(5, 0x8280447d0701000000db0600),
(6, 0x8180277d0701000000da0600),
(6, 0x8480277d0501000000da0600),
(6, 0x83802a7d0601000000c30400),
(6, 0x8180287d0701000000db0600),
(6, 0x81802a7d0701000000da0600),
(6, 0x81802b7d0701000000db0600),
(6, 0x8480287d0501000000db0600),
(6, 0x84802a7d0501000000da0600),
(6, 0x84802b7d0501000000db0600),
(6, 0x8780287d0501000000c30400),
(6, 0x87802b7d0501000000c30400),
(6, 0x8480287d0701000000c40400),
(6, 0x84802b7d0701000000c40400),
(7, 0x7c80377d0701000000da0600),
(7, 0x7f803a7d0501000000da0600),
(7, 0x7f803b7d0501000000db0600),
(7, 0x7e80397d0601000000c50400),
(7, 0x7c80387d0701000000db0600),
(7, 0x7e80397d0701000000c50400),
(8, 0x7e80337d0701000000c40400),
(8, 0x7e80367d0601000000c50400),
(8, 0x7f80347d0701000000da0600),
(8, 0x7f80357d0701000000db0600),
(8, 0x8280327d0701000000da0600),
(8, 0x8280337d0701000000db0600),
(9, 0x81803a7d0701000000da0600),
(9, 0x81803b7d0701000000db0600),
(9, 0x8680397d0601000000c50400),
(9, 0x81803d7d0701000000e00600),
(9, 0x82803d7d0701000000e10600),
(9, 0x86803d7d0701000000e00600),
(9, 0x87803d7d0701000000e10600),
(10, 0x8680367d0601000000c50400),
(10, 0x8580357d0701000000c60400),
(10, 0x8680367d0701000000e00600),
(10, 0x8780367d0701000000e10600),
(10, 0x8680387d0701000000e00600),
(10, 0x8780387d0701000000e10600),
(11, 0xd3806f7d0601000000da0600),
(11, 0xd3806c7d0701000000e00600),
(11, 0xd5806f7d0501000000da0600),
(11, 0xd4806c7d0701000000e10600),
(11, 0xd9806f7d0501000000da0600),
(11, 0xdb806e7d0601000000c50400),
(11, 0xd8806e7d0701000000c30400),
(11, 0xd380707d0601000000db0600),
(11, 0xd380737d0601000000da0600),
(11, 0xd380707d0701000000e00600),
(11, 0xd380727d0701000000e00600),
(11, 0xd480717d0501000000c50400),
(11, 0xd480737d0501000000c50400),
(11, 0xd580707d0501000000db0600),
(11, 0xd780717d0501000000c50400),
(11, 0xd780737d0501000000c50400),
(11, 0xd680707d0601000000c30400),
(11, 0xd480707d0701000000e10600),
(11, 0xd480727d0701000000e10600),
(11, 0xd980707d0501000000db0600),
(11, 0xd980707d0601000000c30400),
(11, 0xdb80737d0701000000c50400),
(11, 0xd380747d0601000000db0600),
(11, 0xd380757d0701000000e00600),
(11, 0xd580747d0501000000da0600),
(11, 0xd580757d0501000000db0600),
(11, 0xd680747d0601000000c30400),
(11, 0xd480757d0701000000e10600),
(11, 0xd980747d0501000000da0600),
(11, 0xd980757d0501000000db0600),
(11, 0xd980747d0601000000c30400),
(11, 0xd880757d0701000000c30400),
(12, 0xae807f7d0601000000c50400),
(12, 0xaf80817d0701000000c60400),
(12, 0xad80847d0501000000e00600),
(12, 0xae80847d0501000000e10600),
(12, 0xaf80847d0501000000e00600),
(12, 0xad80847d0701000000e00600),
(12, 0xae80847d0701000000e10600),
(12, 0xaf80847d0701000000e00600),
(12, 0xb080847d0501000000e10600),
(12, 0xb080847d0701000000e10600),
(13, 0xb4807f7d0601000000c50400),
(13, 0xb480817d0701000000c50400),
(13, 0xb280847d0501000000e00600),
(13, 0xb380847d0501000000e10600),
(13, 0xb280847d0701000000e00600),
(13, 0xb380847d0701000000e10600),
(13, 0xb480847d0501000000e00600),
(13, 0xb580847d0501000000e10600),
(13, 0xb480847d0701000000e00600),
(13, 0xb580847d0701000000e10600),
(14, 0xd380357d0701000000c30400),
(14, 0xd680347d0701000000da0600),
(14, 0xd680357d0701000000db0600),
(14, 0xd680377d0701000000da0600),
(14, 0xd280397d0501000000c40400),
(14, 0xd080397d0601000000c60400),
(14, 0xd280397d0601000000c60400),
(14, 0xd380387d0701000000c30400),
(14, 0xd3803b7d0701000000c30400),
(14, 0xd4803b7d0601000000c30400),
(14, 0xd680387d0701000000db0600),
(14, 0xd6803a7d0701000000da0600),
(14, 0xd6803b7d0701000000db0600),
(15, 0xa780557d0701000000da0600),
(15, 0xa780567d0701000000db0600),
(15, 0xab80567d0701000000c30400),
(15, 0xae80577d0701000000c60400),
(15, 0xa7805a7d0701000000da0600),
(15, 0xa7805b7d0701000000db0600),
(15, 0xab80587d0501000000c30400),
(15, 0xa9805a7d0601000000c40400),
(15, 0xab80587d0601000000c60400),
(15, 0xae80587d0601000000c50400),
(15, 0xac805a7d0701000000da0600),
(15, 0xac805b7d0701000000db0600),
(15, 0xb0805a7d0701000000da0600),
(15, 0xb0805b7d0701000000db0600),
(16, 0x9d802f7d0701000000e00600),
(16, 0x9e802f7d0701000000e10600),
(16, 0x9f802e7d0701000000c30400),
(16, 0xa3802f7d0501000000c30400),
(16, 0xa1802f7d0701000000c30400),
(16, 0xa2802d7d0701000000da0600),
(16, 0xa2802e7d0701000000db0600),
(16, 0xa6802d7d0701000000da0600),
(16, 0xa6802e7d0701000000db0600),
(16, 0xa080307d0701000000c50400),
(16, 0xa480327d0601000000c50400),
(17, 0xaf80377d0501000000e00600),
(17, 0xaf80397d0501000000e00600),
(17, 0xaf803b7d0501000000da0600),
(17, 0xaf803c7d0501000000db0600),
(17, 0xb080377d0501000000e10600),
(17, 0xb080367d0601000000c50400),
(17, 0xb080397d0501000000e10600),
(17, 0xb280397d0501000000c30400),
(17, 0xb280397d0701000000c50400),
(17, 0xb480397d0601000000c50400),
(17, 0xb2803c7d0501000000c30400),
(18, 0xb5802f7d0701000000c30400),
(18, 0xb380307d0701000000e00600),
(18, 0xb380327d0701000000da0600),
(18, 0xb380337d0701000000db0600),
(18, 0xb680337d0601000000c50400),
(18, 0xb480307d0701000000e10600),
(18, 0xb780307d0701000000c50400),
(19, 0xbf80327d0501000000e00600),
(19, 0xc0802f7d0501000000c50400),
(19, 0xc1802e7d0501000000c30400),
(19, 0xc2802f7d0701000000c30400),
(19, 0xc4802d7d0501000000da0600),
(19, 0xc4802e7d0501000000db0600),
(19, 0xc4802f7d0601000000c50400),
(19, 0xc080327d0501000000e10600),
(19, 0xc380327d0501000000e00600),
(19, 0xc080337d0601000000c50400),
(19, 0xc280327d0601000000c30400),
(19, 0xc480327d0501000000e10600),
(19, 0xc480317d0701000000c50400),
(20, 0xc680377d0501000000da0600),
(20, 0xc480367d0601000000c50400),
(20, 0xc1803a7d0501000000c50400),
(20, 0xc380387d0501000000c30400),
(20, 0xc280387d0601000000c30400),
(20, 0xc2803b7d0601000000c30400),
(20, 0xc5803b7d0501000000e00600),
(20, 0xc680387d0501000000db0600),
(20, 0xc6803b7d0501000000e10600),
(20, 0xc0803d7d0501000000e00600),
(20, 0xc1803d7d0501000000e10600),
(20, 0xc5803d7d0501000000e00600),
(20, 0xc6803d7d0501000000e10600),
(21, 0xe0802f7d0501000000c30400),
(21, 0xe0802f7d0701000000c30400),
(21, 0xe2802d7d0701000000e00600),
(21, 0xe3802d7d0701000000e10600),
(21, 0xde80327d0501000000e00600),
(21, 0xdf80307d0501000000c50400),
(21, 0xdf80327d0501000000e10600),
(21, 0xdf80317d0701000000c50400),
(21, 0xde80347d0701000000da0600),
(21, 0xde80357d0701000000db0600),
(21, 0xe180337d0601000000c50400),
(21, 0xe280307d0701000000e00600),
(21, 0xe380307d0701000000e10600),
(21, 0xe380347d0701000000da0600),
(21, 0xe380357d0701000000db0600),
(22, 0xec80337d0601000000c50400),
(22, 0xed80317d0701000000c30400),
(22, 0xef80307d0701000000da0600),
(22, 0xef80317d0701000000db0600),
(22, 0xed80357d0701000000c30400),
(22, 0xef80347d0701000000da0600),
(22, 0xef80357d0701000000db0600),
(23, 0xce80437d0501000000c50400),
(23, 0xce80467d0501000000e00600),
(23, 0xcf80467d0501000000e10600),
(23, 0xcf80477d0601000000c50400),
(23, 0xcf80457d0701000000c50400),
(23, 0xce80497d0701000000e00600),
(23, 0xcf80497d0701000000e10600),
(23, 0xd080437d0601000000c50400),
(23, 0xd180497d0701000000e00600),
(23, 0xd280497d0701000000e10600),
(24, 0xd380477d0601000000c50400),
(24, 0xd580457d0701000000c50400),
(24, 0xd480487d0701000000da0600),
(24, 0xd480497d0701000000db0600),
(24, 0xd680487d0701000000da0600),
(24, 0xd680497d0701000000db0600),
(25, 0x9c80217d0201000000e00600),
(25, 0x9d80217d0201000000e10600),
(25, 0x9f80217d0201000000e00600),
(25, 0x9e80247d0601000000c50400),
(25, 0xa080217d0201000000e10600),
(26, 0x93805b7d0701000000da0600),
(26, 0x93805c7d0701000000db0600),
(26, 0x96805d7d0701000000c50400),
(27, 0x92805f7d0701000000c50400),
(27, 0x9280627d0701000000e00600),
(27, 0x9380627d0701000000e10600),
(28, 0x8c80617d0701000000da0600),
(28, 0x8c80627d0701000000db0600),
(28, 0x8f80637d0701000000c50400),
(29, 0x8980637d0701000000c30400),
(29, 0x8680647d0701000000e00600),
(29, 0x8780647d0701000000e10600),
(30, 0x86805f7d0701000000da0600),
(30, 0x8680607d0701000000db0600),
(30, 0x8980607d0701000000c30400),
(31, 0x86805d7d0701000000e00600),
(31, 0x87805d7d0701000000e10600),
(31, 0x89805c7d0701000000c30400),
(32, 0x8c805f7d0701000000e00600),
(32, 0x8d805f7d0701000000e10600),
(32, 0x8e805c7d0701000000c50400),
(32, 0x8e805f7d0701000000e00600),
(32, 0x8f805f7d0701000000e10600),
(33, 0x86805b7d0601000000e00600),
(33, 0x87805b7d0601000000e10600),
(33, 0x87805e7d0601000000c50400),
(34, 0x8680627d0601000000da0600),
(34, 0x8680637d0601000000db0600),
(34, 0x8880617d0601000000c50400),
(34, 0x8980627d0601000000da0600),
(34, 0x8980637d0601000000db0600),
(35, 0x89805b7d0601000000e00600),
(35, 0x8a805b7d0601000000e10600),
(35, 0x8b805e7d0601000000c50400),
(36, 0x8d80617d0601000000c50400),
(36, 0x8c80647d0601000000e00600),
(36, 0x8d80647d0601000000e10600),
(37, 0x8d805b7d0601000000da0600),
(37, 0x8d805c7d0601000000db0600),
(37, 0x8f805e7d0601000000c50400),
(38, 0x9080637d0601000000da0600),
(38, 0x9280617d0601000000c50400),
(38, 0x9080647d0601000000db0600),
(39, 0x91805b7d0601000000da0600),
(39, 0x91805c7d0601000000db0600),
(39, 0x93805e7d0601000000c50400),
(40, 0x95805b7d0601000000e00600),
(40, 0x96805b7d0601000000e10600),
(40, 0x96805e7d0601000000c50400),
(41, 0x95805b7d0501000000e00600),
(41, 0x96805b7d0501000000e10600),
(41, 0x96805e7d0501000000c50400),
(42, 0x91805b7d0501000000da0600),
(42, 0x91805c7d0501000000db0600),
(42, 0x93805e7d0501000000c50400),
(43, 0x9280617d0501000000c50400),
(43, 0x9280647d0501000000e00600),
(43, 0x9380647d0501000000e10600),
(44, 0x8d805b7d0501000000da0600),
(44, 0x8d805c7d0501000000db0600),
(44, 0x8f805e7d0501000000c50400),
(45, 0x8d80617d0501000000c50400),
(45, 0x8d80647d0501000000e00600),
(45, 0x8e80647d0501000000e10600),
(46, 0x89805b7d0501000000da0600),
(46, 0x89805c7d0501000000db0600),
(46, 0x8b805e7d0501000000c50400),
(47, 0x8680627d0501000000da0600),
(47, 0x8680637d0501000000db0600),
(47, 0x8880617d0501000000c50400),
(47, 0x8980627d0501000000da0600),
(47, 0x8980637d0501000000db0600),
(48, 0x86805b7d0501000000e00600),
(48, 0x87805b7d0501000000e10600),
(48, 0x87805e7d0501000000c50400),
(49, 0x91805b7d0401000000e00600),
(49, 0x92805b7d0401000000e10600),
(49, 0x96805e7d0401000000c50400),
(50, 0x8c80627d0401000000e00600),
(50, 0x8d80627d0401000000e10600),
(50, 0x8c80647d0401000000e00600),
(50, 0x8d80647d0401000000e10600),
(50, 0x8f80647d0401000000c30400),
(50, 0x9280617d0401000000c50400),
(51, 0x8a805d7d0401000000e00600),
(51, 0x8b805d7d0401000000e10600),
(51, 0x8c805c7d0401000000c30400),
(51, 0x8f805e7d0401000000c50400),
(52, 0x89805f7d0401000000c30400),
(52, 0x8780617d0401000000c50400),
(52, 0x8680647d0401000000e00600),
(52, 0x8780647d0401000000e10600),
(52, 0x8980647d0401000000e00600),
(52, 0x8a80647d0401000000e10600),
(53, 0xa0805f7d0701000000da0600),
(53, 0xa3805f7d0701000000da0600),
(53, 0xa080627d0501000000e00600),
(53, 0xa180627d0501000000e10600),
(53, 0xa180617d0601000000c50400),
(53, 0xa080607d0701000000db0600),
(53, 0xa380607d0701000000db0600),
(53, 0xa580627d0501000000da0600),
(53, 0xa580637d0501000000db0600),
(53, 0xa180657d0501000000c50400),
(53, 0xa180657d0601000000c50400),
(53, 0xa280657d0701000000c50400),
(53, 0xa480657d0501000000c50400),
(53, 0xa580657d0601000000c50400),
(53, 0xa480677d0701000000c30400),
(54, 0xc5805f7d0701000000da0600),
(54, 0xc8805f7d0701000000da0600),
(54, 0xc780617d0601000000c50400),
(54, 0xc580607d0701000000db0600),
(54, 0xc780627d0701000000c50400),
(54, 0xc880607d0701000000db0600),
(55, 0xca805f7d0701000000da0600),
(55, 0xcd805f7d0701000000da0600),
(55, 0xca80607d0701000000db0600),
(55, 0xcc80617d0601000000c50400),
(55, 0xcc80627d0701000000c50400),
(55, 0xcd80607d0701000000db0600),
(56, 0x9180327d0501000000c50400),
(56, 0x9380317d0501000000c30400),
(56, 0x9180337d0701000000c50400),
(56, 0x9380317d0701000000c30400),
(56, 0x9780307d0701000000da0600),
(56, 0x9780317d0701000000db0600),
(56, 0x9080357d0501000000e00600),
(56, 0x9180357d0501000000e10600),
(56, 0x9380357d0701000000c30400),
(56, 0x9580347d0601000000c30400),
(57, 0x9380267d0601000000c50400),
(57, 0x9180247d0701000000da0600),
(57, 0x9180257d0701000000db0600),
(57, 0x9280277d0701000000c50400),
(57, 0x9480277d0701000000c50400),
(57, 0x9780247d0701000000da0600),
(57, 0x9780257d0701000000db0600),
(57, 0x9780277d0701000000da0600),
(57, 0x9580297d0701000000c30400),
(57, 0x9780287d0701000000db0600),
(58, 0xe7806d7d0601000000c30400),
(58, 0xe8806c7d0501000000e00600),
(58, 0xe9806c7d0501000000e10600),
(58, 0xe9806e7d0501000000c50400),
(59, 0xe880577d0501000000e00600),
(59, 0xe980577d0501000000e10600),
(59, 0xe780587d0601000000c30400),
(59, 0xea80587d0701000000c30400),
(60, 0xe880537d0501000000e00600),
(60, 0xe980537d0501000000e10600),
(60, 0xe780547d0601000000c30400),
(60, 0xea80547d0701000000c30400),
(61, 0xe380497d0701000000c30400),
(61, 0xe680487d0701000000da0600),
(61, 0xe680497d0701000000db0600),
(61, 0xe2804d7d0501000000c30400),
(61, 0xe3804d7d0701000000c30400),
(61, 0xe4804d7d0601000000c30400),
(61, 0xe6804c7d0701000000da0600),
(61, 0xe6804d7d0701000000db0600),
(62, 0x9b80757d0501000000da0600),
(62, 0x9b80767d0501000000db0600),
(62, 0x9880757d0701000000e00600),
(62, 0x9980757d0701000000e10600),
(62, 0x9a80747d07010000002c1900),
(62, 0x9f80757d0501000000da0600),
(62, 0x9f80767d0501000000db0600),
(62, 0x9f80777d0601000000c30400),
(62, 0x9d80747d07010000002c1900),
(62, 0x9d80757d0701000000e00600),
(62, 0x9e80757d0701000000e10600),
(62, 0x9f80777d0701000000c30400),
(62, 0x9880787d0701000000e00600),
(62, 0x98807a7d0701000000e00600),
(62, 0x9980787d0701000000e10600),
(62, 0x99807a7d0701000000e10600),
(62, 0x9c80797d0501000000c50400),
(62, 0x9f807b7d0601000000c30400),
(62, 0x9d80787d0701000000e00600),
(62, 0x9d807a7d0701000000e00600),
(62, 0x9e80787d0701000000e10600),
(62, 0x9e807a7d0701000000e10600),
(62, 0x98807c7d0701000000e00600),
(62, 0x98807e7d0701000000e00600),
(62, 0x99807c7d0701000000e10600),
(62, 0x99807e7d0701000000e10600),
(62, 0x9d807e7d0701000000e00600),
(62, 0x9e807e7d0701000000e10600),
(62, 0x9f807d7d0701000000c30400),
(62, 0xa180757d0501000000da0600),
(62, 0xa180767d0501000000db0600),
(62, 0xa280777d0601000000c30400),
(62, 0xa380747d07010000002c1900),
(62, 0xa580757d0501000000da0600),
(62, 0xa580767d0501000000db0600),
(62, 0xa780747d07010000002c1900),
(62, 0xa080797d0501000000c50400),
(62, 0xa2807b7d0601000000c30400),
(62, 0xa480797d0501000000c50400),
(62, 0xa1807c7d0601000000c50400),
(63, 0xbc80767d0701000000da0600),
(63, 0xbc80777d0701000000db0600),
(63, 0xbb80787d0701000000c50400),
(63, 0xbd80797d0501000000e00600),
(63, 0xbd807b7d0501000000e00600),
(63, 0xbe80797d0501000000e10600),
(63, 0xbe807b7d0501000000e10600),
(63, 0xbe80787d0601000000c50400),
(63, 0xbf80787d0701000000c50400),
(63, 0xbd807d7d0501000000da0600),
(63, 0xbd807e7d0501000000db0600),
(63, 0xc080767d0701000000da0600),
(63, 0xc080777d0701000000db0600),
(63, 0xc380767d0701000000da0600),
(63, 0xc380777d0701000000db0600),
(63, 0xc1807b7d0501000000c30400),
(63, 0xc0807a7d0601000000c30400),
(63, 0xc280787d0701000000c50400),
(63, 0xc1807e7d0501000000c30400),
(63, 0xc0807d7d0601000000c30400),
(64, 0x787e027e0701000000da0600),
(64, 0x787e037e0701000000db0600),
(64, 0x797e017e0701000000c50400),
(65, 0x7d7e027e0701000000da0600),
(65, 0x7d7e037e0701000000db0600),
(65, 0x7e7e017e0701000000c50400),
(66, 0x7b7e077e0701000000da0600),
(66, 0x777e087e0701000000c30400),
(66, 0x7b7e087e0701000000db0600),
(67, 0x847e027e0701000000da0600),
(67, 0x847e037e0701000000db0600),
(67, 0x837e057e0701000000c30400),
(68, 0x867e0b7e0701000000da0600),
(68, 0x877e0b7e0701000000da0600),
(68, 0x837e0c7e0701000000c30400),
(68, 0x867e0c7e0701000000db0600),
(68, 0x877e0c7e0701000000db0600),
(69, 0x827e0d7e0701000000c50400),
(69, 0x867e0e7e0701000000e00600),
(69, 0x867e0f7e0701000000e00600),
(69, 0x877e0e7e0701000000e10600),
(69, 0x877e0f7e0701000000e10600),
(70, 0x7d7e0e7e0701000000da0600),
(70, 0x7d7e0f7e0701000000db0600),
(70, 0x7e7e0d7e0701000000c50400),
(71, 0x787e0e7e0701000000da0600),
(71, 0x787e0f7e0701000000db0600),
(71, 0x797e0d7e0701000000c50400),
(72, 0x7d7e027e0601000000da0600),
(72, 0x7d7e037e0601000000db0600),
(72, 0x7e7e017e0601000000c50400),
(73, 0x787e027e0601000000da0600),
(73, 0x787e037e0601000000db0600),
(73, 0x797e017e0601000000c50400),
(74, 0x787e077e0601000000da0600),
(74, 0x787e087e0601000000db0600),
(74, 0x797e0b7e0601000000c50400),
(75, 0x847e027e0601000000da0600),
(75, 0x847e037e0601000000db0600),
(75, 0x837e057e0601000000c30400),
(75, 0x887e047e0601000000c30400),
(76, 0x867e077e0601000000e00600),
(76, 0x877e077e0601000000e10600),
(76, 0x867e087e0601000000e00600),
(76, 0x877e087e0601000000e10600),
(76, 0x887e097e0601000000c40400),
(76, 0x837e0c7e0601000000c30400),
(77, 0x827e0d7e0601000000c50400),
(77, 0x867e0e7e0601000000e00600),
(77, 0x867e0f7e0601000000e00600),
(77, 0x877e0e7e0601000000e10600),
(77, 0x877e0f7e0601000000e10600),
(77, 0x857e127e0601000000c50400),
(78, 0x7d7e0e7e0601000000da0600),
(78, 0x7d7e0f7e0601000000db0600),
(78, 0x7e7e0d7e0601000000c50400),
(78, 0x7f7e127e0601000000c60400),
(79, 0x787e0e7e0601000000da0600),
(79, 0x787e0f7e0601000000db0600),
(79, 0x797e0d7e0601000000c50400),
(79, 0x7a7e127e0601000000c50400),
(80, 0x7d7e027e0501000000da0600),
(80, 0x7d7e037e0501000000db0600),
(80, 0x7e7e017e0501000000c50400),
(81, 0x787e027e0501000000da0600),
(81, 0x787e037e0501000000db0600),
(81, 0x797e017e0501000000c50400),
(82, 0x787e077e0501000000da0600),
(82, 0x787e087e0501000000db0600),
(82, 0x797e0b7e0501000000c50400),
(83, 0x847e027e0501000000da0600),
(83, 0x847e037e0501000000db0600),
(83, 0x837e057e0501000000c30400),
(83, 0x887e047e0501000000c30400),
(84, 0x867e077e0501000000e00600),
(84, 0x877e077e0501000000e10600),
(84, 0x867e087e0501000000e00600),
(84, 0x877e087e0501000000e10600),
(84, 0x887e097e0501000000c30400),
(84, 0x837e0c7e0501000000c30400),
(85, 0x827e0d7e0501000000c50400),
(85, 0x867e0e7e0501000000e00600),
(85, 0x867e0f7e0501000000e00600),
(85, 0x877e0e7e0501000000e10600),
(85, 0x877e0f7e0501000000e10600),
(85, 0x857e127e0501000000c50400),
(86, 0x7d7e0e7e0501000000da0600),
(86, 0x7d7e0f7e0501000000db0600),
(86, 0x7e7e0d7e0501000000c50400),
(86, 0x7f7e127e0501000000c60400),
(87, 0x787e0e7e0501000000da0600),
(87, 0x787e0f7e0501000000db0600),
(87, 0x797e0d7e0501000000c50400),
(87, 0x7a7e127e0501000000c60400),
(88, 0x3e7ef27d0701000000da0600),
(88, 0x3e7ef37d0701000000db0600),
(88, 0x3b7ef57d0701000000c30400),
(89, 0x3e7eed7d0701000000da0600),
(89, 0x3e7eee7d0701000000db0600),
(89, 0x3b7ef07d0701000000c30400),
(90, 0x3e7ee67d0701000000da0600),
(90, 0x3e7ee77d0701000000db0600),
(90, 0x3d7eea7d0701000000c50400),
(91, 0x3a7ee67d0701000000da0600),
(91, 0x3a7ee77d0701000000db0600),
(91, 0x397eea7d0701000000c50400),
(92, 0x367ee67d0701000000da0600),
(92, 0x367ee77d0701000000db0600),
(92, 0x357eea7d0701000000c50400),
(93, 0x317ef07d0701000000da0600),
(93, 0x317ef17d0701000000db0600),
(93, 0x337ef07d0701000000da0600),
(93, 0x337ef17d0701000000db0600),
(93, 0x347ef37d0701000000c30400),
(94, 0x3b7ef37d0601000000c30400),
(94, 0x3e7ef07d0601000000da0600),
(94, 0x3e7ef17d0601000000db0600),
(95, 0x3e7eea7d0601000000da0600),
(95, 0x3e7eeb7d0601000000db0600),
(95, 0x3b7eee7d0601000000c30400),
(96, 0x3e7ee67d0601000000da0600),
(96, 0x3e7ee77d0601000000db0600),
(96, 0x3a7ee97d0601000000c50400),
(97, 0x387ee67d0601000000da0600),
(97, 0x387ee77d0601000000db0600),
(97, 0x387ee97d0601000000c50400),
(98, 0x357ee67d0601000000da0600),
(98, 0x357ee77d0601000000db0600),
(98, 0x357ee97d0601000000c50400),
(99, 0x317ef07d0601000000da0600),
(99, 0x317ef17d0601000000db0600),
(99, 0x337ef07d0601000000da0600),
(99, 0x337ef17d0601000000db0600),
(99, 0x307ef47d0601000000c30400),
(100, 0x827f167d0801000000e00600),
(100, 0x837f167d0801000000e10600),
(100, 0x837f1a7d0701000000c50400),
(100, 0x827f187d0801000000e00600),
(100, 0x827f197d0801000000e00600),
(100, 0x827f1b7d0801000000e00600),
(100, 0x837f187d0801000000e10600),
(100, 0x837f197d0801000000e10600),
(100, 0x837f1b7d0801000000e10600),
(100, 0x847f1a7d0701000000c50400),
(100, 0x867f1b7d0801000000c30400),
(100, 0x887f197d0801000000c50400),
(100, 0x827f1d7d0401000000e00600),
(100, 0x837f1d7d0401000000e10600),
(100, 0x827f1f7d0601000000da0600),
(100, 0x867f1d7d0301000000c50400),
(100, 0x867f1c7d0401000000c30400),
(100, 0x847f1e7d0501000000c50400),
(100, 0x867f1c7d0501000000c30400),
(100, 0x867f1e7d0501000000130700),
(100, 0x877f1e7d0501000000130700),
(100, 0x847f1f7d0601000000da0600),
(100, 0x857f1f7d0601000000da0600),
(100, 0x877f1d7d0601000000c30400),
(100, 0x877f1f7d0601000000da0600),
(100, 0x847f1d7d0701000000c50400),
(100, 0x867f1c7d0701000000c30400),
(100, 0x867f1f7d0701000000c30400),
(100, 0x897f1e7d0501000000c50400),
(100, 0x887f1f7d0601000000da0600),
(100, 0x897f1e7d0601000000c50400),
(100, 0x8a7f1f7d0601000000da0600),
(100, 0x897f1d7d0701000000c50400),
(100, 0x827f227d0401000000da0600),
(100, 0x827f237d0401000000db0600),
(100, 0x827f207d0601000000db0600),
(100, 0x827f227d0601000000da0600),
(100, 0x827f237d0601000000db0600),
(100, 0x827f227d0701000000da0600),
(100, 0x827f237d0701000000db0600),
(100, 0x847f207d0401000000c50400),
(100, 0x847f207d0601000000db0600),
(100, 0x847f227d0601000000da0600),
(100, 0x847f237d0601000000db0600),
(100, 0x857f207d0601000000db0600),
(100, 0x857f227d0601000000da0600),
(100, 0x857f237d0601000000db0600),
(100, 0x877f207d0601000000db0600),
(100, 0x877f227d0601000000da0600),
(100, 0x877f237d0601000000db0600),
(100, 0x847f217d0701000000c50400),
(100, 0x857f227d0701000000da0600),
(100, 0x857f237d0701000000db0600),
(100, 0x877f227d0701000000da0600),
(100, 0x877f237d0701000000db0600),
(100, 0x887f207d0401000000c50400),
(100, 0x8a7f227d0401000000da0600),
(100, 0x8a7f237d0401000000db0600),
(100, 0x887f207d0601000000db0600),
(100, 0x887f227d0601000000da0600),
(100, 0x887f237d0601000000db0600),
(100, 0x8a7f207d0601000000db0600),
(100, 0x8a7f227d0601000000da0600),
(100, 0x8a7f237d0601000000db0600),
(100, 0x897f217d0701000000c50400),
(100, 0x8a7f227d0701000000da0600),
(100, 0x8a7f237d0701000000db0600),
(101, 0x1f7e3f7d0501000000c30400),
(101, 0x1f7e3e7d0601000000da0600),
(101, 0x1f7e3f7d0601000000db0600),
(101, 0x237e3e7d0601000000da0600),
(101, 0x237e3f7d0601000000db0600),
(101, 0x247e3e7d0801000000da0600),
(101, 0x247e3f7d0801000000db0600),
(101, 0x267e3e7d0801000000da0600),
(101, 0x267e3f7d0801000000db0600),
(101, 0x287e3e7d0801000000da0600),
(101, 0x287e3f7d0801000000db0600),
(101, 0x1c7e417d0501000000da0600),
(101, 0x1c7e427d0501000000db0600),
(101, 0x1e7e437d0501000000c50400),
(101, 0x1c7e417d0601000000da0600),
(101, 0x1c7e427d0601000000db0600),
(101, 0x1f7e427d0601000000c30400),
(101, 0x1c7e407d0701000000c50400),
(101, 0x1f7e437d0701000000c30400),
(101, 0x1f7e417d0801000000c30400),
(101, 0x1c7e447d0601000000da0600),
(101, 0x1c7e457d0601000000db0600),
(101, 0x1f7e457d0601000000c30400),
(101, 0x217e407d0601000000c50400),
(101, 0x207e407d0701000000c50400),
(101, 0x237e407d0701000000c50400),
(101, 0x207e427d0801000000c50400),
(101, 0x227e407d0801000000c30400),
(101, 0x227e437d0801000000da0600),
(101, 0x257e407d0601000000c50400),
(101, 0x257e407d0701000000130700),
(101, 0x247e437d0801000000da0600),
(101, 0x267e437d0801000000da0600),
(101, 0x287e437d0801000000da0600),
(101, 0x227e457d0701000000c50400),
(101, 0x227e447d0801000000db0600),
(101, 0x247e447d0801000000db0600),
(101, 0x267e447d0801000000db0600),
(101, 0x287e447d0801000000db0600),
(102, 0x877e927d0601000000da0600),
(102, 0x877e937d0601000000db0600),
(102, 0x897e927d0601000000e00600),
(102, 0x897e937d0601000000e00600),
(102, 0x8a7e927d0601000000e10600),
(102, 0x8a7e937d0601000000e10600),
(102, 0x8e7e927d0601000000da0600),
(102, 0x8e7e937d0601000000db0600),
(102, 0x897e977d0601000000c50400),
(102, 0x8d7e977d0601000000c50400),
(102, 0x8e7e947d0801000000c30400),
(102, 0x877e9a7d0601000000da0600),
(102, 0x877e9b7d0601000000db0600),
(102, 0x887e997d0601000000c50400),
(102, 0x8b7e9b7d0601000000e00600),
(102, 0x897e9a7d0701000000c50400),
(102, 0x8a7e9a7d0801000000c50400),
(102, 0x887e997d0901000000711800),
(102, 0x8c7e9b7d0601000000e10600),
(102, 0x8e7e9b7d0601000000e00600),
(102, 0x8f7e9b7d0601000000e10600),
(102, 0x8d7e9a7d0701000000c50400),
(102, 0x8e7e9b7d0801000000c30400),
(102, 0x8b7e9d7d0601000000e00600),
(102, 0x8c7e9d7d0601000000e10600),
(102, 0x8e7e9c7d0601000000e00600),
(102, 0x8e7e9d7d0601000000e00600),
(102, 0x8f7e9c7d0601000000e10600),
(102, 0x8f7e9d7d0601000000e10600),
(102, 0x907e927d0601000000da0600),
(102, 0x907e937d0601000000db0600),
(102, 0x927e927d0601000000e00600),
(102, 0x927e937d0601000000e00600),
(102, 0x937e927d0601000000e10600),
(102, 0x937e937d0601000000e10600),
(102, 0x927e977d0601000000c50400),
(102, 0x907e947d0801000000da0600),
(102, 0x907e957d0801000000db0600),
(102, 0x917e947d0801000000da0600),
(102, 0x917e957d0801000000db0600),
(102, 0x927e947d0801000000da0600),
(102, 0x927e957d0801000000db0600),
(102, 0x937e947d0801000000da0600),
(102, 0x937e957d0801000000db0600),
(102, 0x907e9a7d0601000000c30400),
(102, 0x927e997d0601000000c50400),
(102, 0x917e9a7d0701000000c50400),
(103, 0x577f737d0301000000da0600),
(103, 0x567f727d0401000000e00600),
(103, 0x577f727d0401000000e10600),
(103, 0x577f747d0301000000db0600),
(103, 0x587f747d07010000008b1500),
(104, 0x7b7ee87d0701000000670600),
(104, 0x7d7ee87d0701000000c30400),
(105, 0x7b7ee87d0601000000670600),
(105, 0x7d7ee97d0601000000c30400),
(106, 0x7d7ee77d0801000000c30400),
(106, 0x7b7ee87d0801000000670600),
(107, 0xa87d717e0601000000e00600),
(107, 0xa87d737e0601000000e00600),
(107, 0xa97d717e0601000000e10600),
(107, 0xa97d737e0601000000e10600),
(107, 0xa97d717e0801000000e00600),
(107, 0xa97d737e0801000000e00600),
(107, 0xaa7d717e0801000000e10600),
(107, 0xaa7d737e0801000000e10600),
(107, 0xad7d737e0601000000c30400),
(107, 0xac7d727e0801000000c30400),
(107, 0xae7d737e0801000000c50400),
(107, 0xab7d747e0601000000c50400),
(107, 0xa97d767e0701000000c50400),
(107, 0xa97d757e0801000000e00600),
(107, 0xaa7d757e0801000000e10600),
(107, 0xad7d777e0601000000c30400),
(107, 0xaf7d747e0601000000c50400),
(107, 0xac7d767e0701000000c50400),
(107, 0xae7d757e0701000000c30400),
(107, 0xa97d787e0701000000da0600),
(107, 0xa97d797e0701000000db0600),
(107, 0xa97d7a7e0701000000241900),
(107, 0xaf7d787e0601000000da0600),
(107, 0xaf7d797e0601000000db0600),
(107, 0xac7d787e0701000000da0600),
(107, 0xac7d797e0701000000db0600),
(107, 0xac7d7a7e0701000000241900),
(107, 0xaf7d797e0701000000e00600),
(107, 0xaf7d7a7e0701000000241900),
(107, 0xb07d737e0701000000c50400),
(107, 0xb17d727e0701000000251900),
(107, 0xb07d767e0701000000c50400),
(107, 0xb17d757e0701000000c30400),
(107, 0xb07d787e0601000000da0600),
(107, 0xb07d797e0601000000db0600),
(107, 0xb07d797e0701000000e10600),
(107, 0xb17d787e0701000000251900),
(108, 0xb17dad7e0701000000da0600),
(108, 0xb17dae7e0701000000db0600),
(108, 0xb07db07e0701000000c50400),
(109, 0xb67dad7e0701000000da0600),
(109, 0xb67dae7e0701000000db0600),
(109, 0xb87db07e0701000000c50400),
(110, 0xc47db77e0701000000c50400),
(110, 0xc77dbc7e0601000000da0600),
(110, 0xc77dbd7e0601000000db0600),
(110, 0xc77dbc7e0701000000da0600),
(110, 0xc77dbd7e0701000000db0600),
(110, 0xc87dbc7e0601000000da0600),
(110, 0xc87dbd7e0601000000db0600),
(110, 0xc87dbc7e0701000000da0600),
(110, 0xc87dbd7e0701000000db0600),
(111, 0xaf7db97e0701000000c50400),
(111, 0xae7dbd7e0701000000da0600),
(111, 0xae7dbe7e0701000000db0600),
(111, 0xaf7dbd7e0701000000da0600),
(111, 0xaf7dbe7e0701000000db0600),
(112, 0xab7db97e0701000000c50400),
(112, 0xa87dbd7e0701000000da0600),
(112, 0xa87dbe7e0701000000db0600),
(112, 0xa97dbd7e0701000000da0600),
(112, 0xa97dbe7e0701000000db0600),
(113, 0x8e7d857e0701000000da0600),
(113, 0x8e7d867e0701000000db0600),
(113, 0x8e7d887e0701000000da0600),
(113, 0x8e7d897e0701000000db0600),
(113, 0x937d837e0701000000691800),
(113, 0x907d8a7e0701000000711800),
(113, 0x937d8b7e07010000001a0700),
(113, 0x937d8c7e07010000001a0700),
(113, 0x937d8d7e07010000006f1800),
(113, 0x977d8e7e0701000000711800),
(114, 0x9f7db97e0501000000e00600),
(114, 0x9f7dba7e0501000000e00600),
(114, 0x9f7db87e0701000000c50400),
(114, 0xa07db97e0501000000e10600),
(114, 0xa07dba7e0501000000e10600),
(115, 0x837d717e0501000000da0600),
(115, 0x837d727e0501000000db0600),
(115, 0x837d717e0601000000da0600),
(115, 0x837d727e0601000000db0600),
(115, 0x847d737e0601000000c50400),
(115, 0x867d717e0601000000da0600),
(115, 0x867d727e0601000000db0600),
(115, 0x877d737e0601000000c50400),
(115, 0x877d727e0701000000c30400),
(115, 0x887d727e0501000000c30400),
(115, 0x897d737e0501000000c50400),
(115, 0x8b7d737e0701000000251900),
(115, 0x837d747e0501000000e00600),
(115, 0x837d767e0501000000e00600),
(115, 0x847d747e0501000000e10600),
(115, 0x847d767e0501000000e10600),
(115, 0x857d757e0501000000c30400),
(115, 0x847d757e0601000000da0600),
(115, 0x847d767e0601000000db0600),
(115, 0x857d757e0601000000da0600),
(115, 0x857d767e0601000000db0600),
(115, 0x857d777e0701000000241900),
(115, 0x877d767e0701000000c30400),
(115, 0x867d747e0801000000c50400),
(115, 0x887d757e0601000000c30400),
(115, 0x897d747e0701000000c60400),
(115, 0x897d777e0701000000241900),
(115, 0x8b7d767e0701000000c30400),
(115, 0x897d747e0801000000c50400),
(116, 0x0b7e437d0701000000da0600),
(116, 0x0d7e437d0701000000da0600),
(116, 0x0f7e437d0701000000da0600),
(116, 0x0e7e437d0801000000e00600),
(116, 0x0f7e437d0801000000e10600),
(116, 0x0b7e447d0701000000db0600),
(116, 0x0d7e477d0601000000c50400),
(116, 0x0d7e447d0701000000db0600),
(116, 0x0d7e467d0701000000c50400),
(116, 0x0f7e447d0701000000db0600),
(116, 0x0e7e457d0801000000e00600),
(116, 0x0e7e467d0801000000e00600),
(116, 0x0f7e457d0801000000e10600),
(116, 0x0f7e467d0801000000e10600),
(116, 0x0b7e497d0601000000da0600),
(116, 0x0b7e4a7d0601000000db0600),
(116, 0x0f7e497d0601000000da0600),
(116, 0x0f7e4a7d0601000000db0600),
(116, 0x0f7e497d0701000000c30400),
(116, 0x0e7e487d0801000000e00600),
(116, 0x0f7e487d0801000000e10600),
(116, 0x107e477d0601000000c50400),
(116, 0x127e457d0601000000c30400),
(116, 0x127e467d06010000001a0700),
(116, 0x117e467d0701000000c50400),
(116, 0x127e447d0801000000c30400),
(116, 0x147e477d0601000000c50400),
(116, 0x147e467d0701000000c50400),
(116, 0x157e457d0701000000c30400),
(116, 0x147e457d0801000000c50400),
(116, 0x137e4a7d0601000000e00600),
(116, 0x147e4a7d0601000000e10600),
(117, 0x0b7e3f7d0701000000da0600),
(117, 0x0c7e3f7d0701000000da0600),
(117, 0x117e3e7d0701000000c30400),
(117, 0x0b7e407d0701000000db0600),
(117, 0x0c7e407d0701000000db0600),
(117, 0x0e7e407d0701000000e00600),
(117, 0x0f7e407d0701000000e10600),
(118, 0x087e2b7d0701000000c50400),
(118, 0x067e2e7d0701000000e00600),
(118, 0x077e2e7d0701000000e10600),
(119, 0x037e2b7d0701000000c50400),
(119, 0x017e2e7d0701000000e00600),
(119, 0x027e2e7d0701000000e10600),
(120, 0x047e257d0701000000da0600),
(120, 0x047e267d0701000000db0600),
(120, 0x037e287d0701000000c50400),
(121, 0x097e257d0701000000da0600),
(121, 0x097e267d0701000000db0600),
(121, 0x087e287d0701000000c50400),
(122, 0x077e277d0601000000c50400),
(122, 0x017e2b7d0601000000e00600),
(122, 0x027e2b7d0601000000e10600),
(122, 0x037e297d0601000000c30400),
(122, 0x017e2e7d0601000000e00600),
(122, 0x027e2e7d0601000000e10600),
(122, 0x037e2d7d0601000000c30400),
(123, 0x047e1e7d0701000000da0600),
(123, 0x047e1f7d0701000000db0600),
(123, 0x067e1d7d0701000000261900),
(123, 0x097e207d0701000000c30400),
(124, 0x187e307d0701000000c50400),
(124, 0x197e307d0701000000130700),
(124, 0x1a7e307d0701000000130700),
(124, 0x1b7e327d0701000000c30400),
(124, 0x1c7e307d0701000000c50400),
(124, 0x1d7e317d0701000000da0600),
(124, 0x1d7e327d0701000000db0600),
(124, 0x1e7e337d07010000002b1900),
(124, 0x177e347d0701000000c30400),
(124, 0x1b7e347d0701000000c30400),
(125, 0x167e267d0601000000e00600),
(125, 0x167e277d0601000000e00600),
(125, 0x177e267d0601000000e10600),
(125, 0x177e277d0601000000e10600),
(125, 0x147e257d0701000000261900),
(125, 0x167e257d0701000000c60400),
(125, 0x1a7e267d0601000000da0600),
(125, 0x1a7e277d0601000000db0600),
(125, 0x1b7e267d0601000000da0600),
(125, 0x1b7e277d0601000000db0600),
(125, 0x187e277d0701000000c30400),
(125, 0x1b7e257d0701000000261900),
(125, 0x157e287d0601000000c50400),
(125, 0x167e2a7d0601000000c30400),
(125, 0x147e297d0701000000c50400),
(125, 0x157e2b7d0701000000c30400),
(125, 0x187e2b7d0701000000c30400),
(125, 0x147e2c7d0701000000c50400),
(126, 0xaf7d967e0801000000da0600),
(126, 0xaf7d977e0801000000db0600),
(126, 0xb17d967e0801000000da0600),
(126, 0xb17d977e0801000000db0600),
(126, 0xb37d967e0801000000da0600),
(126, 0xb37d977e0801000000db0600),
(126, 0xb57d967e0801000000da0600),
(126, 0xb57d977e0801000000db0600),
(126, 0xb77d967e0801000000da0600),
(126, 0xb77d977e0801000000db0600),
(126, 0xb97d967e0801000000da0600),
(126, 0xb97d977e0801000000db0600),
(126, 0xb27d9a7e0801000000c50400),
(126, 0xb77d9a7e0801000000c50400),
(126, 0xb67d9f7e0801000000630600),
(126, 0xba7d9c7e0801000000c30400),
(126, 0xbb7d9e7e0801000000e00600),
(126, 0xbc7d9e7e0801000000e10600),
(126, 0xbe7d9e7e0801000000da0600),
(126, 0xbe7d9f7e0801000000db0600),
(126, 0xae7da47e0601000000da0600),
(126, 0xae7da57e0601000000db0600),
(126, 0xbb7da07e0801000000e00600),
(126, 0xbb7da27e0801000000e00600),
(126, 0xbc7da07e0801000000e10600),
(126, 0xbc7da27e0801000000e10600),
(126, 0xb07da47e0601000000da0600),
(126, 0xb07da57e0601000000db0600),
(126, 0xb37da77e0601000000c30400),
(126, 0xba7da47e0801000000c30400),
(126, 0xbb7da57e0801000000da0600),
(126, 0xbb7da67e0801000000db0600),
(126, 0xbc7da57e0801000000da0600),
(126, 0xbc7da67e0801000000db0600),
(126, 0xbe7da57e0801000000da0600),
(126, 0xbe7da67e0801000000db0600),
(126, 0xb57daa7e0601000000c50400),
(126, 0xb47daa7e0701000000c50400),
(127, 0x877e217d0601000000e00600),
(127, 0x887e217d0601000000e10600),
(127, 0x8a7e217d0601000000c30400),
(127, 0x8d7e237d0801000000c30400),
(127, 0x8f7e227d0801000000da0600),
(127, 0x8f7e237d0801000000db0600),
(127, 0x877e257d0601000000e00600),
(127, 0x887e257d0601000000e10600),
(127, 0x8a7e277d0601000000c30400),
(127, 0x8d7e247d0601000000c30400),
(127, 0x8e7e267d0601000000da0600),
(127, 0x8e7e277d0601000000db0600),
(127, 0x8f7e267d0601000000da0600),
(127, 0x8f7e277d0601000000db0600),
(127, 0x8d7e277d0801000000c30400),
(127, 0x8f7e267d0801000000da0600),
(127, 0x8f7e277d0801000000db0600),
(127, 0x877e297d0601000000e00600),
(127, 0x887e297d0601000000e10600),
(127, 0x8a7e297d0601000000c30400),
(127, 0x897e297d0701000000ed1300),
(127, 0x897e297d0801000000c50400),
(127, 0x8b7e2a7d0801000000c30400),
(127, 0x8c7e287d0601000000c50400),
(127, 0x8c7e297d0701000000ed1300),
(127, 0x8d7e297d0701000000ed1300),
(127, 0x887e2c7d0701000000281900),
(127, 0x917e217d0601000000e00600),
(127, 0x917e227d0601000000e00600),
(127, 0x917e237d0601000000e00600),
(127, 0x927e217d0601000000e10600),
(127, 0x927e227d0601000000e10600),
(127, 0x927e237d0601000000e10600),
(127, 0x937e237d0701000000291900),
(127, 0x907e227d0801000000da0600),
(127, 0x907e237d0801000000db0600),
(127, 0x927e227d0801000000da0600),
(127, 0x927e237d0801000000db0600),
(127, 0x917e247d0601000000e00600),
(127, 0x917e257d0601000000e00600),
(127, 0x917e267d0601000000e00600),
(127, 0x917e277d0601000000e00600),
(127, 0x927e247d0601000000e10600),
(127, 0x927e257d0601000000e10600),
(127, 0x927e267d0601000000e10600),
(127, 0x927e277d0601000000e10600),
(127, 0x937e277d0701000000291900),
(127, 0x907e267d0801000000da0600),
(127, 0x907e277d0801000000db0600),
(127, 0x927e267d0801000000da0600),
(127, 0x927e277d0801000000db0600),
(127, 0x907e297d0701000000ed1300),
(127, 0x917e297d0801000000c50400),
(127, 0x917e2c7d0701000000281900),
(128, 0x4b7ede7d07010000001a0700),
(128, 0x4b7edf7d07010000001a0700),
(128, 0x4d7edf7d0701000000660600),
(128, 0x4f7ede7d0701000000c30400),
(128, 0x4b7ee07d0701000000c30400),
(129, 0x557ecd7d0701000000da0600),
(129, 0x557ece7d0701000000db0600),
(129, 0x517ed27d0701000000c40400),
(129, 0x527ed07d0701000000c60400),
(129, 0x537ed27d0701000000660600),
(129, 0x547ed07d0701000000130700),
(129, 0x557ed07d0701000000130700),
(130, 0x477efe7d0701000000da0600),
(130, 0x477eff7d0701000000db0600),
(130, 0x4b7e017e0701000000c30400),
(131, 0x5f7e0b7e0601000000c50400),
(131, 0x5e7e097e0701000000da0600),
(131, 0x5e7e0a7e0701000000db0600),
(131, 0x5f7e097e0701000000da0600),
(131, 0x5f7e0a7e0701000000db0600),
(131, 0x647e077e0701000000c50400),
(131, 0x627e097e0601000000c30400),
(131, 0x627e097e0701000000c30400),
(131, 0x657e087e0601000000e00600),
(131, 0x657e097e0601000000e00600),
(131, 0x667e087e0601000000e10600),
(131, 0x667e097e0601000000e10600),
(131, 0x657e097e0701000000c30400),
(131, 0x607e0d7e0601000000c30400),
(131, 0x627e0c7e0701000000c30400),
(132, 0x6b7e0b7e0601000000c50400),
(132, 0x6a7e097e0701000000da0600),
(132, 0x6a7e0a7e0701000000db0600),
(132, 0x6b7e097e0701000000da0600),
(132, 0x6b7e0a7e0701000000db0600),
(132, 0x6e7e097e0601000000c30400),
(132, 0x6e7e097e0701000000c30400),
(132, 0x6c7e0d7e0601000000c30400),
(132, 0x6e7e0c7e0701000000c30400),
(132, 0x707e077e0701000000c50400),
(132, 0x717e087e0601000000e00600),
(132, 0x717e097e0601000000e00600),
(132, 0x727e087e0601000000e10600),
(132, 0x727e097e0601000000e10600),
(132, 0x717e097e0701000000c30400),
(133, 0x7a7ee07d0701000000c30400),
(133, 0x7a7ee27d07010000001a0700),
(133, 0x7a7ee37d07010000001a0700),
(133, 0x7d7ee17d0701000000680600),
(133, 0x7a7ee47d0701000000c30400),
(134, 0x7a7ede7d0601000000c30400),
(134, 0x7d7edd7d0601000000680600),
(135, 0x7a7ee07d0601000000c30400),
(135, 0x7a7ee27d06010000001a0700),
(135, 0x7a7ee37d06010000001a0700),
(135, 0x7d7ee17d0601000000690600),
(135, 0x7a7ee47d0601000000c30400),
(136, 0xd07d9f7e0801000000e00600),
(136, 0xd17d9f7e0801000000e10600),
(136, 0xd77d9f7e0801000000e00600),
(136, 0xd87d9f7e0801000000e10600),
(136, 0xcc7da97e0801000000c50400),
(136, 0xce7daf7e0401000000c30400),
(136, 0xcf7dac7e0401000000da0600),
(136, 0xcf7dad7e0401000000db0600),
(136, 0xce7daf7e0501000000c50400),
(136, 0xd07da17e0801000000e00600),
(136, 0xd07da37e0801000000e00600),
(136, 0xd17da17e0801000000e10600),
(136, 0xd17da37e0801000000e10600),
(136, 0xd77da17e0801000000e00600),
(136, 0xd77da37e0801000000e00600),
(136, 0xd87da17e0801000000e10600),
(136, 0xd87da37e0801000000e10600),
(136, 0xd07da57e0801000000e00600),
(136, 0xd07da77e0801000000e00600),
(136, 0xd17da57e0801000000e10600),
(136, 0xd17da77e0801000000e10600),
(136, 0xd77da57e0801000000e00600),
(136, 0xd77da77e0801000000e00600),
(136, 0xd87da57e0801000000e10600),
(136, 0xd87da77e0801000000e10600),
(136, 0xd07dab7e0501000000c50400),
(136, 0xd37da97e0801000000c50400),
(136, 0xd37dab7e0801000000c50400),
(136, 0xda7da97e0801000000c50400),
(136, 0xda7dab7e0801000000c50400),
(136, 0xd07dae7e0401000000c50400),
(136, 0xd27dae7e0501000000c50400),
(136, 0xd07dad7e0701000000c50400),
(136, 0xd07dad7e0801000000e00600),
(136, 0xd07daf7e0801000000e00600),
(136, 0xd17dad7e0801000000e10600),
(136, 0xd17daf7e0801000000e10600),
(136, 0xd77dad7e0801000000e00600),
(136, 0xd77daf7e0801000000e00600),
(136, 0xd87dad7e0801000000e10600),
(136, 0xd87daf7e0801000000e10600),
(136, 0xcc7db27e0501000000da0600),
(136, 0xcc7db37e0501000000db0600),
(136, 0xcd7db07e0701000000c30400),
(136, 0xcf7db47e0601000000c50400),
(136, 0xd07db07e0401000000c50400),
(136, 0xd27db27e0401000000da0600),
(136, 0xd27db37e0401000000db0600),
(136, 0xd37db27e0401000000da0600),
(136, 0xd37db37e0401000000db0600),
(136, 0xd07db27e0501000000da0600),
(136, 0xd07db37e0501000000db0600),
(136, 0xd37db27e0501000000da0600),
(136, 0xd37db37e0501000000db0600),
(136, 0xd17db07e0601000000c30400),
(136, 0xd07db27e0701000000c50400),
(136, 0xd27db07e0701000000c30400),
(136, 0xd07db17e0801000000e00600),
(136, 0xd07db37e0801000000e00600),
(136, 0xd17db17e0801000000e10600),
(136, 0xd17db37e0801000000e10600),
(136, 0xd77db17e0801000000e00600),
(136, 0xd77db37e0801000000e00600),
(136, 0xd87db17e0801000000e10600),
(136, 0xd87db37e0801000000e10600),
(136, 0xd07db47e0701000000c50400),
(136, 0xd07db57e0801000000e00600),
(136, 0xd17db57e0801000000e10600),
(136, 0xd77db57e0801000000e00600),
(136, 0xd87db57e0801000000e10600),
(137, 0x897eb07d0701000000e00600),
(137, 0x8a7eb07d0701000000e10600),
(137, 0x8b7eb17d0701000000c40400),
(137, 0x8e7eb27d0701000000690600),
(137, 0x8a7eb47d0701000000261900),
(137, 0x8e7eb47d0701000000c60400),
(138, 0x937eaf7d0701000000130700),
(138, 0x947eaf7d0601000000c60400),
(138, 0x947eaf7d0701000000c60400),
(138, 0x957eaf7d0701000000130700),
(138, 0x937eb27d0601000000da0600),
(138, 0x937eb37d0601000000db0600),
(138, 0x957eb27d0601000000da0600),
(138, 0x957eb37d0601000000db0600),
(138, 0x947eb27d0701000000690600),
(138, 0x947eb47d0701000000c60400),
(138, 0x957eb47d07010000002a1900),
(139, 0x9a7eb97d0701000000c50400),
(139, 0x977ebd7d0701000000da0600),
(139, 0x977ebe7d0701000000db0600),
(139, 0x987ebd7d0701000000da0600),
(139, 0x987ebe7d0701000000db0600),
(139, 0x987ebf7d0701000000241900),
(139, 0x9b7ebf7d0701000000241900),
(139, 0x9c7ebe7d0701000000251900),
(140, 0x977ebd7d0601000000da0600),
(140, 0x977ebe7d0601000000db0600),
(140, 0x987ebd7d0601000000da0600),
(140, 0x987ebe7d0601000000db0600),
(140, 0x987ebf7d0601000000241900),
(140, 0x9b7ebf7d0601000000241900),
(140, 0x9c7ebc7d0601000000251900),
(140, 0x9c7ebd7d0601000000c30400),
(140, 0x9c7ebe7d0601000000251900),
(141, 0xa47eab7d0601000000da0600),
(141, 0xa77eab7d0601000000da0600),
(141, 0xa47eab7d0701000000da0600),
(141, 0xa77eab7d0701000000da0600),
(141, 0xa37eaf7d0701000000c30400),
(141, 0xa47eac7d0601000000db0600),
(141, 0xa67ead7d0601000000c50400),
(141, 0xa77eac7d0601000000db0600),
(141, 0xa47eac7d0701000000db0600),
(141, 0xa67ead7d0701000000c50400),
(141, 0xa77eac7d0701000000db0600),
(141, 0xa67eb17d0701000000c50400),
(142, 0xa97e677e0901000000da0600),
(142, 0xab7e677e0901000000da0600),
(142, 0xac7e677e0901000000da0600),
(142, 0xae7e677e0901000000da0600),
(142, 0xa97e687e0901000000db0600),
(142, 0xab7e687e0901000000db0600),
(142, 0xac7e687e0901000000db0600),
(142, 0xae7e687e0901000000db0600),
(142, 0xae7e6a7e0901000000c50400),
(142, 0xa97e6d7e0901000000e00600),
(142, 0xaa7e6d7e0901000000e10600),
(142, 0xac7e6d7e0901000000c30400),
(142, 0xb67e677e0901000000da0600),
(142, 0xb77e677e0901000000da0600),
(142, 0xb17e6a7e0401000000e00600),
(142, 0xb27e6a7e0401000000e10600),
(142, 0xb37e687e0701000000c50400),
(142, 0xb37e6b7e0701000000c50400),
(142, 0xb17e697e0801000000da0600),
(142, 0xb17e6a7e0801000000db0600),
(142, 0xb17e6a7e0901000000c50400),
(142, 0xb37e687e0901000000da0600),
(142, 0xb37e697e0901000000db0600),
(142, 0xb47e6a7e0401000000c30400),
(142, 0xb77e6b7e0401000000c30400),
(142, 0xb47e6b7e0501000000c30400),
(142, 0xb47e6b7e0601000000c30400),
(142, 0xb47e687e0701000000c50400),
(142, 0xb47e6b7e0701000000c50400),
(142, 0xb47e697e0801000000da0600),
(142, 0xb47e6a7e0801000000db0600),
(142, 0xb77e697e0801000000da0600),
(142, 0xb77e6a7e0801000000db0600),
(142, 0xb47e687e0901000000da0600),
(142, 0xb47e697e0901000000db0600),
(142, 0xb67e687e0901000000db0600),
(142, 0xb77e687e0901000000db0600),
(142, 0xb77e6a7e0901000000c50400),
(142, 0xba7e697e0401000000da0600),
(142, 0xba7e6a7e0401000000db0600),
(142, 0xb97e6b7e0701000000680600),
(142, 0xba7e697e0801000000da0600),
(142, 0xba7e6a7e0801000000db0600),
(142, 0xb97e687e0901000000da0600),
(142, 0xb97e697e0901000000db0600),
(142, 0xba7e687e0901000000da0600),
(142, 0xba7e697e0901000000db0600),
(142, 0xb17e6d7e0401000000e00600),
(142, 0xb27e6d7e0401000000e10600),
(142, 0xb27e6e7e0501000000c50400),
(142, 0xb27e6e7e0701000000c50400),
(142, 0xb27e6c7e0801000000c50400),
(142, 0xb27e6d7e0901000000c30400),
(142, 0xb47e6d7e0401000000c30400),
(142, 0xb47e6d7e05010000001a0700),
(142, 0xb47e6e7e05010000001a0700),
(142, 0xb47e6c7e0601000000c30400),
(142, 0xb57e6e7e0701000000c50400),
(142, 0xb67e6d7e0701000000c30400),
(142, 0xb57e6c7e0801000000c50400),
(142, 0xb67e6e7e0801000000c50400),
(142, 0xba7e6e7e0401000000da0600),
(142, 0xba7e6f7e0401000000db0600),
(142, 0xb87e6c7e0801000000c50400),
(142, 0xba7e6e7e0801000000c50400),
(142, 0xbb7e6c7e0801000000c50400),
(142, 0xac7e707e0901000000c30400),
(142, 0xb47e707e0401000000c30400),
(142, 0xb77e707e0401000000c30400),
(142, 0xb57e717e0801000000e00600),
(142, 0xb67e717e0801000000e10600),
(142, 0xb97e717e0801000000e00600),
(142, 0xba7e717e0801000000e10600),
(143, 0x297efa7d0701000000e00600),
(143, 0x297efb7d0701000000e00600),
(143, 0x2a7efa7d0701000000e10600),
(143, 0x2a7efb7d0701000000e10600),
(143, 0x2b7efe7d0701000000c30400),
(144, 0x277efb7d0601000000da0600),
(144, 0x2b7efb7d0601000000c30400),
(144, 0x277efc7d0601000000db0600),
(144, 0x277efd7d0601000000da0600),
(144, 0x277efe7d0601000000db0600),
(145, 0x297ef57d0601000000e00600),
(145, 0x297ef67d0601000000e00600),
(145, 0x2a7ef57d0601000000e10600),
(145, 0x2a7ef67d0601000000e10600),
(145, 0x2b7ef97d0601000000c30400),
(146, 0x1b7efc7d0701000000c30400),
(146, 0x177e007e0601000000e00600),
(146, 0x187e007e0601000000e10600),
(146, 0x1b7e007e0701000000c30400),
(147, 0x297e0c7e0801000000da0600),
(147, 0x297e0d7e0801000000db0600),
(147, 0x297e107e0801000000c50400),
(148, 0x257e0c7e0801000000da0600),
(148, 0x257e0d7e0801000000db0600),
(148, 0x257e107e0801000000c50400),
(149, 0x317e137e0801000000c50400),
(149, 0x317e167e0801000000da0600),
(149, 0x317e177e0801000000db0600),
(150, 0x2d7e137e0801000000c50400),
(150, 0x2d7e167e0801000000da0600),
(150, 0x2d7e177e0801000000db0600),
(151, 0x297e137e0801000000c50400),
(151, 0x297e167e0801000000da0600),
(151, 0x297e177e0801000000db0600),
(152, 0x257e137e0801000000c50400),
(152, 0x257e167e0801000000da0600),
(152, 0x257e177e0801000000db0600),
(153, 0x8a7ef57d0601000000da0600),
(153, 0x8a7ef67d0601000000db0600),
(153, 0x887ef67d0901000000da0600),
(153, 0x887ef77d0901000000db0600),
(153, 0x8d7ef57d0601000000da0600),
(153, 0x8d7ef67d0601000000db0600),
(153, 0x8c7ef67d0901000000da0600),
(153, 0x8c7ef77d0901000000db0600),
(153, 0x8b7ef87d0601000000c50400),
(153, 0x8b7efa7d0601000000c50400),
(153, 0x897ef97d0901000000c50400),
(153, 0x897efb7d0901000000c50400),
(153, 0x8e7ef87d0601000000c50400),
(153, 0x8f7efa7d0601000000c50400),
(153, 0x8f7efb7d0701000000c30400),
(153, 0x8d7ef97d0901000000c50400),
(153, 0x8a7efc7d0601000000e00600),
(153, 0x8b7efc7d0601000000e10600),
(153, 0x8b7efd7d0601000000261900),
(153, 0x8a7efc7d0901000000da0600),
(153, 0x8a7efd7d0901000000db0600),
(153, 0x8e7efc7d0601000000e00600),
(153, 0x8f7efc7d0601000000e10600),
(153, 0x8f7efd7d0601000000261900),
(153, 0x8c7efd7d0701000000261900),
(153, 0x8d7efd7d0701000000261900),
(153, 0x937ef57d0601000000da0600),
(153, 0x937ef67d0601000000db0600),
(153, 0x947ef57d0701000000da0600),
(153, 0x947ef67d0701000000db0600),
(153, 0x967ef57d0701000000da0600),
(153, 0x967ef67d0701000000db0600),
(153, 0x977ef57d0701000000da0600),
(153, 0x977ef67d0701000000db0600),
(153, 0x987ef57d0601000000e00600),
(153, 0x987ef67d0601000000e00600),
(153, 0x997ef57d0601000000e10600),
(153, 0x997ef67d0601000000e10600),
(153, 0x9a7ef77d0601000000271900),
(153, 0x997ef57d0701000000da0600),
(153, 0x997ef67d0701000000db0600),
(153, 0x9a7ef67d0701000000271900),
(153, 0x937efa7d0601000000c50400),
(153, 0x917ef87d0701000000c50400),
(153, 0x927ef87d0701000000130700),
(153, 0x937efb7d0701000000c30400),
(153, 0x917ef87d0801000000c30400),
(153, 0x937ef87d0801000000c30400),
(153, 0x927ef97d0901000000c30400),
(153, 0x927efb7d09010000001a0700),
(153, 0x947ef87d0601000000c60400),
(153, 0x957ef97d0601000000c30400),
(153, 0x957ef87d0701000000c50400),
(153, 0x967efb7d0701000000c30400),
(153, 0x9a7efa7d0601000000271900),
(153, 0x997ef97d0701000000da0600),
(153, 0x997efa7d0701000000db0600),
(153, 0x9a7efb7d0701000000271900),
(153, 0x927efc7d0601000000e00600),
(153, 0x937efc7d0601000000e10600),
(153, 0x937efd7d0601000000261900),
(153, 0x917efd7d0701000000c50400),
(153, 0x927efd7d0901000000c30400),
(153, 0x977efd7d0601000000261900),
(153, 0x957efd7d0701000000261900),
(153, 0x997efd7d0601000000261900),
(153, 0x997efd7d0701000000261900),
(154, 0x027e347e0901000000e00600),
(154, 0x027e367e0901000000e00600),
(154, 0x037e347e0901000000e10600),
(154, 0x037e367e0901000000e10600),
(154, 0x077e367e0801000000c30400),
(154, 0x067e357e0901000000c30400),
(154, 0x0a7e357e0901000000c30400),
(154, 0x0c7e377e0701000000c50400),
(154, 0x0d7e367e0801000000c50400),
(154, 0x0e7e377e0801000000e00600),
(154, 0x0f7e377e0801000000e10600),
(154, 0x0c7e357e0901000000da0600),
(154, 0x0c7e367e0901000000db0600),
(154, 0x0c7e377e0901000000130700),
(154, 0x0d7e357e0901000000da0600),
(154, 0x0d7e367e0901000000db0600),
(154, 0x0d7e377e0901000000130700),
(154, 0x0e7e357e0901000000da0600),
(154, 0x0e7e367e0901000000db0600),
(154, 0x0f7e357e0901000000da0600),
(154, 0x0f7e367e0901000000db0600),
(154, 0x037e3b7e0601000000c60400),
(154, 0x037e3b7e0701000000c50400),
(154, 0x027e387e0901000000e00600),
(154, 0x027e3a7e0901000000e00600),
(154, 0x037e387e0901000000e10600),
(154, 0x037e3a7e0901000000e10600),
(154, 0x047e397e0601000000da0600),
(154, 0x047e3a7e0601000000db0600),
(154, 0x057e397e0601000000da0600),
(154, 0x057e3a7e0601000000db0600),
(154, 0x067e397e0701000000c30400),
(154, 0x077e3b7e0801000000c30400),
(154, 0x067e397e0901000000c30400),
(154, 0x097e3b7e0701000000c50400),
(154, 0x0b7e397e0701000000c30400),
(154, 0x0b7e3a7e0801000000da0600),
(154, 0x0b7e3b7e0801000000db0600),
(154, 0x0a7e3a7e0901000000c30400),
(154, 0x0c7e397e0601000000da0600),
(154, 0x0c7e3a7e0601000000db0600),
(154, 0x0e7e3b7e0601000000c60400),
(154, 0x0d7e397e0701000000670600),
(154, 0x0e7e3b7e0701000000c50400),
(154, 0x0c7e3a7e0801000000da0600),
(154, 0x0c7e3b7e0801000000db0600),
(154, 0x0e7e387e0801000000e00600),
(154, 0x0e7e3a7e0801000000da0600),
(154, 0x0e7e3b7e0801000000db0600),
(154, 0x0f7e387e0801000000e10600),
(154, 0x0f7e3a7e0801000000da0600),
(154, 0x0f7e3b7e0801000000db0600),
(154, 0x027e3c7e0901000000da0600),
(154, 0x027e3d7e0901000000db0600),
(154, 0x067e3d7e0901000000c30400),
(154, 0x0b7e3d7e0801000000da0600),
(154, 0x0b7e3e7e0801000000db0600),
(154, 0x0c7e3d7e0801000000da0600),
(154, 0x0c7e3e7e0801000000db0600),
(154, 0x0e7e3d7e0801000000da0600),
(154, 0x0e7e3e7e0801000000db0600),
(154, 0x0f7e3d7e0801000000da0600),
(154, 0x0f7e3e7e0801000000db0600),
(154, 0x107e357e0901000000da0600),
(154, 0x107e367e0901000000db0600),
(154, 0x047e407e0601000000c30400),
(154, 0x0d7e407e0601000000c30400),
(155, 0x497ee67d0701000000da0600),
(155, 0x497ee77d0701000000db0600),
(155, 0x4c7ee87d0701000000c30400),
(156, 0x497eeb7d0701000000da0600),
(156, 0x497eec7d0701000000db0600),
(156, 0x4c7eed7d0701000000c30400),
(157, 0x4a7ef27d0701000000da0600),
(157, 0x4a7ef37d0701000000db0600),
(157, 0x4d7ef47d0701000000c30400),
(158, 0x497ee67d0601000000da0600),
(158, 0x497ee77d0601000000db0600),
(158, 0x4c7ee87d0601000000c30400),
(159, 0x497eeb7d0601000000da0600),
(159, 0x497eec7d0601000000db0600),
(159, 0x4c7eed7d0601000000c30400),
(160, 0x4a7ef07d0601000000da0600),
(160, 0x4a7ef17d0601000000db0600),
(160, 0x4c7ef07d0601000000da0600),
(160, 0x4c7ef17d0601000000db0600),
(160, 0x4d7ef47d0601000000c30400),
(161, 0x4a7ef77d0601000000da0600),
(161, 0x4a7ef87d0601000000db0600),
(161, 0x4d7ef97d0601000000c30400),
(162, 0x497ee67d0501000000da0600),
(162, 0x497ee77d0501000000db0600),
(162, 0x4c7ee87d0501000000c30400),
(163, 0x497eeb7d0501000000da0600),
(163, 0x497eec7d0501000000db0600),
(163, 0x4c7eed7d0501000000c30400),
(164, 0x4a7ef07d0501000000da0600),
(164, 0x4a7ef17d0501000000db0600),
(164, 0x4c7ef07d0501000000da0600),
(164, 0x4c7ef17d0501000000db0600),
(164, 0x4d7ef47d0501000000c30400),
(165, 0x4a7ef77d0501000000da0600),
(165, 0x4a7ef87d0501000000db0600),
(165, 0x4d7ef97d0501000000c30400);
INSERT INTO `tile_store` (`house_id`, `data`) VALUES
(167, 0x3c7e0b7e0601000000da0600),
(167, 0x3c7e0f7e0401000000da0600),
(167, 0x3e7e0d7e0401000000c50400),
(167, 0x3f7e0f7e0401000000da0600),
(167, 0x3c7e0c7e0601000000db0600),
(167, 0x3c7e0f7e0601000000da0600),
(167, 0x3d7e0f7e0601000000da0600),
(167, 0x3f7e0c7e0601000000c30400),
(167, 0x3d7e0d7e0701000000c50400),
(167, 0x3c7e107e0401000000db0600),
(167, 0x3f7e107e0401000000db0600),
(167, 0x3c7e107e0601000000db0600),
(167, 0x3d7e107e0601000000db0600),
(167, 0x407e0c7e0401000000c30400),
(167, 0x427e0d7e0401000000c50400),
(167, 0x437e0e7e0401000000e00600),
(167, 0x417e0c7e0501000000c30400),
(167, 0x427e0f7e0501000000da0600),
(167, 0x437e0d7e0501000000c50400),
(167, 0x407e0d7e0601000000c50400),
(167, 0x437e0d7e0601000000c50400),
(167, 0x427e0e7e0701000000c30400),
(167, 0x427e0f7e07010000001a0700),
(167, 0x447e0e7e0401000000e10600),
(167, 0x447e0f7e0501000000da0600),
(167, 0x447e0f7e0601000000da0600),
(167, 0x457e0c7e0801000000c30400),
(167, 0x437e107e0401000000e00600),
(167, 0x427e107e0501000000db0600),
(167, 0x447e107e0401000000e10600),
(167, 0x447e107e0501000000db0600),
(167, 0x447e107e0601000000db0600),
(167, 0x457e107e0701000000c30400),
(168, 0x4c7eff7d0601000000c30400),
(168, 0x477e037e0601000000da0600),
(168, 0x487e007e0601000000c50400),
(168, 0x487e037e0601000000da0600),
(168, 0x4a7e037e0601000000da0600),
(168, 0x4b7e007e0601000000c50400),
(168, 0x4b7e037e0601000000da0600),
(168, 0x4d7e037e0601000000da0600),
(168, 0x4e7e037e0601000000da0600),
(168, 0x477e047e0601000000db0600),
(168, 0x477e067e0601000000da0600),
(168, 0x477e077e0601000000db0600),
(168, 0x487e047e0601000000db0600),
(168, 0x487e067e0601000000da0600),
(168, 0x487e077e0601000000db0600),
(168, 0x4a7e047e0601000000db0600),
(168, 0x4a7e067e0601000000da0600),
(168, 0x4a7e077e0601000000db0600),
(168, 0x4b7e047e0601000000db0600),
(168, 0x4b7e067e0601000000da0600),
(168, 0x4b7e077e0601000000db0600),
(168, 0x4d7e047e0601000000db0600),
(168, 0x4d7e067e0601000000da0600),
(168, 0x4d7e077e0601000000db0600),
(168, 0x4e7e047e0601000000db0600),
(168, 0x4e7e067e0601000000da0600),
(168, 0x4e7e077e0601000000db0600),
(168, 0x477e097e0601000000da0600),
(168, 0x477e0a7e0601000000db0600),
(168, 0x487e097e0601000000da0600),
(168, 0x487e0a7e0601000000db0600),
(168, 0x4a7e097e0601000000da0600),
(168, 0x4a7e0a7e0601000000db0600),
(168, 0x4b7e097e0601000000da0600),
(168, 0x4b7e0a7e0601000000db0600),
(168, 0x4d7e097e0601000000da0600),
(168, 0x4d7e0a7e0601000000db0600),
(168, 0x4e7e097e0601000000da0600),
(168, 0x4e7e0a7e0601000000db0600),
(168, 0x477e0c7e0601000000da0600),
(168, 0x477e0d7e0601000000db0600),
(168, 0x487e0c7e0601000000da0600),
(168, 0x487e0d7e0601000000db0600),
(168, 0x4a7e0c7e0601000000da0600),
(168, 0x4a7e0d7e0601000000db0600),
(168, 0x4b7e0c7e0601000000da0600),
(168, 0x4b7e0d7e0601000000db0600),
(168, 0x4d7e0c7e0601000000da0600),
(168, 0x4d7e0d7e0601000000db0600),
(168, 0x4e7e0c7e0601000000da0600),
(168, 0x4e7e0d7e0601000000db0600),
(169, 0xa57ebb7d0701000000271900),
(169, 0xa07ebd7d0701000000da0600),
(169, 0xa07ebe7d0701000000db0600),
(169, 0xa17ebd7d0701000000da0600),
(169, 0xa17ebe7d0701000000db0600),
(169, 0xa27ebf7d0701000000241900),
(169, 0xa37ebf7d0701000000241900),
(169, 0xa57ebd7d0701000000c40400),
(169, 0xa57ebe7d0701000000251900),
(170, 0xa07ebd7d0601000000da0600),
(170, 0xa07ebe7d0601000000db0600),
(170, 0xa17ebd7d0601000000da0600),
(170, 0xa17ebe7d0601000000db0600),
(170, 0xa17ebf7d0601000000241900),
(170, 0xa47ebf7d0601000000241900),
(170, 0xa57ebc7d0601000000251900),
(170, 0xa57ebd7d0601000000c30400),
(170, 0xa57ebe7d0601000000251900),
(171, 0xa67ecf7d0701000000251900),
(171, 0xa17ed07d0701000000da0600),
(171, 0xa17ed17d0701000000db0600),
(171, 0xa27ed07d0701000000da0600),
(171, 0xa27ed17d0701000000db0600),
(171, 0xa67ed07d0701000000c30400),
(171, 0xa67ed17d0701000000251900),
(172, 0xa17ecb7d0701000000da0600),
(172, 0xa27ecb7d0701000000da0600),
(172, 0xa67eca7d0701000000251900),
(172, 0xa67ecb7d0701000000c30400),
(172, 0xa17ecc7d0701000000db0600),
(172, 0xa27ecc7d0701000000db0600),
(172, 0xa67ecc7d0701000000251900),
(173, 0xa17ec67d0701000000da0600),
(173, 0xa17ec77d0701000000db0600),
(173, 0xa27ec67d0701000000da0600),
(173, 0xa27ec77d0701000000db0600),
(173, 0xa67ec57d0701000000251900),
(173, 0xa67ec67d0701000000c30400),
(173, 0xa67ec77d0701000000251900),
(174, 0xa67ecf7d0601000000251900),
(174, 0xa17ed07d0601000000da0600),
(174, 0xa17ed17d0601000000db0600),
(174, 0xa27ed07d0601000000da0600),
(174, 0xa27ed17d0601000000db0600),
(174, 0xa67ed07d0601000000c30400),
(174, 0xa67ed17d0601000000251900),
(175, 0xa17ecb7d0601000000da0600),
(175, 0xa27ecb7d0601000000da0600),
(175, 0xa67eca7d0601000000251900),
(175, 0xa67ecb7d0601000000c30400),
(175, 0xa17ecc7d0601000000db0600),
(175, 0xa27ecc7d0601000000db0600),
(175, 0xa67ecc7d0601000000251900),
(176, 0xa17ec67d0601000000da0600),
(176, 0xa17ec77d0601000000db0600),
(176, 0xa27ec67d0601000000da0600),
(176, 0xa27ec77d0601000000db0600),
(176, 0xa67ec57d0601000000251900),
(176, 0xa67ec67d0601000000c30400),
(176, 0xa67ec77d0601000000251900),
(177, 0x9b7eda7d0601000000da0600),
(177, 0x9b7edb7d0601000000db0600),
(177, 0x9f7edb7d0601000000271900),
(177, 0x9f7edc7d0601000000c30400),
(178, 0x9b7ede7d0601000000da0600),
(178, 0x9b7edf7d0601000000db0600),
(178, 0x9f7edf7d0601000000c30400),
(178, 0x9f7ee07d0601000000271900),
(179, 0x9b7ee27d0601000000da0600),
(179, 0x9b7ee37d0601000000db0600),
(179, 0x9f7ee27d0601000000c30400),
(179, 0x9c7ee57d0601000000261900),
(179, 0x9e7ee57d0601000000261900),
(179, 0x9f7ee47d0601000000271900),
(180, 0xa47ee87d0601000000da0600),
(180, 0xa47ee97d0601000000db0600),
(180, 0xa57ee97d0601000000271900),
(180, 0xa57eeb7d0601000000271900),
(180, 0xa37eec7d0601000000c50400),
(181, 0x9e7ee87d0601000000e00600),
(181, 0x9e7ee97d0601000000e00600),
(181, 0x9f7ee87d0601000000e10600),
(181, 0x9f7ee97d0601000000e10600),
(181, 0x9d7eec7d0601000000c50400),
(181, 0xa07ee97d0601000000271900),
(181, 0xa07eeb7d0601000000271900),
(182, 0x9d7eef7d0601000000c50400),
(182, 0x9e7ef07d0601000000e00600),
(182, 0x9e7ef17d0601000000e00600),
(182, 0x9f7ef07d0601000000e10600),
(182, 0x9f7ef17d0601000000e10600),
(182, 0x9e7ef47d0601000000261900),
(182, 0xa07ef17d0601000000271900),
(182, 0xa07ef37d0601000000271900),
(183, 0xa37eef7d0601000000c50400),
(183, 0xa47ef07d0601000000da0600),
(183, 0xa47ef17d0601000000db0600),
(183, 0xa57ef17d0601000000271900),
(183, 0xa57ef37d0601000000271900),
(183, 0xa47ef47d0601000000261900),
(184, 0xa27ef97d0601000000da0600),
(184, 0xa27efa7d0601000000db0600),
(184, 0xa37ef87d0701000000c50400),
(184, 0xa37efb7d0701000000e00600),
(184, 0xa47efb7d0701000000e10600),
(185, 0x067e097d0601000000e00600),
(185, 0x077e097d0601000000e10600),
(185, 0x0a7e097d0601000000da0600),
(185, 0x0a7e0a7d0601000000db0600),
(185, 0x0b7e0a7d0701000000660600),
(185, 0x097e0a7d0801000000de0600),
(185, 0x097e0b7d0801000000df0600),
(185, 0x0b7e0a7d0801000000de0600),
(185, 0x0b7e0b7d0801000000df0600),
(185, 0x0c7e0b7d0601000000c50400),
(185, 0x0d7e0a7d0801000000de0600),
(185, 0x0d7e0b7d0801000000df0600),
(185, 0x0f7e0a7d0801000000de0600),
(185, 0x0f7e0b7d0801000000df0600),
(185, 0x037e0c7d0601000000e00600),
(185, 0x037e0e7d0601000000e00600),
(185, 0x047e0c7d0601000000e10600),
(185, 0x047e0e7d0601000000e10600),
(185, 0x097e0d7d0601000000c30400),
(185, 0x0a7e0f7d0601000000e00600),
(185, 0x0b7e0f7d0601000000e10600),
(185, 0x097e0f7d0801000000de0600),
(185, 0x0b7e0f7d0801000000de0600),
(185, 0x0d7e0e7d0601000000c50400),
(185, 0x0d7e0f7d0801000000de0600),
(185, 0x0f7e0f7d0801000000de0600),
(185, 0x127e0b7d0601000000c50400),
(185, 0x117e0a7d0801000000de0600),
(185, 0x117e0b7d0801000000df0600),
(185, 0x137e0a7d0801000000de0600),
(185, 0x137e0b7d0801000000df0600),
(185, 0x167e0b7d0501000000c30400),
(185, 0x147e097d0601000000da0600),
(185, 0x147e0a7d0601000000db0600),
(185, 0x117e0e7d0601000000c50400),
(185, 0x117e0f7d0801000000de0600),
(185, 0x137e0f7d0801000000de0600),
(185, 0x157e0c7d0601000000c30400),
(185, 0x197e0e7d0501000000c50400),
(185, 0x197e0e7d0601000000c50400),
(185, 0x067e117d0601000000e00600),
(185, 0x077e117d0601000000e10600),
(185, 0x0a7e117d0601000000e00600),
(185, 0x0b7e117d0601000000e10600),
(185, 0x097e107d0801000000df0600),
(185, 0x0b7e107d0801000000df0600),
(185, 0x0d7e107d0801000000df0600),
(185, 0x0f7e107d0801000000df0600),
(185, 0x137e107d0601000000da0600),
(185, 0x137e117d0601000000db0600),
(185, 0x117e107d0801000000df0600),
(185, 0x137e107d0801000000df0600),
(185, 0x147e107d0601000000da0600),
(185, 0x147e117d0601000000db0600),
(186, 0x9b7e037e0601000000da0600),
(186, 0x9c7e037e0601000000da0600),
(186, 0x9d7e037e0601000000271900),
(186, 0x9c7e017e0701000000c50400),
(186, 0x9d7e037e0701000000251900),
(186, 0x997e057e0601000000261900),
(186, 0x9b7e047e0601000000db0600),
(186, 0x987e047e0701000000e00600),
(186, 0x997e047e0701000000e10600),
(186, 0x997e057e0701000000261900),
(186, 0x9c7e047e0601000000db0600),
(186, 0x9c7e057e0701000000241900),
(188, 0xa37e017e0701000000c50400),
(188, 0xa07e057e0601000000da0600),
(188, 0xa07e067e0601000000db0600),
(188, 0xa17e047e0601000000c50400),
(188, 0xa37e047e0601000000c50400),
(188, 0xa07e057e0701000000da0600),
(188, 0xa07e067e0701000000db0600),
(188, 0xa27e067e0701000000c30400),
(188, 0xa37e077e0701000000c50400),
(188, 0xa47e057e0601000000da0600),
(188, 0xa47e067e0601000000db0600),
(189, 0x567eff7d0701000000da0600),
(189, 0x577eff7d0701000000da0600),
(189, 0x5a7eff7d0601000000c30400),
(189, 0x5a7eff7d0701000000c30400),
(189, 0x5d7efe7d0601000000e00600),
(189, 0x5d7eff7d0601000000e00600),
(189, 0x5e7efe7d0601000000e10600),
(189, 0x5e7eff7d0601000000e10600),
(189, 0x5c7efd7d0701000000c50400),
(189, 0x5d7eff7d0701000000c30400),
(189, 0x577e017e0601000000c50400),
(189, 0x567e007e0701000000db0600),
(189, 0x577e007e0701000000db0600),
(189, 0x587e037e0601000000c30400),
(189, 0x5a7e027e0701000000c30400),
(190, 0x627eff7d0701000000da0600),
(190, 0x637eff7d0701000000da0600),
(190, 0x667eff7d0601000000c30400),
(190, 0x667eff7d0701000000c30400),
(190, 0x697efe7d0601000000e00600),
(190, 0x697eff7d0601000000e00600),
(190, 0x6a7efe7d0601000000e10600),
(190, 0x6a7eff7d0601000000e10600),
(190, 0x687efd7d0701000000c50400),
(190, 0x697eff7d0701000000c30400),
(190, 0x637e017e0601000000c50400),
(190, 0x627e007e0701000000db0600),
(190, 0x637e007e0701000000db0600),
(190, 0x647e037e0601000000c30400),
(190, 0x667e027e0701000000c30400),
(191, 0x8e7e017e0701000000c50400),
(191, 0x8c7e047e0701000000c30400),
(191, 0x8e7e057e0701000000241900),
(191, 0x8f7e057e0701000000241900),
(191, 0x907e037e0601000000c30400),
(191, 0x947e027e0701000000da0600),
(191, 0x947e037e0701000000db0600),
(191, 0x907e047e0701000000c30400),
(191, 0x907e077e0701000000251900),
(191, 0x937e067e0701000000da0600),
(191, 0x937e077e0701000000db0600),
(191, 0x947e067e0701000000da0600),
(191, 0x947e077e0701000000db0600),
(191, 0x927e087e0701000000241900),
(192, 0x587ec37d0801000000da0600),
(192, 0x597ec37d0801000000da0600),
(192, 0x587ec67d0601000000da0600),
(192, 0x587ec77d0601000000db0600),
(192, 0x5b7ec57d0601000000c60400),
(192, 0x5b7ec57d0701000000c60400),
(192, 0x587ec47d0801000000db0600),
(192, 0x587ec67d0801000000e00600),
(192, 0x597ec47d0801000000db0600),
(192, 0x597ec67d0801000000e10600),
(192, 0x5b7ec47d0801000000c40400),
(192, 0x5b7ec77d0801000000c30400),
(192, 0x5d7ec67d0601000000da0600),
(192, 0x5d7ec77d0601000000db0600),
(192, 0x5c7ec57d070100000013070602006f69121110ec5d1305004c6f62757300),
(192, 0x5e7ec47d0801000000c40400),
(192, 0x5e7ec77d0801000000c40400),
(192, 0x587ec87d0601000000da0600),
(192, 0x587ec97d0601000000db0600),
(192, 0x5a7ec97d0601000000c30400),
(192, 0x597ecb7d0701000000c60400),
(192, 0x5a7ec97d0801000000130700),
(192, 0x5e7ec97d0601000000c50400),
(192, 0x5c7ecb7d0701000000c60400),
(192, 0x5d7ec97d0801000000c60400),
(192, 0x577ecc7d0601000000e00600),
(192, 0x587ecc7d0601000000e10600),
(192, 0x5a7ece7d0701000000670600),
(192, 0x5b7ecf7d0801000000c30400),
(192, 0x5d7ecd7d0601000000c40400),
(192, 0x607ec37d0801000000da0600),
(192, 0x617ec37d0801000000da0600),
(192, 0x607ec47d0801000000db0600),
(192, 0x607ec67d0801000000e00600),
(192, 0x617ec47d0801000000db0600),
(192, 0x617ec67d0801000000e10600),
(192, 0x597ed07d0601000000da0600),
(192, 0x597ed17d0601000000db0600),
(192, 0x5d7ed07d0601000000c40400),
(192, 0x5e7ed27d0601000000c60400),
(192, 0x5c7ed47d0701000000c60400),
(192, 0x5d7ed47d0701000000c60400),
(194, 0x9b7eda7d0701000000da0600),
(194, 0x9b7edb7d0701000000db0600),
(194, 0x9f7edb7d0701000000271900),
(194, 0x9f7edc7d0701000000c30400),
(195, 0x9b7ede7d0701000000da0600),
(195, 0x9b7edf7d0701000000db0600),
(195, 0x9f7edf7d0701000000c30400),
(195, 0x9f7ee07d0701000000271900),
(196, 0x9b7ee27d0701000000da0600),
(196, 0x9b7ee37d0701000000db0600),
(196, 0x9f7ee27d0701000000c30400),
(196, 0x9c7ee57d0701000000261900),
(196, 0x9e7ee57d0701000000261900),
(196, 0x9f7ee47d0701000000271900),
(197, 0xa47ee87d0701000000da0600),
(197, 0xa47ee97d0701000000db0600),
(197, 0xa57ee97d0701000000271900),
(197, 0xa57eeb7d0701000000271900),
(197, 0xa37eec7d0701000000c50400),
(198, 0x9e7ee87d0701000000e00600),
(198, 0x9e7ee97d0701000000e00600),
(198, 0x9f7ee87d0701000000e10600),
(198, 0x9f7ee97d0701000000e10600),
(198, 0x9d7eec7d0701000000c50400),
(198, 0xa07ee97d0701000000271900),
(198, 0xa07eeb7d0701000000271900),
(199, 0x9d7eef7d0701000000c50400),
(199, 0x9e7ef07d0701000000e00600),
(199, 0x9e7ef17d0701000000e00600),
(199, 0x9f7ef07d0701000000e10600),
(199, 0x9f7ef17d0701000000e10600),
(199, 0x9d7ef47d0701000000261900),
(199, 0xa07ef17d0701000000271900),
(199, 0xa07ef37d0701000000271900),
(200, 0xa37eef7d0701000000c50400),
(200, 0xa47ef07d0701000000da0600),
(200, 0xa47ef17d0701000000db0600),
(200, 0xa57ef17d0701000000271900),
(200, 0xa57ef37d0701000000271900),
(200, 0xa37ef47d0701000000261900),
(201, 0xd5805e7d0501000000da0600),
(201, 0xd5805f7d0501000000db0600),
(201, 0xd7805f7d0701000000c30400),
(201, 0xd8805f7d0501000000c30400),
(201, 0xdc805f7d0501000000c30400),
(201, 0xdf805e7d0501000000da0600),
(201, 0xdf805f7d0501000000db0600),
(201, 0xdc805f7d0701000000c40400),
(201, 0xde805e7d0701000000e00600),
(201, 0xdf805e7d0701000000e10600),
(201, 0xd580617d0501000000da0600),
(201, 0xd580627d0501000000db0600),
(201, 0xd480607d0601000000c30400),
(201, 0xd780637d0601000000c50400),
(201, 0xd680637d0701000000c50400),
(201, 0xd780627d0701000000c30400),
(201, 0xd880627d0501000000c30400),
(201, 0xda80637d0501000000c50400),
(201, 0xda80607d0601000000c30400),
(201, 0xdc80627d0501000000c40400),
(201, 0xdf80617d0501000000da0600),
(201, 0xdf80627d0501000000db0600),
(201, 0xdd80637d0601000000c50400),
(201, 0xde80607d0701000000e00600),
(201, 0xdf80607d0701000000e10600),
(201, 0xdc80657d0501000000c30400),
(201, 0xdf80647d0501000000da0600),
(201, 0xdf80657d0501000000db0600),
(201, 0xdf80677d0501000000da0600),
(201, 0xd580687d0701000000e00600),
(201, 0xd680687d0701000000e10600),
(201, 0xdc80687d0501000000c30400),
(201, 0xdf80687d0501000000db0600);

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote`
--

CREATE TABLE `znote` (
  `id` int(10) NOT NULL AUTO_INCREMENT,
  `version` varchar(30) NOT NULL COMMENT 'Znote AAC version',
  `installed` int(10) NOT NULL,
  `cached` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Extraindo dados da tabela `znote`
--

INSERT INTO `znote` (`id`, `version`, `installed`, `cached`) VALUES
(1, '$version', 0, NULL);

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_accounts`
--

CREATE TABLE `znote_accounts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `account_id` int(11) NOT NULL,
  `ip` int(10) unsigned NOT NULL,
  `created` int(10) NOT NULL,
  `points` int(10) DEFAULT '0',
  `cooldown` int(10) DEFAULT '0',
  `active` tinyint(4) NOT NULL DEFAULT '0',
  `activekey` int(11) NOT NULL DEFAULT '0',
  `flag` varchar(20) NOT NULL,
  `secret` char(16) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Extraindo dados da tabela `znote_accounts`
--

INSERT INTO `znote_accounts` (`id`, `account_id`, `ip`, `created`, `points`, `cooldown`, `active`, `activekey`, `flag`, `secret`) VALUES
(1, 1, 0, 0, 0, 0, 0, 0, '', NULL),
(2, 1, 0, 1556718208, 0, 0, 1, 462142789, 'pl', NULL);

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_changelog`
--

CREATE TABLE `znote_changelog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `text` varchar(255) NOT NULL,
  `time` int(11) NOT NULL,
  `report_id` int(11) NOT NULL,
  `status` tinyint(3) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_deleted_characters`
--

CREATE TABLE `znote_deleted_characters` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `original_account_id` int(11) NOT NULL,
  `character_name` varchar(255) NOT NULL,
  `time` datetime NOT NULL,
  `done` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_forum`
--

CREATE TABLE `znote_forum` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `access` tinyint(4) NOT NULL,
  `closed` tinyint(4) NOT NULL,
  `hidden` tinyint(4) NOT NULL,
  `guild_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=5 ;

--
-- Extraindo dados da tabela `znote_forum`
--

INSERT INTO `znote_forum` (`id`, `name`, `access`, `closed`, `hidden`, `guild_id`) VALUES
(1, 'Staff Board', 4, 0, 0, 0),
(2, 'Tutors Board', 2, 0, 0, 0),
(3, 'Discussion', 1, 0, 0, 0),
(4, 'Feedback', 1, 0, 1, 0);

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_forum_posts`
--

CREATE TABLE `znote_forum_posts` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `thread_id` int(11) NOT NULL,
  `player_id` int(11) NOT NULL,
  `player_name` varchar(50) NOT NULL,
  `text` text NOT NULL,
  `created` int(11) NOT NULL,
  `updated` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_forum_threads`
--

CREATE TABLE `znote_forum_threads` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `forum_id` int(11) NOT NULL,
  `player_id` int(11) NOT NULL,
  `player_name` varchar(50) NOT NULL,
  `title` varchar(50) NOT NULL,
  `text` text NOT NULL,
  `created` int(11) NOT NULL,
  `updated` int(11) NOT NULL,
  `sticky` tinyint(4) NOT NULL,
  `hidden` tinyint(4) NOT NULL,
  `closed` tinyint(4) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_global_storage`
--

CREATE TABLE `znote_global_storage` (
  `key` varchar(32) NOT NULL,
  `value` text NOT NULL,
  UNIQUE KEY `key` (`key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_guild_wars`
--

CREATE TABLE `znote_guild_wars` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `limit` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_images`
--

CREATE TABLE `znote_images` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(40) NOT NULL,
  `desc` text NOT NULL,
  `date` int(11) NOT NULL,
  `status` int(11) NOT NULL,
  `image` varchar(30) NOT NULL,
  `account_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_news`
--

CREATE TABLE `znote_news` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  `text` text NOT NULL,
  `date` int(11) NOT NULL,
  `pid` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_paygol`
--

CREATE TABLE `znote_paygol` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `account_id` int(11) NOT NULL,
  `price` int(11) NOT NULL,
  `points` int(11) NOT NULL,
  `message_id` varchar(255) NOT NULL,
  `service_id` varchar(255) NOT NULL,
  `shortcode` varchar(255) NOT NULL,
  `keyword` varchar(255) NOT NULL,
  `message` varchar(255) NOT NULL,
  `sender` varchar(255) NOT NULL,
  `operator` varchar(255) NOT NULL,
  `country` varchar(255) NOT NULL,
  `currency` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_paypal`
--

CREATE TABLE `znote_paypal` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `txn_id` varchar(30) NOT NULL,
  `email` varchar(255) NOT NULL,
  `accid` int(11) NOT NULL,
  `price` int(11) NOT NULL,
  `points` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_players`
--

CREATE TABLE `znote_players` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `player_id` int(11) NOT NULL,
  `created` int(11) NOT NULL,
  `hide_char` tinyint(4) NOT NULL,
  `comment` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=3 ;

--
-- Extraindo dados da tabela `znote_players`
--

INSERT INTO `znote_players` (`id`, `player_id`, `created`, `hide_char`, `comment`) VALUES
(1, 1, 0, 0, ''),
(2, 1, 1556718267, 0, '');

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_player_reports`
--

CREATE TABLE `znote_player_reports` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `posx` int(6) NOT NULL,
  `posy` int(6) NOT NULL,
  `posz` int(6) NOT NULL,
  `report_description` varchar(255) NOT NULL,
  `date` int(11) NOT NULL,
  `status` tinyint(3) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_shop`
--

CREATE TABLE `znote_shop` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `type` int(11) NOT NULL,
  `itemid` int(11) DEFAULT NULL,
  `count` int(11) NOT NULL DEFAULT '1',
  `description` varchar(255) NOT NULL,
  `points` int(11) NOT NULL DEFAULT '10',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_shop_logs`
--

CREATE TABLE `znote_shop_logs` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `account_id` int(11) NOT NULL,
  `player_id` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `itemid` int(11) NOT NULL,
  `count` int(11) NOT NULL,
  `points` int(11) NOT NULL,
  `time` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_shop_orders`
--

CREATE TABLE `znote_shop_orders` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `account_id` int(11) NOT NULL,
  `type` int(11) NOT NULL,
  `itemid` int(11) NOT NULL,
  `count` int(11) NOT NULL,
  `time` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_tickets`
--

CREATE TABLE `znote_tickets` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `owner` int(11) NOT NULL,
  `username` varchar(32) CHARACTER SET latin1 NOT NULL,
  `subject` text CHARACTER SET latin1 NOT NULL,
  `message` text CHARACTER SET latin1 NOT NULL,
  `ip` int(11) NOT NULL,
  `creation` int(11) NOT NULL,
  `status` varchar(20) CHARACTER SET latin1 NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_tickets_replies`
--

CREATE TABLE `znote_tickets_replies` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tid` int(11) NOT NULL,
  `username` varchar(32) CHARACTER SET latin1 NOT NULL,
  `message` text CHARACTER SET latin1 NOT NULL,
  `created` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_visitors`
--

CREATE TABLE `znote_visitors` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` int(11) NOT NULL,
  `value` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Estrutura da tabela `znote_visitors_details`
--

CREATE TABLE `znote_visitors_details` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` int(11) NOT NULL,
  `time` int(11) NOT NULL,
  `type` tinyint(4) NOT NULL,
  `account_id` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--
-- Restrições para as tabelas dumpadas
--

--
-- Restrições para a tabela `account_bans`
--
ALTER TABLE `account_bans`
  ADD CONSTRAINT `account_bans_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `account_bans_ibfk_2` FOREIGN KEY (`banned_by`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Restrições para a tabela `account_ban_history`
--
ALTER TABLE `account_ban_history`
  ADD CONSTRAINT `account_ban_history_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `account_ban_history_ibfk_2` FOREIGN KEY (`banned_by`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Restrições para a tabela `account_viplist`
--
ALTER TABLE `account_viplist`
  ADD CONSTRAINT `account_viplist_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `account_viplist_ibfk_2` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `guilds`
--
ALTER TABLE `guilds`
  ADD CONSTRAINT `guilds_ibfk_1` FOREIGN KEY (`ownerid`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `guildwar_kills`
--
ALTER TABLE `guildwar_kills`
  ADD CONSTRAINT `guildwar_kills_ibfk_1` FOREIGN KEY (`warid`) REFERENCES `guild_wars` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `guild_invites`
--
ALTER TABLE `guild_invites`
  ADD CONSTRAINT `guild_invites_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `guild_invites_ibfk_2` FOREIGN KEY (`guild_id`) REFERENCES `guilds` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `guild_membership`
--
ALTER TABLE `guild_membership`
  ADD CONSTRAINT `guild_membership_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `guild_membership_ibfk_2` FOREIGN KEY (`guild_id`) REFERENCES `guilds` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `guild_membership_ibfk_3` FOREIGN KEY (`rank_id`) REFERENCES `guild_ranks` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Restrições para a tabela `guild_ranks`
--
ALTER TABLE `guild_ranks`
  ADD CONSTRAINT `guild_ranks_ibfk_1` FOREIGN KEY (`guild_id`) REFERENCES `guilds` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `house_lists`
--
ALTER TABLE `house_lists`
  ADD CONSTRAINT `house_lists_ibfk_1` FOREIGN KEY (`house_id`) REFERENCES `houses` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `ip_bans`
--
ALTER TABLE `ip_bans`
  ADD CONSTRAINT `ip_bans_ibfk_1` FOREIGN KEY (`banned_by`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Restrições para a tabela `market_history`
--
ALTER TABLE `market_history`
  ADD CONSTRAINT `market_history_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `market_offers`
--
ALTER TABLE `market_offers`
  ADD CONSTRAINT `market_offers_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `players`
--
ALTER TABLE `players`
  ADD CONSTRAINT `players_ibfk_1` FOREIGN KEY (`account_id`) REFERENCES `accounts` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `player_bans`
--
ALTER TABLE `player_bans`
  ADD CONSTRAINT `player_bans_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `player_bans_ibfk_2` FOREIGN KEY (`banned_by`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Restrições para a tabela `player_deaths`
--
ALTER TABLE `player_deaths`
  ADD CONSTRAINT `player_deaths_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `player_depotitems`
--
ALTER TABLE `player_depotitems`
  ADD CONSTRAINT `player_depotitems_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `player_inboxitems`
--
ALTER TABLE `player_inboxitems`
  ADD CONSTRAINT `player_inboxitems_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `player_items`
--
ALTER TABLE `player_items`
  ADD CONSTRAINT `player_items_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `player_namelocks`
--
ALTER TABLE `player_namelocks`
  ADD CONSTRAINT `player_namelocks_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `player_namelocks_ibfk_2` FOREIGN KEY (`namelocked_by`) REFERENCES `players` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Restrições para a tabela `player_spells`
--
ALTER TABLE `player_spells`
  ADD CONSTRAINT `player_spells_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `player_storage`
--
ALTER TABLE `player_storage`
  ADD CONSTRAINT `player_storage_ibfk_1` FOREIGN KEY (`player_id`) REFERENCES `players` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `tile_store`
--
ALTER TABLE `tile_store`
  ADD CONSTRAINT `tile_store_ibfk_1` FOREIGN KEY (`house_id`) REFERENCES `houses` (`id`) ON DELETE CASCADE;

--
-- Restrições para a tabela `znote_guild_wars`
--
ALTER TABLE `znote_guild_wars`
  ADD CONSTRAINT `znote_guild_wars_ibfk_1` FOREIGN KEY (`id`) REFERENCES `guild_wars` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
